{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/SortingVisualizer.js\";\n/**\n * Advanced Sorting Algorithm Visualization Platform\n * Main Visualization Component\n * \n * This component orchestrates algorithm execution, visualization rendering,\n * and interactive controls for educational exploration of sorting algorithms.\n * It implements a comprehensive visualization architecture with configurable\n * rendering strategies, adaptive display modes, and algorithm-specific visualizations.\n * \n * @module SortingVisualizer\n * @author Advanced Algorithm Visualization Team\n * @version 2.0.0\n */\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { WebGLRenderer } from '../visualization/renderers/webgl-renderer';\nimport { ArrayRenderer } from '../visualization/renderers/array-renderer';\nimport { generateDataSet } from '../data/generators';\nimport HeapVisualizer from '../visualization/components/HeapVisualizer';\nimport './SortingVisualizer.css';\n\n/**\n * SortingVisualizer Component\n * \n * Renders an interactive sorting algorithm visualization interface\n * with configurable algorithm selection, data generation, execution controls,\n * and specialized visualization modes for different algorithm types.\n * \n * @param {Object} props - Component properties\n * @param {Object} props.algorithm - Algorithm instance to visualize\n * @param {Object} props.options - Visualization configuration options\n * @param {number} props.width - Canvas width\n * @param {number} props.height - Canvas height\n */\nconst SortingVisualizer = ({\n  algorithm,\n  options = {},\n  width = 800,\n  height = 400\n}) => {\n  var _metrics$comparisons, _metrics$swaps, _ref, _metrics$executionTim;\n  // Canvas references\n  const canvasRef = useRef(null);\n  const fallbackCanvasRef = useRef(null);\n\n  // Visualization state\n  const [renderer, setRenderer] = useState(null);\n  const [data, setData] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [totalSteps, setTotalSteps] = useState(0);\n  const [playbackSpeed, setPlaybackSpeed] = useState(1);\n  const [metrics, setMetrics] = useState({});\n  const [selectedDataSet, setSelectedDataSet] = useState('random');\n  const [dataSize, setDataSize] = useState(30);\n  const [renderMode, setRenderMode] = useState('webgl');\n\n  // Additional visualization state\n  const [heapStructure, setHeapStructure] = useState(null);\n  const [showHeapView, setShowHeapView] = useState(false);\n  const [currentStepData, setCurrentStepData] = useState(null);\n  const [algorithmType, setAlgorithmType] = useState('comparison');\n\n  // Animation references\n  const animationRef = useRef(null);\n  const stepHistoryRef = useRef([]);\n\n  /**\n   * Detects the algorithm type to configure appropriate visualizations\n   * \n   * @param {Object} algorithmInstance - The algorithm to analyze\n   */\n  const detectAlgorithmType = useCallback(algorithmInstance => {\n    if (!algorithmInstance) return 'comparison';\n\n    // Determine algorithm type based on name and category\n    const name = algorithmInstance.name || '';\n    const category = algorithmInstance.category || '';\n    if (name === 'Heap Sort' || name.toLowerCase().includes('heap')) {\n      setShowHeapView(true);\n      return 'heap';\n    } else if (category === 'distribution' || name.toLowerCase().includes('bucket') || name.toLowerCase().includes('counting') || name.toLowerCase().includes('radix')) {\n      return 'distribution';\n    } else if (category === 'network' || name.toLowerCase().includes('bitonic') || name.toLowerCase().includes('merge-network')) {\n      return 'network';\n    } else if (name.toLowerCase().includes('selection') || name.toLowerCase().includes('quickselect') || name.toLowerCase().includes('median')) {\n      return 'selection';\n    }\n    return 'comparison';\n  }, []);\n\n  /**\n   * Initialize the renderer with current options and canvas references\n   */\n  const initializeRenderer = useCallback(() => {\n    const canvas = canvasRef.current;\n    const fallbackCanvas = fallbackCanvasRef.current;\n    if (!canvas || !fallbackCanvas) return;\n    try {\n      let newRenderer;\n      if (renderMode === 'webgl') {\n        try {\n          newRenderer = new WebGLRenderer(canvas, {\n            ...options,\n            maxElements: 100000,\n            colorScheme: options.colorScheme || 'spectrum',\n            barWidth: options.barWidth || 4,\n            spacing: options.spacing || 1\n          });\n\n          // Hide fallback canvas\n          canvas.style.display = 'block';\n          fallbackCanvas.style.display = 'none';\n        } catch (e) {\n          console.warn('WebGL renderer initialization failed, falling back to Canvas renderer', e);\n          setRenderMode('canvas');\n          throw e; // Force fallback\n        }\n      }\n      if (renderMode === 'canvas') {\n        newRenderer = new ArrayRenderer(fallbackCanvas, {\n          ...options,\n          maxElements: 10000,\n          colorScheme: options.colorScheme || 'spectrum',\n          barWidth: options.barWidth || 4,\n          spacing: options.spacing || 1\n        });\n\n        // Hide WebGL canvas\n        canvas.style.display = 'none';\n        fallbackCanvas.style.display = 'block';\n      }\n      setRenderer(newRenderer);\n\n      // Update data if we have it\n      if (data.length > 0 && newRenderer) {\n        newRenderer.setData(data);\n      }\n    } catch (e) {\n      console.error('Failed to initialize renderer', e);\n    }\n  }, [data, options, renderMode]);\n\n  /**\n   * Generate initial data based on selected parameters\n   */\n  const generateInitialData = useCallback(() => {\n    const newData = generateDataSet(selectedDataSet, dataSize, {\n      min: 1,\n      max: 100,\n      ...options\n    });\n    setData(newData);\n    if (renderer) {\n      renderer.setData(newData);\n    }\n  }, [dataSize, options, renderer, selectedDataSet]);\n\n  // Initialize renderer and data\n  useEffect(() => {\n    // Initialize algorithm type\n    const detectedType = detectAlgorithmType(algorithm);\n    setAlgorithmType(detectedType);\n\n    // Initialize data\n    generateInitialData();\n\n    // Initialize renderer\n    initializeRenderer();\n\n    // Window resize event\n    const handleResize = () => {\n      if (renderer) {\n        renderer.resize();\n      }\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (renderer) {\n        renderer.dispose();\n      }\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Update renderer when options or render mode changes\n  useEffect(() => {\n    if (renderer) {\n      renderer.setOptions({\n        colorScheme: options.colorScheme || 'spectrum',\n        barWidth: options.barWidth || 4,\n        spacing: options.spacing || 1,\n        ...options\n      });\n    }\n  }, [options, renderer]);\n\n  // Update data when algorithm execution completes\n  useEffect(() => {\n    if (algorithm && data.length > 0) {\n      executeAlgorithm();\n    }\n  }, [algorithm, data.length, selectedDataSet, dataSize]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Detect if algorithm is Heap Sort to enable heap visualization\n  useEffect(() => {\n    if (algorithm) {\n      const detectedType = detectAlgorithmType(algorithm);\n      setAlgorithmType(detectedType);\n      setShowHeapView(detectedType === 'heap');\n    }\n  }, [algorithm]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Update heap structure when step changes\n  useEffect(() => {\n    if (currentStepData && currentStepData.heapStructure) {\n      setHeapStructure(currentStepData.heapStructure);\n    } else if (currentStepData && currentStepData.heap_structure) {\n      // Handle Python-style property naming\n      setHeapStructure(currentStepData.heap_structure);\n    } else if (showHeapView && currentStep === 0) {\n      // Reset heap view when returning to first step\n      setHeapStructure(null);\n    }\n  }, [currentStepData, showHeapView, currentStep]);\n\n  /**\n   * Execute the current algorithm on the data\n   */\n  const executeAlgorithm = useCallback(async () => {\n    if (!algorithm || data.length === 0) return;\n\n    // Reset visualization state\n    setIsPlaying(false);\n    setCurrentStep(0);\n    stepHistoryRef.current = [];\n    setHeapStructure(null);\n\n    // Clone the data to avoid mutation issues\n    const dataToSort = [...data];\n    try {\n      // Execute algorithm with instrumentation\n      const startTime = performance.now();\n      const result = await algorithm.execute(dataToSort, {\n        onStep: step => {\n          stepHistoryRef.current.push(step);\n        }\n      });\n      const endTime = performance.now();\n\n      // Update state with results\n      setMetrics({\n        ...algorithm.getMetrics(),\n        executionTime: endTime - startTime\n      });\n      setTotalSteps(stepHistoryRef.current.length);\n\n      // Update renderer with sorted data\n      if (renderer) {\n        renderer.setData(result);\n      }\n    } catch (error) {\n      console.error('Algorithm execution failed', error);\n    }\n  }, [algorithm, data, renderer]);\n\n  /**\n   * Handle step navigation (forward/backward)\n   * \n   * @param {number} step - Target step index\n   */\n  const navigateStep = useCallback(step => {\n    if (step < 0 || step >= stepHistoryRef.current.length) return;\n    setCurrentStep(step);\n    const stepData = stepHistoryRef.current[step];\n    setCurrentStepData(stepData);\n    if (renderer && stepData) {\n      // Update renderer with current step data\n      renderer.setData(stepData.array, false);\n\n      // Highlight relevant elements\n      if (stepData.type === 'comparison' && stepData.indices) {\n        renderer.markComparing(stepData.indices);\n      } else if (stepData.type === 'swap' && stepData.indices) {\n        renderer.highlight(stepData.indices);\n      } else if (stepData.type === 'sorted' && stepData.indices) {\n        renderer.markSorted(stepData.indices);\n      } else if (stepData.type === 'heapify' && stepData.node !== undefined) {\n        // For heap sort, highlight the current node being heapified\n        renderer.highlight([stepData.node]);\n\n        // Also highlight children if available\n        if (stepData.children && stepData.children.length) {\n          renderer.markComparing(stepData.children);\n        }\n      } else if (stepData.type === 'heapify-swap' && stepData.indices) {\n        renderer.highlight(stepData.indices);\n      }\n    }\n  }, [renderer]);\n\n  /**\n   * Start or stop animation playback\n   */\n  const togglePlayback = useCallback(() => {\n    const newPlayingState = !isPlaying;\n    setIsPlaying(newPlayingState);\n    if (newPlayingState) {\n      // Start animation\n      const lastTimestamp = performance.now();\n      const animate = timestamp => {\n        if (!isPlaying) return;\n\n        // Control animation speed\n        const elapsed = timestamp - lastTimestamp;\n        if (elapsed > 1000 / (playbackSpeed * 10)) {\n          // Time to advance step\n          const nextStep = (currentStep + 1) % (totalSteps || 1);\n          if (nextStep === 0) {\n            // Reached the end, stop playback\n            setIsPlaying(false);\n            return;\n          }\n          navigateStep(nextStep);\n        }\n        animationRef.current = requestAnimationFrame(animate);\n      };\n      animationRef.current = requestAnimationFrame(animate);\n    } else {\n      // Stop animation\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    }\n  }, [currentStep, isPlaying, navigateStep, playbackSpeed, totalSteps]);\n\n  /**\n   * Change the data set type\n   * \n   * @param {Event} event - Change event\n   */\n  const handleDataSetChange = useCallback(event => {\n    setSelectedDataSet(event.target.value);\n  }, []);\n\n  /**\n   * Change the data set size\n   * \n   * @param {Event} event - Change event\n   */\n  const handleSizeChange = useCallback(event => {\n    setDataSize(parseInt(event.target.value));\n  }, []);\n\n  /**\n   * Regenerate data with current settings\n   */\n  const handleRegenerateData = useCallback(() => {\n    generateInitialData();\n  }, [generateInitialData]);\n\n  /**\n   * Change the render mode\n   * \n   * @param {Event} event - Change event\n   */\n  const handleRenderModeChange = useCallback(event => {\n    setRenderMode(event.target.value);\n\n    // We need to initialize a new renderer\n    setTimeout(() => {\n      initializeRenderer();\n    }, 0);\n  }, [initializeRenderer]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sorting-visualizer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"visualization-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: height,\n    className: \"visualization-canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: fallbackCanvasRef,\n    width: width,\n    height: height,\n    className: \"visualization-canvas fallback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 9\n    }\n  }), algorithm && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"algorithm-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 13\n    }\n  }, algorithm.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 15\n    }\n  }, \"Time: \", algorithm.getComplexity().time.average), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 15\n    }\n  }, \"Space: \", algorithm.getComplexity().space.average), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 15\n    }\n  }, \"Stable: \", algorithm.isStable() ? 'Yes' : 'No'))), showHeapView && heapStructure && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heap-view-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }\n  }, \"Binary Heap Structure\"), /*#__PURE__*/React.createElement(HeapVisualizer, {\n    heapStructure: heapStructure,\n    width: width,\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playback-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateStep(0),\n    disabled: currentStep === 0 || isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"First Step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 13\n    }\n  }, \"\\u23EE\\uFE0F\"), \" First\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateStep(currentStep - 1),\n    disabled: currentStep === 0 || isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"Previous Step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 13\n    }\n  }, \"\\u23EA\"), \" Prev\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: togglePlayback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 11\n    }\n  }, isPlaying ? /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"Pause\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 15\n    }\n  }, \"\\u23F8\\uFE0F\") : /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"Play\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 15\n    }\n  }, \"\\u25B6\\uFE0F\"), \" \", isPlaying ? 'Pause' : 'Play'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateStep(currentStep + 1),\n    disabled: currentStep >= totalSteps - 1 || isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"Next Step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }\n  }, \"\\u23E9\"), \" Next\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateStep(totalSteps - 1),\n    disabled: currentStep >= totalSteps - 1 || isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"Last Step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 13\n    }\n  }, \"\\u23ED\\uFE0F\"), \" Last\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"speed-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 11\n    }\n  }, \"Speed: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0.1\",\n    max: \"10\",\n    step: \"0.1\",\n    value: playbackSpeed,\n    onChange: e => setPlaybackSpeed(parseFloat(e.target.value)),\n    disabled: isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 11\n    }\n  }, playbackSpeed.toFixed(1), \"x\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-indicator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-counter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 11\n    }\n  }, \"Step: \", currentStep, \" / \", totalSteps), /*#__PURE__*/React.createElement(\"progress\", {\n    value: currentStep,\n    max: totalSteps || 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }\n  }, \"Data Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedDataSet,\n    onChange: handleDataSetChange,\n    disabled: isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"random\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 15\n    }\n  }, \"Random\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"nearly-sorted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 15\n    }\n  }, \"Nearly Sorted\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"reversed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 15\n    }\n  }, \"Reversed\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"few-unique\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 15\n    }\n  }, \"Few Unique Values\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sorted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 15\n    }\n  }, \"Already Sorted\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sawtooth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 15\n    }\n  }, \"Sawtooth Pattern\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 13\n    }\n  }, \"Size:\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: dataSize,\n    onChange: handleSizeChange,\n    disabled: isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 15\n    }\n  }, \"Tiny (10)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 15\n    }\n  }, \"Small (30)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 15\n    }\n  }, \"Medium (50)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 15\n    }\n  }, \"Large (100)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"250\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 15\n    }\n  }, \"X-Large (250)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 15\n    }\n  }, \"Huge (1,000)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 15\n    }\n  }, \"Extreme (10,000)\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 13\n    }\n  }, \"Renderer:\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: renderMode,\n    onChange: handleRenderModeChange,\n    disabled: isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"webgl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 15\n    }\n  }, \"WebGL (Fast)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 15\n    }\n  }, \"Canvas (Compatible)\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleRegenerateData,\n    disabled: isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 11\n    }\n  }, \"Regenerate Data\")), metrics && Object.keys(metrics).length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metrics-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 13\n    }\n  }, \"Performance Metrics\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metrics-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 17\n    }\n  }, \"Comparisons:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 17\n    }\n  }, (_metrics$comparisons = metrics.comparisons) === null || _metrics$comparisons === void 0 ? void 0 : _metrics$comparisons.toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 17\n    }\n  }, \"Swaps:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 17\n    }\n  }, (_metrics$swaps = metrics.swaps) === null || _metrics$swaps === void 0 ? void 0 : _metrics$swaps.toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 17\n    }\n  }, \"Array Accesses:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 17\n    }\n  }, (_ref = metrics.reads + metrics.writes) === null || _ref === void 0 ? void 0 : _ref.toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 17\n    }\n  }, \"Execution Time:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 17\n    }\n  }, (_metrics$executionTim = metrics.executionTime) === null || _metrics$executionTim === void 0 ? void 0 : _metrics$executionTim.toFixed(2), \" ms\")))), currentStepData && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 13\n    }\n  }, \"Current Step\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 13\n    }\n  }, currentStepData.message || 'No message for this step'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 15\n    }\n  }, \"Type: \", currentStepData.type || 'unknown'), currentStepData.indices && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 17\n    }\n  }, \"Indices: \", currentStepData.indices.join(', '))))));\n};\nexport default SortingVisualizer;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","WebGLRenderer","ArrayRenderer","generateDataSet","HeapVisualizer","SortingVisualizer","algorithm","options","width","height","_metrics$comparisons","_metrics$swaps","_ref","_metrics$executionTim","canvasRef","fallbackCanvasRef","renderer","setRenderer","data","setData","isPlaying","setIsPlaying","currentStep","setCurrentStep","totalSteps","setTotalSteps","playbackSpeed","setPlaybackSpeed","metrics","setMetrics","selectedDataSet","setSelectedDataSet","dataSize","setDataSize","renderMode","setRenderMode","heapStructure","setHeapStructure","showHeapView","setShowHeapView","currentStepData","setCurrentStepData","algorithmType","setAlgorithmType","animationRef","stepHistoryRef","detectAlgorithmType","algorithmInstance","name","category","toLowerCase","includes","initializeRenderer","canvas","current","fallbackCanvas","newRenderer","maxElements","colorScheme","barWidth","spacing","style","display","e","console","warn","length","error","generateInitialData","newData","min","max","detectedType","handleResize","resize","window","addEventListener","removeEventListener","dispose","cancelAnimationFrame","setOptions","executeAlgorithm","heap_structure","dataToSort","startTime","performance","now","result","execute","onStep","step","push","endTime","getMetrics","executionTime","navigateStep","stepData","array","type","indices","markComparing","highlight","markSorted","node","undefined","children","togglePlayback","newPlayingState","lastTimestamp","animate","timestamp","elapsed","nextStep","requestAnimationFrame","handleDataSetChange","event","target","value","handleSizeChange","parseInt","handleRegenerateData","handleRenderModeChange","setTimeout","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","getComplexity","time","average","space","isStable","onClick","disabled","role","onChange","parseFloat","toFixed","Object","keys","comparisons","toLocaleString","swaps","reads","writes","message","join"],"sources":["/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/SortingVisualizer.js"],"sourcesContent":["/**\n * Advanced Sorting Algorithm Visualization Platform\n * Main Visualization Component\n * \n * This component orchestrates algorithm execution, visualization rendering,\n * and interactive controls for educational exploration of sorting algorithms.\n * It implements a comprehensive visualization architecture with configurable\n * rendering strategies, adaptive display modes, and algorithm-specific visualizations.\n * \n * @module SortingVisualizer\n * @author Advanced Algorithm Visualization Team\n * @version 2.0.0\n */\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { WebGLRenderer } from '../visualization/renderers/webgl-renderer';\nimport { ArrayRenderer } from '../visualization/renderers/array-renderer';\nimport { generateDataSet } from '../data/generators';\nimport HeapVisualizer from '../visualization/components/HeapVisualizer';\nimport './SortingVisualizer.css';\n\n/**\n * SortingVisualizer Component\n * \n * Renders an interactive sorting algorithm visualization interface\n * with configurable algorithm selection, data generation, execution controls,\n * and specialized visualization modes for different algorithm types.\n * \n * @param {Object} props - Component properties\n * @param {Object} props.algorithm - Algorithm instance to visualize\n * @param {Object} props.options - Visualization configuration options\n * @param {number} props.width - Canvas width\n * @param {number} props.height - Canvas height\n */\nconst SortingVisualizer = ({ \n  algorithm, \n  options = {},\n  width = 800,\n  height = 400\n}) => {\n  // Canvas references\n  const canvasRef = useRef(null);\n  const fallbackCanvasRef = useRef(null);\n  \n  // Visualization state\n  const [renderer, setRenderer] = useState(null);\n  const [data, setData] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [totalSteps, setTotalSteps] = useState(0);\n  const [playbackSpeed, setPlaybackSpeed] = useState(1);\n  const [metrics, setMetrics] = useState({});\n  const [selectedDataSet, setSelectedDataSet] = useState('random');\n  const [dataSize, setDataSize] = useState(30);\n  const [renderMode, setRenderMode] = useState('webgl');\n  \n  // Additional visualization state\n  const [heapStructure, setHeapStructure] = useState(null);\n  const [showHeapView, setShowHeapView] = useState(false);\n  const [currentStepData, setCurrentStepData] = useState(null);\n  const [algorithmType, setAlgorithmType] = useState('comparison');\n  \n  // Animation references\n  const animationRef = useRef(null);\n  const stepHistoryRef = useRef([]);\n\n  /**\n   * Detects the algorithm type to configure appropriate visualizations\n   * \n   * @param {Object} algorithmInstance - The algorithm to analyze\n   */\n  const detectAlgorithmType = useCallback((algorithmInstance) => {\n    if (!algorithmInstance) return 'comparison';\n    \n    // Determine algorithm type based on name and category\n    const name = algorithmInstance.name || '';\n    const category = algorithmInstance.category || '';\n    \n    if (name === 'Heap Sort' || name.toLowerCase().includes('heap')) {\n      setShowHeapView(true);\n      return 'heap';\n    } else if (category === 'distribution' || \n               name.toLowerCase().includes('bucket') || \n               name.toLowerCase().includes('counting') || \n               name.toLowerCase().includes('radix')) {\n      return 'distribution';\n    } else if (category === 'network' || \n               name.toLowerCase().includes('bitonic') || \n               name.toLowerCase().includes('merge-network')) {\n      return 'network';\n    } else if (name.toLowerCase().includes('selection') || \n               name.toLowerCase().includes('quickselect') || \n               name.toLowerCase().includes('median')) {\n      return 'selection';\n    }\n    \n    return 'comparison';\n  }, []);\n  \n  /**\n   * Initialize the renderer with current options and canvas references\n   */\n  const initializeRenderer = useCallback(() => {\n    const canvas = canvasRef.current;\n    const fallbackCanvas = fallbackCanvasRef.current;\n    \n    if (!canvas || !fallbackCanvas) return;\n    \n    try {\n      let newRenderer;\n      \n      if (renderMode === 'webgl') {\n        try {\n          newRenderer = new WebGLRenderer(canvas, {\n            ...options,\n            maxElements: 100000,\n            colorScheme: options.colorScheme || 'spectrum',\n            barWidth: options.barWidth || 4,\n            spacing: options.spacing || 1\n          });\n          \n          // Hide fallback canvas\n          canvas.style.display = 'block';\n          fallbackCanvas.style.display = 'none';\n        } catch (e) {\n          console.warn('WebGL renderer initialization failed, falling back to Canvas renderer', e);\n          setRenderMode('canvas');\n          throw e; // Force fallback\n        }\n      }\n      \n      if (renderMode === 'canvas') {\n        newRenderer = new ArrayRenderer(fallbackCanvas, {\n          ...options,\n          maxElements: 10000,\n          colorScheme: options.colorScheme || 'spectrum',\n          barWidth: options.barWidth || 4,\n          spacing: options.spacing || 1\n        });\n        \n        // Hide WebGL canvas\n        canvas.style.display = 'none';\n        fallbackCanvas.style.display = 'block';\n      }\n      \n      setRenderer(newRenderer);\n      \n      // Update data if we have it\n      if (data.length > 0 && newRenderer) {\n        newRenderer.setData(data);\n      }\n    } catch (e) {\n      console.error('Failed to initialize renderer', e);\n    }\n  }, [data, options, renderMode]);\n  \n  /**\n   * Generate initial data based on selected parameters\n   */\n  const generateInitialData = useCallback(() => {\n    const newData = generateDataSet(selectedDataSet, dataSize, {\n      min: 1,\n      max: 100,\n      ...options\n    });\n    \n    setData(newData);\n    \n    if (renderer) {\n      renderer.setData(newData);\n    }\n  }, [dataSize, options, renderer, selectedDataSet]);\n  \n  // Initialize renderer and data\n  useEffect(() => {\n    // Initialize algorithm type\n    const detectedType = detectAlgorithmType(algorithm);\n    setAlgorithmType(detectedType);\n    \n    // Initialize data\n    generateInitialData();\n    \n    // Initialize renderer\n    initializeRenderer();\n    \n    // Window resize event\n    const handleResize = () => {\n      if (renderer) {\n        renderer.resize();\n      }\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (renderer) {\n        renderer.dispose();\n      }\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  \n  // Update renderer when options or render mode changes\n  useEffect(() => {\n    if (renderer) {\n      renderer.setOptions({\n        colorScheme: options.colorScheme || 'spectrum',\n        barWidth: options.barWidth || 4,\n        spacing: options.spacing || 1,\n        ...options\n      });\n    }\n  }, [options, renderer]);\n  \n  // Update data when algorithm execution completes\n  useEffect(() => {\n    if (algorithm && data.length > 0) {\n      executeAlgorithm();\n    }\n  }, [algorithm, data.length, selectedDataSet, dataSize]); // eslint-disable-line react-hooks/exhaustive-deps\n  \n  // Detect if algorithm is Heap Sort to enable heap visualization\n  useEffect(() => {\n    if (algorithm) {\n      const detectedType = detectAlgorithmType(algorithm);\n      setAlgorithmType(detectedType);\n      setShowHeapView(detectedType === 'heap');\n    }\n  }, [algorithm]); // eslint-disable-line react-hooks/exhaustive-deps\n  \n  // Update heap structure when step changes\n  useEffect(() => {\n    if (currentStepData && currentStepData.heapStructure) {\n      setHeapStructure(currentStepData.heapStructure);\n    } else if (currentStepData && currentStepData.heap_structure) {\n      // Handle Python-style property naming\n      setHeapStructure(currentStepData.heap_structure);\n    } else if (showHeapView && currentStep === 0) {\n      // Reset heap view when returning to first step\n      setHeapStructure(null);\n    }\n  }, [currentStepData, showHeapView, currentStep]);\n  \n  /**\n   * Execute the current algorithm on the data\n   */\n  const executeAlgorithm = useCallback(async () => {\n    if (!algorithm || data.length === 0) return;\n    \n    // Reset visualization state\n    setIsPlaying(false);\n    setCurrentStep(0);\n    stepHistoryRef.current = [];\n    setHeapStructure(null);\n    \n    // Clone the data to avoid mutation issues\n    const dataToSort = [...data];\n    \n    try {\n      // Execute algorithm with instrumentation\n      const startTime = performance.now();\n      \n      const result = await algorithm.execute(dataToSort, {\n        onStep: (step) => {\n          stepHistoryRef.current.push(step);\n        }\n      });\n      \n      const endTime = performance.now();\n      \n      // Update state with results\n      setMetrics({\n        ...algorithm.getMetrics(),\n        executionTime: endTime - startTime\n      });\n      \n      setTotalSteps(stepHistoryRef.current.length);\n      \n      // Update renderer with sorted data\n      if (renderer) {\n        renderer.setData(result);\n      }\n      \n    } catch (error) {\n      console.error('Algorithm execution failed', error);\n    }\n  }, [algorithm, data, renderer]);\n  \n  /**\n   * Handle step navigation (forward/backward)\n   * \n   * @param {number} step - Target step index\n   */\n  const navigateStep = useCallback((step) => {\n    if (step < 0 || step >= stepHistoryRef.current.length) return;\n    \n    setCurrentStep(step);\n    \n    const stepData = stepHistoryRef.current[step];\n    setCurrentStepData(stepData);\n    \n    if (renderer && stepData) {\n      // Update renderer with current step data\n      renderer.setData(stepData.array, false);\n      \n      // Highlight relevant elements\n      if (stepData.type === 'comparison' && stepData.indices) {\n        renderer.markComparing(stepData.indices);\n      } else if (stepData.type === 'swap' && stepData.indices) {\n        renderer.highlight(stepData.indices);\n      } else if (stepData.type === 'sorted' && stepData.indices) {\n        renderer.markSorted(stepData.indices);\n      } else if (stepData.type === 'heapify' && stepData.node !== undefined) {\n        // For heap sort, highlight the current node being heapified\n        renderer.highlight([stepData.node]);\n        \n        // Also highlight children if available\n        if (stepData.children && stepData.children.length) {\n          renderer.markComparing(stepData.children);\n        }\n      } else if (stepData.type === 'heapify-swap' && stepData.indices) {\n        renderer.highlight(stepData.indices);\n      }\n    }\n  }, [renderer]);\n  \n  /**\n   * Start or stop animation playback\n   */\n  const togglePlayback = useCallback(() => {\n    const newPlayingState = !isPlaying;\n    setIsPlaying(newPlayingState);\n    \n    if (newPlayingState) {\n      // Start animation\n      const lastTimestamp = performance.now();\n      const animate = (timestamp) => {\n        if (!isPlaying) return;\n        \n        // Control animation speed\n        const elapsed = timestamp - lastTimestamp;\n        \n        if (elapsed > (1000 / (playbackSpeed * 10))) {\n          // Time to advance step\n          const nextStep = (currentStep + 1) % (totalSteps || 1);\n          \n          if (nextStep === 0) {\n            // Reached the end, stop playback\n            setIsPlaying(false);\n            return;\n          }\n          \n          navigateStep(nextStep);\n        }\n        \n        animationRef.current = requestAnimationFrame(animate);\n      };\n      \n      animationRef.current = requestAnimationFrame(animate);\n    } else {\n      // Stop animation\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    }\n  }, [currentStep, isPlaying, navigateStep, playbackSpeed, totalSteps]);\n  \n  /**\n   * Change the data set type\n   * \n   * @param {Event} event - Change event\n   */\n  const handleDataSetChange = useCallback((event) => {\n    setSelectedDataSet(event.target.value);\n  }, []);\n  \n  /**\n   * Change the data set size\n   * \n   * @param {Event} event - Change event\n   */\n  const handleSizeChange = useCallback((event) => {\n    setDataSize(parseInt(event.target.value));\n  }, []);\n  \n  /**\n   * Regenerate data with current settings\n   */\n  const handleRegenerateData = useCallback(() => {\n    generateInitialData();\n  }, [generateInitialData]);\n  \n  /**\n   * Change the render mode\n   * \n   * @param {Event} event - Change event\n   */\n  const handleRenderModeChange = useCallback((event) => {\n    setRenderMode(event.target.value);\n    \n    // We need to initialize a new renderer\n    setTimeout(() => {\n      initializeRenderer();\n    }, 0);\n  }, [initializeRenderer]);\n  \n  return (\n    <div className=\"sorting-visualizer\">\n      <div className=\"visualization-container\">\n        <canvas \n          ref={canvasRef}\n          width={width}\n          height={height}\n          className=\"visualization-canvas\"\n        />\n        <canvas\n          ref={fallbackCanvasRef}\n          width={width}\n          height={height}\n          className=\"visualization-canvas fallback\"\n        />\n        \n        {algorithm && (\n          <div className=\"algorithm-info\">\n            <h3>{algorithm.name}</h3>\n            <div className=\"complexity-info\">\n              <div>Time: {algorithm.getComplexity().time.average}</div>\n              <div>Space: {algorithm.getComplexity().space.average}</div>\n              <div>Stable: {algorithm.isStable() ? 'Yes' : 'No'}</div>\n            </div>\n          </div>\n        )}\n        \n        {/* Heap visualization when appropriate */}\n        {showHeapView && heapStructure && (\n          <div className=\"heap-view-container\">\n            <h4>Binary Heap Structure</h4>\n            <HeapVisualizer \n              heapStructure={heapStructure} \n              width={width} \n              height={300} \n            />\n          </div>\n        )}\n      </div>\n      \n      <div className=\"controls-container\">\n        <div className=\"playback-controls\">\n          <button \n            onClick={() => navigateStep(0)}\n            disabled={currentStep === 0 || isPlaying}\n          >\n            <span role=\"img\" aria-label=\"First Step\">⏮️</span> First\n          </button>\n          <button \n            onClick={() => navigateStep(currentStep - 1)}\n            disabled={currentStep === 0 || isPlaying}\n          >\n            <span role=\"img\" aria-label=\"Previous Step\">⏪</span> Prev\n          </button>\n          <button onClick={togglePlayback}>\n            {isPlaying ? \n              <span role=\"img\" aria-label=\"Pause\">⏸️</span> : \n              <span role=\"img\" aria-label=\"Play\">▶️</span>\n            } {isPlaying ? 'Pause' : 'Play'}\n          </button>\n          <button \n            onClick={() => navigateStep(currentStep + 1)}\n            disabled={currentStep >= totalSteps - 1 || isPlaying}\n          >\n            <span role=\"img\" aria-label=\"Next Step\">⏩</span> Next\n          </button>\n          <button \n            onClick={() => navigateStep(totalSteps - 1)}\n            disabled={currentStep >= totalSteps - 1 || isPlaying}\n          >\n            <span role=\"img\" aria-label=\"Last Step\">⏭️</span> Last\n          </button>\n        </div>\n        \n        <div className=\"speed-control\">\n          <label>Speed: </label>\n          <input\n            type=\"range\"\n            min=\"0.1\"\n            max=\"10\"\n            step=\"0.1\"\n            value={playbackSpeed}\n            onChange={(e) => setPlaybackSpeed(parseFloat(e.target.value))}\n            disabled={isPlaying}\n          />\n          <span>{playbackSpeed.toFixed(1)}x</span>\n        </div>\n        \n        <div className=\"progress-indicator\">\n          <div className=\"step-counter\">\n            Step: {currentStep} / {totalSteps}\n          </div>\n          <progress value={currentStep} max={totalSteps || 100} />\n        </div>\n        \n        <div className=\"data-controls\">\n          <div className=\"control-group\">\n            <label>Data Type:</label>\n            <select value={selectedDataSet} onChange={handleDataSetChange} disabled={isPlaying}>\n              <option value=\"random\">Random</option>\n              <option value=\"nearly-sorted\">Nearly Sorted</option>\n              <option value=\"reversed\">Reversed</option>\n              <option value=\"few-unique\">Few Unique Values</option>\n              <option value=\"sorted\">Already Sorted</option>\n              <option value=\"sawtooth\">Sawtooth Pattern</option>\n            </select>\n          </div>\n          \n          <div className=\"control-group\">\n            <label>Size:</label>\n            <select value={dataSize} onChange={handleSizeChange} disabled={isPlaying}>\n              <option value=\"10\">Tiny (10)</option>\n              <option value=\"30\">Small (30)</option>\n              <option value=\"50\">Medium (50)</option>\n              <option value=\"100\">Large (100)</option>\n              <option value=\"250\">X-Large (250)</option>\n              <option value=\"1000\">Huge (1,000)</option>\n              <option value=\"10000\">Extreme (10,000)</option>\n            </select>\n          </div>\n          \n          <div className=\"control-group\">\n            <label>Renderer:</label>\n            <select value={renderMode} onChange={handleRenderModeChange} disabled={isPlaying}>\n              <option value=\"webgl\">WebGL (Fast)</option>\n              <option value=\"canvas\">Canvas (Compatible)</option>\n            </select>\n          </div>\n          \n          <button onClick={handleRegenerateData} disabled={isPlaying}>\n            Regenerate Data\n          </button>\n        </div>\n        \n        {metrics && Object.keys(metrics).length > 0 && (\n          <div className=\"metrics-panel\">\n            <h4>Performance Metrics</h4>\n            <div className=\"metrics-grid\">\n              <div className=\"metric\">\n                <label>Comparisons:</label>\n                <span>{metrics.comparisons?.toLocaleString()}</span>\n              </div>\n              <div className=\"metric\">\n                <label>Swaps:</label>\n                <span>{metrics.swaps?.toLocaleString()}</span>\n              </div>\n              <div className=\"metric\">\n                <label>Array Accesses:</label>\n                <span>{(metrics.reads + metrics.writes)?.toLocaleString()}</span>\n              </div>\n              <div className=\"metric\">\n                <label>Execution Time:</label>\n                <span>{metrics.executionTime?.toFixed(2)} ms</span>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {currentStepData && (\n          <div className=\"step-info\">\n            <h4>Current Step</h4>\n            <div className=\"step-message\">{currentStepData.message || 'No message for this step'}</div>\n            <div className=\"step-details\">\n              <div>Type: {currentStepData.type || 'unknown'}</div>\n              {currentStepData.indices && (\n                <div>Indices: {currentStepData.indices.join(', ')}</div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SortingVisualizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}