{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/SortingVisualizer.js\";\n// src/components/SortingVisualizer.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { WebGLRenderer } from '../visualization/renderers/webgl-renderer';\nimport { ArrayRenderer } from '../visualization/renderers/array-renderer';\nimport { generateDataSet } from '../data/generators';\nimport HeapVisualizer from '../visualization/components/HeapVisualizer';\nimport './SortingVisualizer.css';\n\n// Fallback import mechanism for systems with case sensitivity issues\nlet HeapVisualizerComponent = HeapVisualizer;\nif (!HeapVisualizerComponent) {\n  try {\n    // eslint-disable-next-line import/first\n    HeapVisualizerComponent = require('../visualization/components/heap-visualizer').default;\n  } catch (e) {\n    console.error('Failed to import HeapVisualizer component:', e);\n    HeapVisualizerComponent = () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 37\n      }\n    }, \"Heap visualization unavailable\");\n  }\n}\n\n/**\n * SortingVisualizer Component\n * \n * A sophisticated visualization environment for sorting algorithms that provides\n * interactive, animated representations of algorithm execution with specialized\n * visualizations for different algorithm categories.\n * \n * The component implements a complex state management system to track algorithm\n * execution, visualization settings, and specialized data structures such as\n * binary heaps for advanced educational insights.\n * \n * @author Advanced Sorting Algorithm Visualization Platform\n * @version 2.0.0\n */\nconst SortingVisualizer = ({\n  algorithm,\n  options = {},\n  width = 800,\n  height = 400\n}) => {\n  var _metrics$comparisons, _metrics$swaps, _ref, _metrics$executionTim;\n  // Canvas references for rendering engines\n  const canvasRef = useRef(null);\n  const fallbackCanvasRef = useRef(null);\n\n  // Core visualization state\n  const [renderer, setRenderer] = useState(null);\n  const [data, setData] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [totalSteps, setTotalSteps] = useState(0);\n  const [playbackSpeed, setPlaybackSpeed] = useState(1);\n  const [metrics, setMetrics] = useState({});\n  const [selectedDataSet, setSelectedDataSet] = useState('random');\n  const [dataSize, setDataSize] = useState(30);\n  const [renderMode, setRenderMode] = useState('webgl');\n\n  // Specialized visualization state\n  const [heapStructure, setHeapStructure] = useState(null);\n  const [showHeapView, setShowHeapView] = useState(false);\n  const [currentStepData, setCurrentStepData] = useState(null);\n\n  // Animation references\n  const animationRef = useRef(null);\n  const stepHistoryRef = useRef([]);\n\n  /**\n   * Initialize renderer and data on component mount\n   * This effect establishes the visualization environment and configures\n   * event listeners for responsive rendering.\n   */\n  useEffect(() => {\n    // Initialize data\n    generateInitialData();\n\n    // Initialize renderer\n    initializeRenderer();\n\n    // Detect algorithm type to enable specialized visualizations\n    detectAlgorithmType();\n\n    // Window resize event handler for responsive visualization\n    const handleResize = () => {\n      if (renderer) {\n        renderer.resize();\n      }\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup function for proper resource management\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (renderer) {\n        renderer.dispose();\n      }\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []);\n\n  /**\n   * Update renderer configuration when options or render mode changes\n   * This effect ensures visualization settings are properly synchronized.\n   */\n  useEffect(() => {\n    if (renderer) {\n      renderer.setOptions({\n        colorScheme: options.colorScheme || 'spectrum',\n        barWidth: options.barWidth || 4,\n        spacing: options.spacing || 1,\n        ...options\n      });\n    }\n  }, [options, renderer]);\n\n  /**\n   * Execute algorithm when dependencies change\n   * This effect triggers algorithm execution with updated parameters.\n   */\n  useEffect(() => {\n    if (algorithm && data.length > 0) {\n      executeAlgorithm();\n    }\n  }, [algorithm, data.length, selectedDataSet, dataSize]);\n\n  /**\n   * Detect algorithm type to enable specialized visualizations\n   * This effect analyzes the algorithm to determine appropriate visualization strategies.\n   */\n  useEffect(() => {\n    detectAlgorithmType();\n  }, [algorithm]);\n\n  /**\n   * Update heap structure when step changes\n   * This effect updates specialized heap visualization data during execution.\n   */\n  useEffect(() => {\n    if (currentStepData && currentStepData.heapStructure) {\n      setHeapStructure(currentStepData.heapStructure);\n    } else if (currentStepData && currentStepData.heap_structure) {\n      // Handle Python-style property naming convention\n      setHeapStructure(currentStepData.heap_structure);\n    } else if (showHeapView && currentStep === 0) {\n      // Reset heap view when returning to first step\n      setHeapStructure(null);\n    }\n  }, [currentStepData, showHeapView, currentStep]);\n\n  /**\n   * Analyze algorithm type to determine appropriate visualization strategies\n   * This method enables specialized visualizations based on algorithm characteristics.\n   */\n  const detectAlgorithmType = () => {\n    if (!algorithm) return;\n\n    // Enable heap visualization for heap-based algorithms\n    if (algorithm.name === 'Heap Sort' && algorithm.options && algorithm.options.visualizeHeap) {\n      setShowHeapView(true);\n    } else {\n      setShowHeapView(false);\n    }\n  };\n\n  /**\n   * Initialize the appropriate renderer based on render mode\n   * This method configures the visualization engine with optimal settings.\n   */\n  const initializeRenderer = () => {\n    const canvas = canvasRef.current;\n    const fallbackCanvas = fallbackCanvasRef.current;\n    if (!canvas || !fallbackCanvas) return;\n    try {\n      let newRenderer;\n      if (renderMode === 'webgl') {\n        try {\n          newRenderer = new WebGLRenderer(canvas, {\n            ...options,\n            maxElements: 100000,\n            colorScheme: options.colorScheme || 'spectrum',\n            barWidth: options.barWidth || 4,\n            spacing: options.spacing || 1\n          });\n\n          // Display WebGL canvas, hide fallback\n          canvas.style.display = 'block';\n          fallbackCanvas.style.display = 'none';\n        } catch (e) {\n          console.warn('WebGL renderer initialization failed, falling back to Canvas renderer', e);\n          setRenderMode('canvas');\n          throw e; // Force fallback\n        }\n      }\n      if (renderMode === 'canvas') {\n        newRenderer = new ArrayRenderer(fallbackCanvas, {\n          ...options,\n          maxElements: 10000,\n          colorScheme: options.colorScheme || 'spectrum',\n          barWidth: options.barWidth || 4,\n          spacing: options.spacing || 1\n        });\n\n        // Display fallback canvas, hide WebGL\n        canvas.style.display = 'none';\n        fallbackCanvas.style.display = 'block';\n      }\n      setRenderer(newRenderer);\n\n      // Initialize data in renderer if available\n      if (data.length > 0) {\n        newRenderer.setData(data);\n      }\n    } catch (e) {\n      console.error('Failed to initialize renderer', e);\n    }\n  };\n\n  /**\n   * Generate initial data based on selected parameters\n   * This method creates statistically sound datasets for algorithm visualization.\n   */\n  const generateInitialData = () => {\n    const newData = generateDataSet(selectedDataSet, dataSize, {\n      min: 1,\n      max: 100,\n      ...options\n    });\n    setData(newData);\n    if (renderer) {\n      renderer.setData(newData);\n    }\n  };\n\n  /**\n   * Execute the current algorithm on the dataset\n   * This method orchestrates algorithm execution with comprehensive instrumentation.\n   */\n  const executeAlgorithm = async () => {\n    if (!algorithm || data.length === 0) return;\n\n    // Reset visualization state\n    setIsPlaying(false);\n    setCurrentStep(0);\n    stepHistoryRef.current = [];\n    setHeapStructure(null);\n\n    // Clone the data to prevent mutation\n    const dataToSort = [...data];\n    try {\n      // Execute algorithm with instrumentation\n      const startTime = performance.now();\n      const result = await algorithm.execute(dataToSort, {\n        onStep: step => {\n          stepHistoryRef.current.push(step);\n        }\n      });\n      const endTime = performance.now();\n\n      // Update state with execution results\n      setMetrics({\n        ...algorithm.getMetrics(),\n        executionTime: endTime - startTime\n      });\n      setTotalSteps(stepHistoryRef.current.length);\n\n      // Update renderer with sorted data\n      if (renderer) {\n        renderer.setData(result);\n      }\n    } catch (error) {\n      console.error('Algorithm execution failed', error);\n    }\n  };\n\n  /**\n   * Navigate to specific algorithm execution step\n   * This method provides precise control over visualization state.\n   * \n   * @param {number} step - The step index to visualize\n   */\n  const navigateStep = step => {\n    if (step < 0 || step >= stepHistoryRef.current.length) return;\n    setCurrentStep(step);\n    const stepData = stepHistoryRef.current[step];\n    setCurrentStepData(stepData);\n    if (renderer && stepData) {\n      // Update renderer with current step data\n      renderer.setData(stepData.array, false);\n\n      // Highlight relevant elements based on operation type\n      if (stepData.type === 'comparison' && stepData.indices) {\n        renderer.markComparing(stepData.indices);\n      } else if (stepData.type === 'swap' && stepData.indices) {\n        renderer.highlight(stepData.indices);\n      } else if (stepData.type === 'sorted' && stepData.indices) {\n        renderer.markSorted(stepData.indices);\n      } else if (stepData.type === 'heapify' && stepData.node !== undefined) {\n        // For heap sort, highlight the current node being heapified\n        renderer.highlight([stepData.node]);\n\n        // Also highlight children if available\n        if (stepData.children && stepData.children.length) {\n          renderer.markComparing(stepData.children);\n        }\n      } else if (stepData.type === 'heapify-swap' && stepData.indices) {\n        renderer.highlight(stepData.indices);\n      }\n    }\n  };\n\n  /**\n   * Toggle animation playback state\n   * This method controls the visualization animation system.\n   */\n  const togglePlayback = () => {\n    const newPlayingState = !isPlaying;\n    setIsPlaying(newPlayingState);\n    if (newPlayingState) {\n      // Initialize animation timing reference\n      const lastTimestamp = performance.now();\n\n      // Animation frame callback function with precise timing control\n      const animate = timestamp => {\n        if (!isPlaying) return;\n\n        // Control animation speed with frame timing\n        const elapsed = timestamp - lastTimestamp;\n        if (elapsed > 1000 / (playbackSpeed * 10)) {\n          // Advance to next step with boundary checking\n          const nextStep = (currentStep + 1) % (totalSteps || 1);\n          if (nextStep === 0) {\n            // End of visualization reached\n            setIsPlaying(false);\n            return;\n          }\n          navigateStep(nextStep);\n        }\n        animationRef.current = requestAnimationFrame(animate);\n      };\n      animationRef.current = requestAnimationFrame(animate);\n    } else {\n      // Stop animation\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    }\n  };\n\n  /**\n   * Handle data set type selection change\n   * @param {Event} event - The change event\n   */\n  const handleDataSetChange = event => {\n    setSelectedDataSet(event.target.value);\n  };\n\n  /**\n   * Handle data set size selection change\n   * @param {Event} event - The change event\n   */\n  const handleSizeChange = event => {\n    setDataSize(parseInt(event.target.value));\n  };\n\n  /**\n   * Regenerate data with current settings\n   */\n  const handleRegenerateData = () => {\n    generateInitialData();\n  };\n\n  /**\n   * Handle renderer mode selection change\n   * @param {Event} event - The change event\n   */\n  const handleRenderModeChange = event => {\n    setRenderMode(event.target.value);\n\n    // Reinitialize renderer with new mode\n    setTimeout(() => {\n      initializeRenderer();\n    }, 0);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sorting-visualizer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"visualization-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: height,\n    className: \"visualization-canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: fallbackCanvasRef,\n    width: width,\n    height: height,\n    className: \"visualization-canvas fallback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 9\n    }\n  }), algorithm && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"algorithm-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }\n  }, algorithm.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 15\n    }\n  }, \"Time: \", algorithm.getComplexity().time.average), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 15\n    }\n  }, \"Space: \", algorithm.getComplexity().space.average), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 15\n    }\n  }, \"Stable: \", algorithm.isStable() ? 'Yes' : 'No'))), showHeapView && heapStructure && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heap-view-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 13\n    }\n  }, \"Binary Heap Structure\"), /*#__PURE__*/React.createElement(HeapVisualizerComponent, {\n    heapStructure: heapStructure,\n    width: width,\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playback-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateStep(0),\n    disabled: currentStep === 0 || isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 11\n    }\n  }, \"\\u23EE\\uFE0F First\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateStep(currentStep - 1),\n    disabled: currentStep === 0 || isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 11\n    }\n  }, \"\\u23EA Prev\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: togglePlayback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 11\n    }\n  }, isPlaying ? '⏸️ Pause' : '▶️ Play'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateStep(currentStep + 1),\n    disabled: currentStep >= totalSteps - 1 || isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 11\n    }\n  }, \"\\u23E9 Next\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateStep(totalSteps - 1),\n    disabled: currentStep >= totalSteps - 1 || isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 11\n    }\n  }, \"\\u23ED\\uFE0F Last\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"speed-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 11\n    }\n  }, \"Speed: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0.1\",\n    max: \"10\",\n    step: \"0.1\",\n    value: playbackSpeed,\n    onChange: e => setPlaybackSpeed(parseFloat(e.target.value)),\n    disabled: isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 11\n    }\n  }, playbackSpeed.toFixed(1), \"x\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-indicator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-counter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 11\n    }\n  }, \"Step: \", currentStep, \" / \", totalSteps), /*#__PURE__*/React.createElement(\"progress\", {\n    value: currentStep,\n    max: totalSteps || 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 13\n    }\n  }, \"Data Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedDataSet,\n    onChange: handleDataSetChange,\n    disabled: isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"random\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 15\n    }\n  }, \"Random\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"nearly-sorted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 15\n    }\n  }, \"Nearly Sorted\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"reversed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 15\n    }\n  }, \"Reversed\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"few-unique\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 15\n    }\n  }, \"Few Unique Values\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sorted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 15\n    }\n  }, \"Already Sorted\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sawtooth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 15\n    }\n  }, \"Sawtooth Pattern\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 13\n    }\n  }, \"Size:\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: dataSize,\n    onChange: handleSizeChange,\n    disabled: isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 15\n    }\n  }, \"Tiny (10)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 15\n    }\n  }, \"Small (30)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 15\n    }\n  }, \"Medium (50)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 15\n    }\n  }, \"Large (100)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"250\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 15\n    }\n  }, \"X-Large (250)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 15\n    }\n  }, \"Huge (1,000)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 15\n    }\n  }, \"Extreme (10,000)\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 13\n    }\n  }, \"Renderer:\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: renderMode,\n    onChange: handleRenderModeChange,\n    disabled: isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"webgl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 15\n    }\n  }, \"WebGL (Fast)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 15\n    }\n  }, \"Canvas (Compatible)\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleRegenerateData,\n    disabled: isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 11\n    }\n  }, \"Regenerate Data\")), metrics && Object.keys(metrics).length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metrics-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 13\n    }\n  }, \"Performance Metrics\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metrics-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 17\n    }\n  }, \"Comparisons:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 17\n    }\n  }, (_metrics$comparisons = metrics.comparisons) === null || _metrics$comparisons === void 0 ? void 0 : _metrics$comparisons.toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 17\n    }\n  }, \"Swaps:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 17\n    }\n  }, (_metrics$swaps = metrics.swaps) === null || _metrics$swaps === void 0 ? void 0 : _metrics$swaps.toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 17\n    }\n  }, \"Array Accesses:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 17\n    }\n  }, (_ref = metrics.reads + metrics.writes) === null || _ref === void 0 ? void 0 : _ref.toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 17\n    }\n  }, \"Execution Time:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 17\n    }\n  }, (_metrics$executionTim = metrics.executionTime) === null || _metrics$executionTim === void 0 ? void 0 : _metrics$executionTim.toFixed(2), \" ms\")))), currentStepData && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 13\n    }\n  }, \"Current Step\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 13\n    }\n  }, currentStepData.message || 'No message for this step'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 15\n    }\n  }, \"Type: \", currentStepData.type || 'unknown'), currentStepData.indices && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 17\n    }\n  }, \"Indices: \", currentStepData.indices.join(', '))))));\n};\nexport default SortingVisualizer;","map":{"version":3,"names":["React","useState","useEffect","useRef","WebGLRenderer","ArrayRenderer","generateDataSet","HeapVisualizer","HeapVisualizerComponent","require","default","e","console","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","SortingVisualizer","algorithm","options","width","height","_metrics$comparisons","_metrics$swaps","_ref","_metrics$executionTim","canvasRef","fallbackCanvasRef","renderer","setRenderer","data","setData","isPlaying","setIsPlaying","currentStep","setCurrentStep","totalSteps","setTotalSteps","playbackSpeed","setPlaybackSpeed","metrics","setMetrics","selectedDataSet","setSelectedDataSet","dataSize","setDataSize","renderMode","setRenderMode","heapStructure","setHeapStructure","showHeapView","setShowHeapView","currentStepData","setCurrentStepData","animationRef","stepHistoryRef","generateInitialData","initializeRenderer","detectAlgorithmType","handleResize","resize","window","addEventListener","removeEventListener","dispose","current","cancelAnimationFrame","setOptions","colorScheme","barWidth","spacing","length","executeAlgorithm","heap_structure","name","visualizeHeap","canvas","fallbackCanvas","newRenderer","maxElements","style","display","warn","newData","min","max","dataToSort","startTime","performance","now","result","execute","onStep","step","push","endTime","getMetrics","executionTime","navigateStep","stepData","array","type","indices","markComparing","highlight","markSorted","node","undefined","children","togglePlayback","newPlayingState","lastTimestamp","animate","timestamp","elapsed","nextStep","requestAnimationFrame","handleDataSetChange","event","target","value","handleSizeChange","parseInt","handleRegenerateData","handleRenderModeChange","setTimeout","className","ref","getComplexity","time","average","space","isStable","onClick","disabled","onChange","parseFloat","toFixed","Object","keys","comparisons","toLocaleString","swaps","reads","writes","message","join"],"sources":["/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/SortingVisualizer.js"],"sourcesContent":["// src/components/SortingVisualizer.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { WebGLRenderer } from '../visualization/renderers/webgl-renderer';\nimport { ArrayRenderer } from '../visualization/renderers/array-renderer';\nimport { generateDataSet } from '../data/generators';\nimport HeapVisualizer from '../visualization/components/HeapVisualizer';\nimport './SortingVisualizer.css';\n\n// Fallback import mechanism for systems with case sensitivity issues\nlet HeapVisualizerComponent = HeapVisualizer;\nif (!HeapVisualizerComponent) {\n  try {\n    // eslint-disable-next-line import/first\n    HeapVisualizerComponent = require('../visualization/components/heap-visualizer').default;\n  } catch (e) {\n    console.error('Failed to import HeapVisualizer component:', e);\n    HeapVisualizerComponent = () => <div>Heap visualization unavailable</div>;\n  }\n}\n\n/**\n * SortingVisualizer Component\n * \n * A sophisticated visualization environment for sorting algorithms that provides\n * interactive, animated representations of algorithm execution with specialized\n * visualizations for different algorithm categories.\n * \n * The component implements a complex state management system to track algorithm\n * execution, visualization settings, and specialized data structures such as\n * binary heaps for advanced educational insights.\n * \n * @author Advanced Sorting Algorithm Visualization Platform\n * @version 2.0.0\n */\nconst SortingVisualizer = ({ \n  algorithm, \n  options = {},\n  width = 800,\n  height = 400\n}) => {\n  // Canvas references for rendering engines\n  const canvasRef = useRef(null);\n  const fallbackCanvasRef = useRef(null);\n  \n  // Core visualization state\n  const [renderer, setRenderer] = useState(null);\n  const [data, setData] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [totalSteps, setTotalSteps] = useState(0);\n  const [playbackSpeed, setPlaybackSpeed] = useState(1);\n  const [metrics, setMetrics] = useState({});\n  const [selectedDataSet, setSelectedDataSet] = useState('random');\n  const [dataSize, setDataSize] = useState(30);\n  const [renderMode, setRenderMode] = useState('webgl');\n  \n  // Specialized visualization state\n  const [heapStructure, setHeapStructure] = useState(null);\n  const [showHeapView, setShowHeapView] = useState(false);\n  const [currentStepData, setCurrentStepData] = useState(null);\n  \n  // Animation references\n  const animationRef = useRef(null);\n  const stepHistoryRef = useRef([]);\n  \n  /**\n   * Initialize renderer and data on component mount\n   * This effect establishes the visualization environment and configures\n   * event listeners for responsive rendering.\n   */\n  useEffect(() => {\n    // Initialize data\n    generateInitialData();\n    \n    // Initialize renderer\n    initializeRenderer();\n    \n    // Detect algorithm type to enable specialized visualizations\n    detectAlgorithmType();\n    \n    // Window resize event handler for responsive visualization\n    const handleResize = () => {\n      if (renderer) {\n        renderer.resize();\n      }\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    // Cleanup function for proper resource management\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (renderer) {\n        renderer.dispose();\n      }\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []);\n  \n  /**\n   * Update renderer configuration when options or render mode changes\n   * This effect ensures visualization settings are properly synchronized.\n   */\n  useEffect(() => {\n    if (renderer) {\n      renderer.setOptions({\n        colorScheme: options.colorScheme || 'spectrum',\n        barWidth: options.barWidth || 4,\n        spacing: options.spacing || 1,\n        ...options\n      });\n    }\n  }, [options, renderer]);\n  \n  /**\n   * Execute algorithm when dependencies change\n   * This effect triggers algorithm execution with updated parameters.\n   */\n  useEffect(() => {\n    if (algorithm && data.length > 0) {\n      executeAlgorithm();\n    }\n  }, [algorithm, data.length, selectedDataSet, dataSize]);\n  \n  /**\n   * Detect algorithm type to enable specialized visualizations\n   * This effect analyzes the algorithm to determine appropriate visualization strategies.\n   */\n  useEffect(() => {\n    detectAlgorithmType();\n  }, [algorithm]);\n  \n  /**\n   * Update heap structure when step changes\n   * This effect updates specialized heap visualization data during execution.\n   */\n  useEffect(() => {\n    if (currentStepData && currentStepData.heapStructure) {\n      setHeapStructure(currentStepData.heapStructure);\n    } else if (currentStepData && currentStepData.heap_structure) {\n      // Handle Python-style property naming convention\n      setHeapStructure(currentStepData.heap_structure);\n    } else if (showHeapView && currentStep === 0) {\n      // Reset heap view when returning to first step\n      setHeapStructure(null);\n    }\n  }, [currentStepData, showHeapView, currentStep]);\n  \n  /**\n   * Analyze algorithm type to determine appropriate visualization strategies\n   * This method enables specialized visualizations based on algorithm characteristics.\n   */\n  const detectAlgorithmType = () => {\n    if (!algorithm) return;\n    \n    // Enable heap visualization for heap-based algorithms\n    if (algorithm.name === 'Heap Sort' && algorithm.options && algorithm.options.visualizeHeap) {\n      setShowHeapView(true);\n    } else {\n      setShowHeapView(false);\n    }\n  };\n  \n  /**\n   * Initialize the appropriate renderer based on render mode\n   * This method configures the visualization engine with optimal settings.\n   */\n  const initializeRenderer = () => {\n    const canvas = canvasRef.current;\n    const fallbackCanvas = fallbackCanvasRef.current;\n    \n    if (!canvas || !fallbackCanvas) return;\n    \n    try {\n      let newRenderer;\n      \n      if (renderMode === 'webgl') {\n        try {\n          newRenderer = new WebGLRenderer(canvas, {\n            ...options,\n            maxElements: 100000,\n            colorScheme: options.colorScheme || 'spectrum',\n            barWidth: options.barWidth || 4,\n            spacing: options.spacing || 1\n          });\n          \n          // Display WebGL canvas, hide fallback\n          canvas.style.display = 'block';\n          fallbackCanvas.style.display = 'none';\n        } catch (e) {\n          console.warn('WebGL renderer initialization failed, falling back to Canvas renderer', e);\n          setRenderMode('canvas');\n          throw e; // Force fallback\n        }\n      }\n      \n      if (renderMode === 'canvas') {\n        newRenderer = new ArrayRenderer(fallbackCanvas, {\n          ...options,\n          maxElements: 10000,\n          colorScheme: options.colorScheme || 'spectrum',\n          barWidth: options.barWidth || 4,\n          spacing: options.spacing || 1\n        });\n        \n        // Display fallback canvas, hide WebGL\n        canvas.style.display = 'none';\n        fallbackCanvas.style.display = 'block';\n      }\n      \n      setRenderer(newRenderer);\n      \n      // Initialize data in renderer if available\n      if (data.length > 0) {\n        newRenderer.setData(data);\n      }\n    } catch (e) {\n      console.error('Failed to initialize renderer', e);\n    }\n  };\n  \n  /**\n   * Generate initial data based on selected parameters\n   * This method creates statistically sound datasets for algorithm visualization.\n   */\n  const generateInitialData = () => {\n    const newData = generateDataSet(selectedDataSet, dataSize, {\n      min: 1,\n      max: 100,\n      ...options\n    });\n    \n    setData(newData);\n    \n    if (renderer) {\n      renderer.setData(newData);\n    }\n  };\n  \n  /**\n   * Execute the current algorithm on the dataset\n   * This method orchestrates algorithm execution with comprehensive instrumentation.\n   */\n  const executeAlgorithm = async () => {\n    if (!algorithm || data.length === 0) return;\n    \n    // Reset visualization state\n    setIsPlaying(false);\n    setCurrentStep(0);\n    stepHistoryRef.current = [];\n    setHeapStructure(null);\n    \n    // Clone the data to prevent mutation\n    const dataToSort = [...data];\n    \n    try {\n      // Execute algorithm with instrumentation\n      const startTime = performance.now();\n      \n      const result = await algorithm.execute(dataToSort, {\n        onStep: (step) => {\n          stepHistoryRef.current.push(step);\n        }\n      });\n      \n      const endTime = performance.now();\n      \n      // Update state with execution results\n      setMetrics({\n        ...algorithm.getMetrics(),\n        executionTime: endTime - startTime\n      });\n      \n      setTotalSteps(stepHistoryRef.current.length);\n      \n      // Update renderer with sorted data\n      if (renderer) {\n        renderer.setData(result);\n      }\n      \n    } catch (error) {\n      console.error('Algorithm execution failed', error);\n    }\n  };\n  \n  /**\n   * Navigate to specific algorithm execution step\n   * This method provides precise control over visualization state.\n   * \n   * @param {number} step - The step index to visualize\n   */\n  const navigateStep = (step) => {\n    if (step < 0 || step >= stepHistoryRef.current.length) return;\n    \n    setCurrentStep(step);\n    \n    const stepData = stepHistoryRef.current[step];\n    setCurrentStepData(stepData);\n    \n    if (renderer && stepData) {\n      // Update renderer with current step data\n      renderer.setData(stepData.array, false);\n      \n      // Highlight relevant elements based on operation type\n      if (stepData.type === 'comparison' && stepData.indices) {\n        renderer.markComparing(stepData.indices);\n      } else if (stepData.type === 'swap' && stepData.indices) {\n        renderer.highlight(stepData.indices);\n      } else if (stepData.type === 'sorted' && stepData.indices) {\n        renderer.markSorted(stepData.indices);\n      } else if (stepData.type === 'heapify' && stepData.node !== undefined) {\n        // For heap sort, highlight the current node being heapified\n        renderer.highlight([stepData.node]);\n        \n        // Also highlight children if available\n        if (stepData.children && stepData.children.length) {\n          renderer.markComparing(stepData.children);\n        }\n      } else if (stepData.type === 'heapify-swap' && stepData.indices) {\n        renderer.highlight(stepData.indices);\n      }\n    }\n  };\n  \n  /**\n   * Toggle animation playback state\n   * This method controls the visualization animation system.\n   */\n  const togglePlayback = () => {\n    const newPlayingState = !isPlaying;\n    setIsPlaying(newPlayingState);\n    \n    if (newPlayingState) {\n      // Initialize animation timing reference\n      const lastTimestamp = performance.now();\n      \n      // Animation frame callback function with precise timing control\n      const animate = (timestamp) => {\n        if (!isPlaying) return;\n        \n        // Control animation speed with frame timing\n        const elapsed = timestamp - lastTimestamp;\n        \n        if (elapsed > (1000 / (playbackSpeed * 10))) {\n          // Advance to next step with boundary checking\n          const nextStep = (currentStep + 1) % (totalSteps || 1);\n          \n          if (nextStep === 0) {\n            // End of visualization reached\n            setIsPlaying(false);\n            return;\n          }\n          \n          navigateStep(nextStep);\n        }\n        \n        animationRef.current = requestAnimationFrame(animate);\n      };\n      \n      animationRef.current = requestAnimationFrame(animate);\n    } else {\n      // Stop animation\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    }\n  };\n  \n  /**\n   * Handle data set type selection change\n   * @param {Event} event - The change event\n   */\n  const handleDataSetChange = (event) => {\n    setSelectedDataSet(event.target.value);\n  };\n  \n  /**\n   * Handle data set size selection change\n   * @param {Event} event - The change event\n   */\n  const handleSizeChange = (event) => {\n    setDataSize(parseInt(event.target.value));\n  };\n  \n  /**\n   * Regenerate data with current settings\n   */\n  const handleRegenerateData = () => {\n    generateInitialData();\n  };\n  \n  /**\n   * Handle renderer mode selection change\n   * @param {Event} event - The change event\n   */\n  const handleRenderModeChange = (event) => {\n    setRenderMode(event.target.value);\n    \n    // Reinitialize renderer with new mode\n    setTimeout(() => {\n      initializeRenderer();\n    }, 0);\n  };\n  \n  return (\n    <div className=\"sorting-visualizer\">\n      <div className=\"visualization-container\">\n        <canvas \n          ref={canvasRef}\n          width={width}\n          height={height}\n          className=\"visualization-canvas\"\n        />\n        <canvas\n          ref={fallbackCanvasRef}\n          width={width}\n          height={height}\n          className=\"visualization-canvas fallback\"\n        />\n        \n        {algorithm && (\n          <div className=\"algorithm-info\">\n            <h3>{algorithm.name}</h3>\n            <div className=\"complexity-info\">\n              <div>Time: {algorithm.getComplexity().time.average}</div>\n              <div>Space: {algorithm.getComplexity().space.average}</div>\n              <div>Stable: {algorithm.isStable() ? 'Yes' : 'No'}</div>\n            </div>\n          </div>\n        )}\n        \n        {/* Specialized heap visualization component */}\n        {showHeapView && heapStructure && (\n          <div className=\"heap-view-container\">\n            <h4>Binary Heap Structure</h4>\n            <HeapVisualizerComponent \n              heapStructure={heapStructure} \n              width={width} \n              height={300} \n            />\n          </div>\n        )}\n      </div>\n      \n      <div className=\"controls-container\">\n        <div className=\"playback-controls\">\n          <button \n            onClick={() => navigateStep(0)}\n            disabled={currentStep === 0 || isPlaying}\n          >\n            ⏮️ First\n          </button>\n          <button \n            onClick={() => navigateStep(currentStep - 1)}\n            disabled={currentStep === 0 || isPlaying}\n          >\n            ⏪ Prev\n          </button>\n          <button onClick={togglePlayback}>\n            {isPlaying ? '⏸️ Pause' : '▶️ Play'}\n          </button>\n          <button \n            onClick={() => navigateStep(currentStep + 1)}\n            disabled={currentStep >= totalSteps - 1 || isPlaying}\n          >\n            ⏩ Next\n          </button>\n          <button \n            onClick={() => navigateStep(totalSteps - 1)}\n            disabled={currentStep >= totalSteps - 1 || isPlaying}\n          >\n            ⏭️ Last\n          </button>\n        </div>\n        \n        <div className=\"speed-control\">\n          <label>Speed: </label>\n          <input\n            type=\"range\"\n            min=\"0.1\"\n            max=\"10\"\n            step=\"0.1\"\n            value={playbackSpeed}\n            onChange={(e) => setPlaybackSpeed(parseFloat(e.target.value))}\n            disabled={isPlaying}\n          />\n          <span>{playbackSpeed.toFixed(1)}x</span>\n        </div>\n        \n        <div className=\"progress-indicator\">\n          <div className=\"step-counter\">\n            Step: {currentStep} / {totalSteps}\n          </div>\n          <progress value={currentStep} max={totalSteps || 100} />\n        </div>\n        \n        <div className=\"data-controls\">\n          <div className=\"control-group\">\n            <label>Data Type:</label>\n            <select value={selectedDataSet} onChange={handleDataSetChange} disabled={isPlaying}>\n              <option value=\"random\">Random</option>\n              <option value=\"nearly-sorted\">Nearly Sorted</option>\n              <option value=\"reversed\">Reversed</option>\n              <option value=\"few-unique\">Few Unique Values</option>\n              <option value=\"sorted\">Already Sorted</option>\n              <option value=\"sawtooth\">Sawtooth Pattern</option>\n            </select>\n          </div>\n          \n          <div className=\"control-group\">\n            <label>Size:</label>\n            <select value={dataSize} onChange={handleSizeChange} disabled={isPlaying}>\n              <option value=\"10\">Tiny (10)</option>\n              <option value=\"30\">Small (30)</option>\n              <option value=\"50\">Medium (50)</option>\n              <option value=\"100\">Large (100)</option>\n              <option value=\"250\">X-Large (250)</option>\n              <option value=\"1000\">Huge (1,000)</option>\n              <option value=\"10000\">Extreme (10,000)</option>\n            </select>\n          </div>\n          \n          <div className=\"control-group\">\n            <label>Renderer:</label>\n            <select value={renderMode} onChange={handleRenderModeChange} disabled={isPlaying}>\n              <option value=\"webgl\">WebGL (Fast)</option>\n              <option value=\"canvas\">Canvas (Compatible)</option>\n            </select>\n          </div>\n          \n          <button onClick={handleRegenerateData} disabled={isPlaying}>\n            Regenerate Data\n          </button>\n        </div>\n        \n        {metrics && Object.keys(metrics).length > 0 && (\n          <div className=\"metrics-panel\">\n            <h4>Performance Metrics</h4>\n            <div className=\"metrics-grid\">\n              <div className=\"metric\">\n                <label>Comparisons:</label>\n                <span>{metrics.comparisons?.toLocaleString()}</span>\n              </div>\n              <div className=\"metric\">\n                <label>Swaps:</label>\n                <span>{metrics.swaps?.toLocaleString()}</span>\n              </div>\n              <div className=\"metric\">\n                <label>Array Accesses:</label>\n                <span>{(metrics.reads + metrics.writes)?.toLocaleString()}</span>\n              </div>\n              <div className=\"metric\">\n                <label>Execution Time:</label>\n                <span>{metrics.executionTime?.toFixed(2)} ms</span>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {currentStepData && (\n          <div className=\"step-info\">\n            <h4>Current Step</h4>\n            <div className=\"step-message\">{currentStepData.message || 'No message for this step'}</div>\n            <div className=\"step-details\">\n              <div>Type: {currentStepData.type || 'unknown'}</div>\n              {currentStepData.indices && (\n                <div>Indices: {currentStepData.indices.join(', ')}</div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SortingVisualizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}