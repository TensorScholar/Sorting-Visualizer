{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/SortingVisualizer.js\",\n  _s = $RefreshSig$();\n/**\n * Advanced Sorting Algorithm Visualization Platform\n * Main Visualization Component\n * \n * This component orchestrates algorithm execution, visualization rendering,\n * and interactive controls for educational exploration of sorting algorithms.\n * It implements a comprehensive visualization architecture with configurable\n * rendering strategies, adaptive display modes, and algorithm-specific visualizations.\n * \n * @module SortingVisualizer\n * @author Advanced Algorithm Visualization Team\n * @version 2.0.0\n */\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { WebGLRenderer } from '../visualization/renderers/webgl-renderer';\nimport { ArrayRenderer } from '../visualization/renderers/array-renderer';\nimport { generateDataSet } from '../data/generators';\nimport HeapVisualizer from '../visualization/components/HeapVisualizer';\nimport './SortingVisualizer.css';\n\n/**\n * SortingVisualizer Component\n * \n * Renders an interactive sorting algorithm visualization interface\n * with configurable algorithm selection, data generation, execution controls,\n * and specialized visualization modes for different algorithm types.\n * \n * @param {Object} props - Component properties\n * @param {Object} props.algorithm - Algorithm instance to visualize\n * @param {Object} props.options - Visualization configuration options\n * @param {number} props.width - Canvas width\n * @param {number} props.height - Canvas height\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortingVisualizer = ({\n  algorithm,\n  options = {},\n  width = 800,\n  height = 400\n}) => {\n  _s();\n  var _metrics$comparisons, _metrics$swaps, _ref, _metrics$executionTim;\n  // Canvas references\n  const canvasRef = useRef(null);\n  const fallbackCanvasRef = useRef(null);\n\n  // Visualization state\n  const [renderer, setRenderer] = useState(null);\n  const [data, setData] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [totalSteps, setTotalSteps] = useState(0);\n  const [playbackSpeed, setPlaybackSpeed] = useState(1);\n  const [metrics, setMetrics] = useState({});\n  const [selectedDataSet, setSelectedDataSet] = useState('random');\n  const [dataSize, setDataSize] = useState(30);\n  const [renderMode, setRenderMode] = useState('webgl');\n\n  // Additional visualization state\n  const [heapStructure, setHeapStructure] = useState(null);\n  const [showHeapView, setShowHeapView] = useState(false);\n  const [currentStepData, setCurrentStepData] = useState(null);\n  const [algorithmType, setAlgorithmType] = useState('comparison');\n\n  // Animation references\n  const animationRef = useRef(null);\n  const stepHistoryRef = useRef([]);\n\n  /**\n   * Detects the algorithm type to configure appropriate visualizations\n   * \n   * @param {Object} algorithmInstance - The algorithm to analyze\n   */\n  const detectAlgorithmType = useCallback(algorithmInstance => {\n    if (!algorithmInstance) return 'comparison';\n\n    // Determine algorithm type based on name and category\n    const name = algorithmInstance.name || '';\n    const category = algorithmInstance.category || '';\n    if (name === 'Heap Sort' || name.toLowerCase().includes('heap')) {\n      setShowHeapView(true);\n      return 'heap';\n    } else if (category === 'distribution' || name.toLowerCase().includes('bucket') || name.toLowerCase().includes('counting') || name.toLowerCase().includes('radix')) {\n      return 'distribution';\n    } else if (category === 'network' || name.toLowerCase().includes('bitonic') || name.toLowerCase().includes('merge-network')) {\n      return 'network';\n    } else if (name.toLowerCase().includes('selection') || name.toLowerCase().includes('quickselect') || name.toLowerCase().includes('median')) {\n      return 'selection';\n    }\n    return 'comparison';\n  }, []);\n\n  /**\n   * Initialize the renderer with current options and canvas references\n   */\n  const initializeRenderer = useCallback(() => {\n    const canvas = canvasRef.current;\n    const fallbackCanvas = fallbackCanvasRef.current;\n    if (!canvas || !fallbackCanvas) return;\n    try {\n      let newRenderer;\n      if (renderMode === 'webgl') {\n        try {\n          newRenderer = new WebGLRenderer(canvas, {\n            ...options,\n            maxElements: 100000,\n            colorScheme: options.colorScheme || 'spectrum',\n            barWidth: options.barWidth || 4,\n            spacing: options.spacing || 1\n          });\n\n          // Hide fallback canvas\n          canvas.style.display = 'block';\n          fallbackCanvas.style.display = 'none';\n        } catch (e) {\n          console.warn('WebGL renderer initialization failed, falling back to Canvas renderer', e);\n          setRenderMode('canvas');\n          throw e; // Force fallback\n        }\n      }\n      if (renderMode === 'canvas') {\n        newRenderer = new ArrayRenderer(fallbackCanvas, {\n          ...options,\n          maxElements: 10000,\n          colorScheme: options.colorScheme || 'spectrum',\n          barWidth: options.barWidth || 4,\n          spacing: options.spacing || 1\n        });\n\n        // Hide WebGL canvas\n        canvas.style.display = 'none';\n        fallbackCanvas.style.display = 'block';\n      }\n      setRenderer(newRenderer);\n\n      // Update data if we have it\n      if (data.length > 0 && newRenderer) {\n        newRenderer.setData(data);\n      }\n    } catch (e) {\n      console.error('Failed to initialize renderer', e);\n    }\n  }, [data, options, renderMode]);\n\n  /**\n   * Generate initial data based on selected parameters\n   */\n  const generateInitialData = useCallback(() => {\n    const newData = generateDataSet(selectedDataSet, dataSize, {\n      min: 1,\n      max: 100,\n      ...options\n    });\n    setData(newData);\n    if (renderer) {\n      renderer.setData(newData);\n    }\n  }, [dataSize, options, renderer, selectedDataSet]);\n\n  // Initialize renderer and data\n  useEffect(() => {\n    // Initialize algorithm type\n    const detectedType = detectAlgorithmType(algorithm);\n    setAlgorithmType(detectedType);\n\n    // Initialize data\n    generateInitialData();\n\n    // Initialize renderer\n    initializeRenderer();\n\n    // Window resize event\n    const handleResize = () => {\n      if (renderer) {\n        renderer.resize();\n      }\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (renderer) {\n        renderer.dispose();\n      }\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Update renderer when options or render mode changes\n  useEffect(() => {\n    if (renderer) {\n      renderer.setOptions({\n        colorScheme: options.colorScheme || 'spectrum',\n        barWidth: options.barWidth || 4,\n        spacing: options.spacing || 1,\n        ...options\n      });\n    }\n  }, [options, renderer]);\n\n  // Update data when algorithm execution completes\n  useEffect(() => {\n    if (algorithm && data.length > 0) {\n      executeAlgorithm();\n    }\n  }, [algorithm, data.length, selectedDataSet, dataSize]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Detect if algorithm is Heap Sort to enable heap visualization\n  useEffect(() => {\n    if (algorithm) {\n      const detectedType = detectAlgorithmType(algorithm);\n      setAlgorithmType(detectedType);\n      setShowHeapView(detectedType === 'heap');\n    }\n  }, [algorithm]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Update heap structure when step changes\n  useEffect(() => {\n    if (currentStepData && currentStepData.heapStructure) {\n      setHeapStructure(currentStepData.heapStructure);\n    } else if (currentStepData && currentStepData.heap_structure) {\n      // Handle Python-style property naming\n      setHeapStructure(currentStepData.heap_structure);\n    } else if (showHeapView && currentStep === 0) {\n      // Reset heap view when returning to first step\n      setHeapStructure(null);\n    }\n  }, [currentStepData, showHeapView, currentStep]);\n\n  /**\n   * Execute the current algorithm on the data\n   */\n  const executeAlgorithm = useCallback(async () => {\n    if (!algorithm || data.length === 0) return;\n\n    // Reset visualization state\n    setIsPlaying(false);\n    setCurrentStep(0);\n    stepHistoryRef.current = [];\n    setHeapStructure(null);\n\n    // Clone the data to avoid mutation issues\n    const dataToSort = [...data];\n    try {\n      // Execute algorithm with instrumentation\n      const startTime = performance.now();\n      const result = await algorithm.execute(dataToSort, {\n        onStep: step => {\n          stepHistoryRef.current.push(step);\n        }\n      });\n      const endTime = performance.now();\n\n      // Update state with results\n      setMetrics({\n        ...algorithm.getMetrics(),\n        executionTime: endTime - startTime\n      });\n      setTotalSteps(stepHistoryRef.current.length);\n\n      // Update renderer with sorted data\n      if (renderer) {\n        renderer.setData(result);\n      }\n    } catch (error) {\n      console.error('Algorithm execution failed', error);\n    }\n  }, [algorithm, data, renderer]);\n\n  /**\n   * Handle step navigation (forward/backward)\n   * \n   * @param {number} step - Target step index\n   */\n  const navigateStep = useCallback(step => {\n    if (step < 0 || step >= stepHistoryRef.current.length) return;\n    setCurrentStep(step);\n    const stepData = stepHistoryRef.current[step];\n    setCurrentStepData(stepData);\n    if (renderer && stepData) {\n      // Update renderer with current step data\n      renderer.setData(stepData.array, false);\n\n      // Highlight relevant elements\n      if (stepData.type === 'comparison' && stepData.indices) {\n        renderer.markComparing(stepData.indices);\n      } else if (stepData.type === 'swap' && stepData.indices) {\n        renderer.highlight(stepData.indices);\n      } else if (stepData.type === 'sorted' && stepData.indices) {\n        renderer.markSorted(stepData.indices);\n      } else if (stepData.type === 'heapify' && stepData.node !== undefined) {\n        // For heap sort, highlight the current node being heapified\n        renderer.highlight([stepData.node]);\n\n        // Also highlight children if available\n        if (stepData.children && stepData.children.length) {\n          renderer.markComparing(stepData.children);\n        }\n      } else if (stepData.type === 'heapify-swap' && stepData.indices) {\n        renderer.highlight(stepData.indices);\n      }\n    }\n  }, [renderer]);\n\n  /**\n   * Start or stop animation playback\n   */\n  const togglePlayback = useCallback(() => {\n    const newPlayingState = !isPlaying;\n    setIsPlaying(newPlayingState);\n    if (newPlayingState) {\n      // Start animation\n      const lastTimestamp = performance.now();\n      const animate = timestamp => {\n        if (!isPlaying) return;\n\n        // Control animation speed\n        const elapsed = timestamp - lastTimestamp;\n        if (elapsed > 1000 / (playbackSpeed * 10)) {\n          // Time to advance step\n          const nextStep = (currentStep + 1) % (totalSteps || 1);\n          if (nextStep === 0) {\n            // Reached the end, stop playback\n            setIsPlaying(false);\n            return;\n          }\n          navigateStep(nextStep);\n        }\n        animationRef.current = requestAnimationFrame(animate);\n      };\n      animationRef.current = requestAnimationFrame(animate);\n    } else {\n      // Stop animation\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    }\n  }, [currentStep, isPlaying, navigateStep, playbackSpeed, totalSteps]);\n\n  /**\n   * Change the data set type\n   * \n   * @param {Event} event - Change event\n   */\n  const handleDataSetChange = useCallback(event => {\n    setSelectedDataSet(event.target.value);\n  }, []);\n\n  /**\n   * Change the data set size\n   * \n   * @param {Event} event - Change event\n   */\n  const handleSizeChange = useCallback(event => {\n    setDataSize(parseInt(event.target.value));\n  }, []);\n\n  /**\n   * Regenerate data with current settings\n   */\n  const handleRegenerateData = useCallback(() => {\n    generateInitialData();\n  }, [generateInitialData]);\n\n  /**\n   * Change the render mode\n   * \n   * @param {Event} event - Change event\n   */\n  const handleRenderModeChange = useCallback(event => {\n    setRenderMode(event.target.value);\n\n    // We need to initialize a new renderer\n    setTimeout(() => {\n      initializeRenderer();\n    }, 0);\n  }, [initializeRenderer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sorting-visualizer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: width,\n        height: height,\n        className: \"visualization-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: fallbackCanvasRef,\n        width: width,\n        height: height,\n        className: \"visualization-canvas fallback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), algorithm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"algorithm-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: algorithm.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"complexity-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Time: \", algorithm.getComplexity().time.average]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Space: \", algorithm.getComplexity().space.average]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Stable: \", algorithm.isStable() ? 'Yes' : 'No']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), showHeapView && heapStructure && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heap-view-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Binary Heap Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HeapVisualizer, {\n          heapStructure: heapStructure,\n          width: width,\n          height: 300\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playback-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigateStep(0),\n          disabled: currentStep === 0 || isPlaying,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"First Step\",\n            children: \"\\u23EE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), \" First\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigateStep(currentStep - 1),\n          disabled: currentStep === 0 || isPlaying,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"Previous Step\",\n            children: \"\\u23EA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this), \" Prev\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlayback,\n          children: [isPlaying ? /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"Pause\",\n            children: \"\\u23F8\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"Play\",\n            children: \"\\u25B6\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this), \" \", isPlaying ? 'Pause' : 'Play']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigateStep(currentStep + 1),\n          disabled: currentStep >= totalSteps - 1 || isPlaying,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"Next Step\",\n            children: \"\\u23E9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), \" Next\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigateStep(totalSteps - 1),\n          disabled: currentStep >= totalSteps - 1 || isPlaying,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"Last Step\",\n            children: \"\\u23ED\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), \" Last\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"speed-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Speed: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0.1\",\n          max: \"10\",\n          step: \"0.1\",\n          value: playbackSpeed,\n          onChange: e => setPlaybackSpeed(parseFloat(e.target.value)),\n          disabled: isPlaying\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [playbackSpeed.toFixed(1), \"x\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-counter\",\n          children: [\"Step: \", currentStep, \" / \", totalSteps]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          value: currentStep,\n          max: totalSteps || 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedDataSet,\n            onChange: handleDataSetChange,\n            disabled: isPlaying,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"random\",\n              children: \"Random\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nearly-sorted\",\n              children: \"Nearly Sorted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"reversed\",\n              children: \"Reversed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"few-unique\",\n              children: \"Few Unique Values\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"sorted\",\n              children: \"Already Sorted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"sawtooth\",\n              children: \"Sawtooth Pattern\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: dataSize,\n            onChange: handleSizeChange,\n            disabled: isPlaying,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"Tiny (10)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"30\",\n              children: \"Small (30)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"50\",\n              children: \"Medium (50)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"100\",\n              children: \"Large (100)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"250\",\n              children: \"X-Large (250)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1000\",\n              children: \"Huge (1,000)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10000\",\n              children: \"Extreme (10,000)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Renderer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: renderMode,\n            onChange: handleRenderModeChange,\n            disabled: isPlaying,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"webgl\",\n              children: \"WebGL (Fast)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"canvas\",\n              children: \"Canvas (Compatible)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRegenerateData,\n          disabled: isPlaying,\n          children: \"Regenerate Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), metrics && Object.keys(metrics).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metrics-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Performance Metrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metrics-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Comparisons:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (_metrics$comparisons = metrics.comparisons) === null || _metrics$comparisons === void 0 ? void 0 : _metrics$comparisons.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Swaps:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (_metrics$swaps = metrics.swaps) === null || _metrics$swaps === void 0 ? void 0 : _metrics$swaps.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Array Accesses:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (_ref = metrics.reads + metrics.writes) === null || _ref === void 0 ? void 0 : _ref.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Execution Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [(_metrics$executionTim = metrics.executionTime) === null || _metrics$executionTim === void 0 ? void 0 : _metrics$executionTim.toFixed(2), \" ms\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 11\n      }, this), currentStepData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Current Step\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-message\",\n          children: currentStepData.message || 'No message for this step'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Type: \", currentStepData.type || 'unknown']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 15\n          }, this), currentStepData.indices && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Indices: \", currentStepData.indices.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 412,\n    columnNumber: 5\n  }, this);\n};\n_s(SortingVisualizer, \"Jk/UElLO9chCl5fApcuEEeqqHzM=\");\n_c = SortingVisualizer;\nexport default SortingVisualizer;\nvar _c;\n$RefreshReg$(_c, \"SortingVisualizer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","WebGLRenderer","ArrayRenderer","generateDataSet","HeapVisualizer","jsxDEV","_jsxDEV","SortingVisualizer","algorithm","options","width","height","_s","_metrics$comparisons","_metrics$swaps","_ref","_metrics$executionTim","canvasRef","fallbackCanvasRef","renderer","setRenderer","data","setData","isPlaying","setIsPlaying","currentStep","setCurrentStep","totalSteps","setTotalSteps","playbackSpeed","setPlaybackSpeed","metrics","setMetrics","selectedDataSet","setSelectedDataSet","dataSize","setDataSize","renderMode","setRenderMode","heapStructure","setHeapStructure","showHeapView","setShowHeapView","currentStepData","setCurrentStepData","algorithmType","setAlgorithmType","animationRef","stepHistoryRef","detectAlgorithmType","algorithmInstance","name","category","toLowerCase","includes","initializeRenderer","canvas","current","fallbackCanvas","newRenderer","maxElements","colorScheme","barWidth","spacing","style","display","e","console","warn","length","error","generateInitialData","newData","min","max","detectedType","handleResize","resize","window","addEventListener","removeEventListener","dispose","cancelAnimationFrame","setOptions","executeAlgorithm","heap_structure","dataToSort","startTime","performance","now","result","execute","onStep","step","push","endTime","getMetrics","executionTime","navigateStep","stepData","array","type","indices","markComparing","highlight","markSorted","node","undefined","children","togglePlayback","newPlayingState","lastTimestamp","animate","timestamp","elapsed","nextStep","requestAnimationFrame","handleDataSetChange","event","target","value","handleSizeChange","parseInt","handleRegenerateData","handleRenderModeChange","setTimeout","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","getComplexity","time","average","space","isStable","onClick","disabled","role","onChange","parseFloat","toFixed","Object","keys","comparisons","toLocaleString","swaps","reads","writes","message","join","_c","$RefreshReg$"],"sources":["/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/SortingVisualizer.js"],"sourcesContent":["/**\n * Advanced Sorting Algorithm Visualization Platform\n * Main Visualization Component\n * \n * This component orchestrates algorithm execution, visualization rendering,\n * and interactive controls for educational exploration of sorting algorithms.\n * It implements a comprehensive visualization architecture with configurable\n * rendering strategies, adaptive display modes, and algorithm-specific visualizations.\n * \n * @module SortingVisualizer\n * @author Advanced Algorithm Visualization Team\n * @version 2.0.0\n */\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { WebGLRenderer } from '../visualization/renderers/webgl-renderer';\nimport { ArrayRenderer } from '../visualization/renderers/array-renderer';\nimport { generateDataSet } from '../data/generators';\nimport HeapVisualizer from '../visualization/components/HeapVisualizer';\nimport './SortingVisualizer.css';\n\n/**\n * SortingVisualizer Component\n * \n * Renders an interactive sorting algorithm visualization interface\n * with configurable algorithm selection, data generation, execution controls,\n * and specialized visualization modes for different algorithm types.\n * \n * @param {Object} props - Component properties\n * @param {Object} props.algorithm - Algorithm instance to visualize\n * @param {Object} props.options - Visualization configuration options\n * @param {number} props.width - Canvas width\n * @param {number} props.height - Canvas height\n */\nconst SortingVisualizer = ({ \n  algorithm, \n  options = {},\n  width = 800,\n  height = 400\n}) => {\n  // Canvas references\n  const canvasRef = useRef(null);\n  const fallbackCanvasRef = useRef(null);\n  \n  // Visualization state\n  const [renderer, setRenderer] = useState(null);\n  const [data, setData] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [totalSteps, setTotalSteps] = useState(0);\n  const [playbackSpeed, setPlaybackSpeed] = useState(1);\n  const [metrics, setMetrics] = useState({});\n  const [selectedDataSet, setSelectedDataSet] = useState('random');\n  const [dataSize, setDataSize] = useState(30);\n  const [renderMode, setRenderMode] = useState('webgl');\n  \n  // Additional visualization state\n  const [heapStructure, setHeapStructure] = useState(null);\n  const [showHeapView, setShowHeapView] = useState(false);\n  const [currentStepData, setCurrentStepData] = useState(null);\n  const [algorithmType, setAlgorithmType] = useState('comparison');\n  \n  // Animation references\n  const animationRef = useRef(null);\n  const stepHistoryRef = useRef([]);\n\n  /**\n   * Detects the algorithm type to configure appropriate visualizations\n   * \n   * @param {Object} algorithmInstance - The algorithm to analyze\n   */\n  const detectAlgorithmType = useCallback((algorithmInstance) => {\n    if (!algorithmInstance) return 'comparison';\n    \n    // Determine algorithm type based on name and category\n    const name = algorithmInstance.name || '';\n    const category = algorithmInstance.category || '';\n    \n    if (name === 'Heap Sort' || name.toLowerCase().includes('heap')) {\n      setShowHeapView(true);\n      return 'heap';\n    } else if (category === 'distribution' || \n               name.toLowerCase().includes('bucket') || \n               name.toLowerCase().includes('counting') || \n               name.toLowerCase().includes('radix')) {\n      return 'distribution';\n    } else if (category === 'network' || \n               name.toLowerCase().includes('bitonic') || \n               name.toLowerCase().includes('merge-network')) {\n      return 'network';\n    } else if (name.toLowerCase().includes('selection') || \n               name.toLowerCase().includes('quickselect') || \n               name.toLowerCase().includes('median')) {\n      return 'selection';\n    }\n    \n    return 'comparison';\n  }, []);\n  \n  /**\n   * Initialize the renderer with current options and canvas references\n   */\n  const initializeRenderer = useCallback(() => {\n    const canvas = canvasRef.current;\n    const fallbackCanvas = fallbackCanvasRef.current;\n    \n    if (!canvas || !fallbackCanvas) return;\n    \n    try {\n      let newRenderer;\n      \n      if (renderMode === 'webgl') {\n        try {\n          newRenderer = new WebGLRenderer(canvas, {\n            ...options,\n            maxElements: 100000,\n            colorScheme: options.colorScheme || 'spectrum',\n            barWidth: options.barWidth || 4,\n            spacing: options.spacing || 1\n          });\n          \n          // Hide fallback canvas\n          canvas.style.display = 'block';\n          fallbackCanvas.style.display = 'none';\n        } catch (e) {\n          console.warn('WebGL renderer initialization failed, falling back to Canvas renderer', e);\n          setRenderMode('canvas');\n          throw e; // Force fallback\n        }\n      }\n      \n      if (renderMode === 'canvas') {\n        newRenderer = new ArrayRenderer(fallbackCanvas, {\n          ...options,\n          maxElements: 10000,\n          colorScheme: options.colorScheme || 'spectrum',\n          barWidth: options.barWidth || 4,\n          spacing: options.spacing || 1\n        });\n        \n        // Hide WebGL canvas\n        canvas.style.display = 'none';\n        fallbackCanvas.style.display = 'block';\n      }\n      \n      setRenderer(newRenderer);\n      \n      // Update data if we have it\n      if (data.length > 0 && newRenderer) {\n        newRenderer.setData(data);\n      }\n    } catch (e) {\n      console.error('Failed to initialize renderer', e);\n    }\n  }, [data, options, renderMode]);\n  \n  /**\n   * Generate initial data based on selected parameters\n   */\n  const generateInitialData = useCallback(() => {\n    const newData = generateDataSet(selectedDataSet, dataSize, {\n      min: 1,\n      max: 100,\n      ...options\n    });\n    \n    setData(newData);\n    \n    if (renderer) {\n      renderer.setData(newData);\n    }\n  }, [dataSize, options, renderer, selectedDataSet]);\n  \n  // Initialize renderer and data\n  useEffect(() => {\n    // Initialize algorithm type\n    const detectedType = detectAlgorithmType(algorithm);\n    setAlgorithmType(detectedType);\n    \n    // Initialize data\n    generateInitialData();\n    \n    // Initialize renderer\n    initializeRenderer();\n    \n    // Window resize event\n    const handleResize = () => {\n      if (renderer) {\n        renderer.resize();\n      }\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (renderer) {\n        renderer.dispose();\n      }\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  \n  // Update renderer when options or render mode changes\n  useEffect(() => {\n    if (renderer) {\n      renderer.setOptions({\n        colorScheme: options.colorScheme || 'spectrum',\n        barWidth: options.barWidth || 4,\n        spacing: options.spacing || 1,\n        ...options\n      });\n    }\n  }, [options, renderer]);\n  \n  // Update data when algorithm execution completes\n  useEffect(() => {\n    if (algorithm && data.length > 0) {\n      executeAlgorithm();\n    }\n  }, [algorithm, data.length, selectedDataSet, dataSize]); // eslint-disable-line react-hooks/exhaustive-deps\n  \n  // Detect if algorithm is Heap Sort to enable heap visualization\n  useEffect(() => {\n    if (algorithm) {\n      const detectedType = detectAlgorithmType(algorithm);\n      setAlgorithmType(detectedType);\n      setShowHeapView(detectedType === 'heap');\n    }\n  }, [algorithm]); // eslint-disable-line react-hooks/exhaustive-deps\n  \n  // Update heap structure when step changes\n  useEffect(() => {\n    if (currentStepData && currentStepData.heapStructure) {\n      setHeapStructure(currentStepData.heapStructure);\n    } else if (currentStepData && currentStepData.heap_structure) {\n      // Handle Python-style property naming\n      setHeapStructure(currentStepData.heap_structure);\n    } else if (showHeapView && currentStep === 0) {\n      // Reset heap view when returning to first step\n      setHeapStructure(null);\n    }\n  }, [currentStepData, showHeapView, currentStep]);\n  \n  /**\n   * Execute the current algorithm on the data\n   */\n  const executeAlgorithm = useCallback(async () => {\n    if (!algorithm || data.length === 0) return;\n    \n    // Reset visualization state\n    setIsPlaying(false);\n    setCurrentStep(0);\n    stepHistoryRef.current = [];\n    setHeapStructure(null);\n    \n    // Clone the data to avoid mutation issues\n    const dataToSort = [...data];\n    \n    try {\n      // Execute algorithm with instrumentation\n      const startTime = performance.now();\n      \n      const result = await algorithm.execute(dataToSort, {\n        onStep: (step) => {\n          stepHistoryRef.current.push(step);\n        }\n      });\n      \n      const endTime = performance.now();\n      \n      // Update state with results\n      setMetrics({\n        ...algorithm.getMetrics(),\n        executionTime: endTime - startTime\n      });\n      \n      setTotalSteps(stepHistoryRef.current.length);\n      \n      // Update renderer with sorted data\n      if (renderer) {\n        renderer.setData(result);\n      }\n      \n    } catch (error) {\n      console.error('Algorithm execution failed', error);\n    }\n  }, [algorithm, data, renderer]);\n  \n  /**\n   * Handle step navigation (forward/backward)\n   * \n   * @param {number} step - Target step index\n   */\n  const navigateStep = useCallback((step) => {\n    if (step < 0 || step >= stepHistoryRef.current.length) return;\n    \n    setCurrentStep(step);\n    \n    const stepData = stepHistoryRef.current[step];\n    setCurrentStepData(stepData);\n    \n    if (renderer && stepData) {\n      // Update renderer with current step data\n      renderer.setData(stepData.array, false);\n      \n      // Highlight relevant elements\n      if (stepData.type === 'comparison' && stepData.indices) {\n        renderer.markComparing(stepData.indices);\n      } else if (stepData.type === 'swap' && stepData.indices) {\n        renderer.highlight(stepData.indices);\n      } else if (stepData.type === 'sorted' && stepData.indices) {\n        renderer.markSorted(stepData.indices);\n      } else if (stepData.type === 'heapify' && stepData.node !== undefined) {\n        // For heap sort, highlight the current node being heapified\n        renderer.highlight([stepData.node]);\n        \n        // Also highlight children if available\n        if (stepData.children && stepData.children.length) {\n          renderer.markComparing(stepData.children);\n        }\n      } else if (stepData.type === 'heapify-swap' && stepData.indices) {\n        renderer.highlight(stepData.indices);\n      }\n    }\n  }, [renderer]);\n  \n  /**\n   * Start or stop animation playback\n   */\n  const togglePlayback = useCallback(() => {\n    const newPlayingState = !isPlaying;\n    setIsPlaying(newPlayingState);\n    \n    if (newPlayingState) {\n      // Start animation\n      const lastTimestamp = performance.now();\n      const animate = (timestamp) => {\n        if (!isPlaying) return;\n        \n        // Control animation speed\n        const elapsed = timestamp - lastTimestamp;\n        \n        if (elapsed > (1000 / (playbackSpeed * 10))) {\n          // Time to advance step\n          const nextStep = (currentStep + 1) % (totalSteps || 1);\n          \n          if (nextStep === 0) {\n            // Reached the end, stop playback\n            setIsPlaying(false);\n            return;\n          }\n          \n          navigateStep(nextStep);\n        }\n        \n        animationRef.current = requestAnimationFrame(animate);\n      };\n      \n      animationRef.current = requestAnimationFrame(animate);\n    } else {\n      // Stop animation\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    }\n  }, [currentStep, isPlaying, navigateStep, playbackSpeed, totalSteps]);\n  \n  /**\n   * Change the data set type\n   * \n   * @param {Event} event - Change event\n   */\n  const handleDataSetChange = useCallback((event) => {\n    setSelectedDataSet(event.target.value);\n  }, []);\n  \n  /**\n   * Change the data set size\n   * \n   * @param {Event} event - Change event\n   */\n  const handleSizeChange = useCallback((event) => {\n    setDataSize(parseInt(event.target.value));\n  }, []);\n  \n  /**\n   * Regenerate data with current settings\n   */\n  const handleRegenerateData = useCallback(() => {\n    generateInitialData();\n  }, [generateInitialData]);\n  \n  /**\n   * Change the render mode\n   * \n   * @param {Event} event - Change event\n   */\n  const handleRenderModeChange = useCallback((event) => {\n    setRenderMode(event.target.value);\n    \n    // We need to initialize a new renderer\n    setTimeout(() => {\n      initializeRenderer();\n    }, 0);\n  }, [initializeRenderer]);\n  \n  return (\n    <div className=\"sorting-visualizer\">\n      <div className=\"visualization-container\">\n        <canvas \n          ref={canvasRef}\n          width={width}\n          height={height}\n          className=\"visualization-canvas\"\n        />\n        <canvas\n          ref={fallbackCanvasRef}\n          width={width}\n          height={height}\n          className=\"visualization-canvas fallback\"\n        />\n        \n        {algorithm && (\n          <div className=\"algorithm-info\">\n            <h3>{algorithm.name}</h3>\n            <div className=\"complexity-info\">\n              <div>Time: {algorithm.getComplexity().time.average}</div>\n              <div>Space: {algorithm.getComplexity().space.average}</div>\n              <div>Stable: {algorithm.isStable() ? 'Yes' : 'No'}</div>\n            </div>\n          </div>\n        )}\n        \n        {/* Heap visualization when appropriate */}\n        {showHeapView && heapStructure && (\n          <div className=\"heap-view-container\">\n            <h4>Binary Heap Structure</h4>\n            <HeapVisualizer \n              heapStructure={heapStructure} \n              width={width} \n              height={300} \n            />\n          </div>\n        )}\n      </div>\n      \n      <div className=\"controls-container\">\n        <div className=\"playback-controls\">\n          <button \n            onClick={() => navigateStep(0)}\n            disabled={currentStep === 0 || isPlaying}\n          >\n            <span role=\"img\" aria-label=\"First Step\">⏮️</span> First\n          </button>\n          <button \n            onClick={() => navigateStep(currentStep - 1)}\n            disabled={currentStep === 0 || isPlaying}\n          >\n            <span role=\"img\" aria-label=\"Previous Step\">⏪</span> Prev\n          </button>\n          <button onClick={togglePlayback}>\n            {isPlaying ? \n              <span role=\"img\" aria-label=\"Pause\">⏸️</span> : \n              <span role=\"img\" aria-label=\"Play\">▶️</span>\n            } {isPlaying ? 'Pause' : 'Play'}\n          </button>\n          <button \n            onClick={() => navigateStep(currentStep + 1)}\n            disabled={currentStep >= totalSteps - 1 || isPlaying}\n          >\n            <span role=\"img\" aria-label=\"Next Step\">⏩</span> Next\n          </button>\n          <button \n            onClick={() => navigateStep(totalSteps - 1)}\n            disabled={currentStep >= totalSteps - 1 || isPlaying}\n          >\n            <span role=\"img\" aria-label=\"Last Step\">⏭️</span> Last\n          </button>\n        </div>\n        \n        <div className=\"speed-control\">\n          <label>Speed: </label>\n          <input\n            type=\"range\"\n            min=\"0.1\"\n            max=\"10\"\n            step=\"0.1\"\n            value={playbackSpeed}\n            onChange={(e) => setPlaybackSpeed(parseFloat(e.target.value))}\n            disabled={isPlaying}\n          />\n          <span>{playbackSpeed.toFixed(1)}x</span>\n        </div>\n        \n        <div className=\"progress-indicator\">\n          <div className=\"step-counter\">\n            Step: {currentStep} / {totalSteps}\n          </div>\n          <progress value={currentStep} max={totalSteps || 100} />\n        </div>\n        \n        <div className=\"data-controls\">\n          <div className=\"control-group\">\n            <label>Data Type:</label>\n            <select value={selectedDataSet} onChange={handleDataSetChange} disabled={isPlaying}>\n              <option value=\"random\">Random</option>\n              <option value=\"nearly-sorted\">Nearly Sorted</option>\n              <option value=\"reversed\">Reversed</option>\n              <option value=\"few-unique\">Few Unique Values</option>\n              <option value=\"sorted\">Already Sorted</option>\n              <option value=\"sawtooth\">Sawtooth Pattern</option>\n            </select>\n          </div>\n          \n          <div className=\"control-group\">\n            <label>Size:</label>\n            <select value={dataSize} onChange={handleSizeChange} disabled={isPlaying}>\n              <option value=\"10\">Tiny (10)</option>\n              <option value=\"30\">Small (30)</option>\n              <option value=\"50\">Medium (50)</option>\n              <option value=\"100\">Large (100)</option>\n              <option value=\"250\">X-Large (250)</option>\n              <option value=\"1000\">Huge (1,000)</option>\n              <option value=\"10000\">Extreme (10,000)</option>\n            </select>\n          </div>\n          \n          <div className=\"control-group\">\n            <label>Renderer:</label>\n            <select value={renderMode} onChange={handleRenderModeChange} disabled={isPlaying}>\n              <option value=\"webgl\">WebGL (Fast)</option>\n              <option value=\"canvas\">Canvas (Compatible)</option>\n            </select>\n          </div>\n          \n          <button onClick={handleRegenerateData} disabled={isPlaying}>\n            Regenerate Data\n          </button>\n        </div>\n        \n        {metrics && Object.keys(metrics).length > 0 && (\n          <div className=\"metrics-panel\">\n            <h4>Performance Metrics</h4>\n            <div className=\"metrics-grid\">\n              <div className=\"metric\">\n                <label>Comparisons:</label>\n                <span>{metrics.comparisons?.toLocaleString()}</span>\n              </div>\n              <div className=\"metric\">\n                <label>Swaps:</label>\n                <span>{metrics.swaps?.toLocaleString()}</span>\n              </div>\n              <div className=\"metric\">\n                <label>Array Accesses:</label>\n                <span>{(metrics.reads + metrics.writes)?.toLocaleString()}</span>\n              </div>\n              <div className=\"metric\">\n                <label>Execution Time:</label>\n                <span>{metrics.executionTime?.toFixed(2)} ms</span>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {currentStepData && (\n          <div className=\"step-info\">\n            <h4>Current Step</h4>\n            <div className=\"step-message\">{currentStepData.message || 'No message for this step'}</div>\n            <div className=\"step-details\">\n              <div>Type: {currentStepData.type || 'unknown'}</div>\n              {currentStepData.indices && (\n                <div>Indices: {currentStepData.indices.join(', ')}</div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SortingVisualizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}