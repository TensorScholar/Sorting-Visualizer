{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/AlgorithmComparison.js\";\n// src/components/AlgorithmComparison.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { WebGLRenderer } from '../visualization/renderers/webgl-renderer';\nimport { generateDataSet } from '../data/generators';\nimport PythonJSBridge from '../utils/python-js-bridge';\n\n// Import with proper PascalCase naming convention\nimport HeapVisualizer from '../visualization/components/HeapVisualizer';\n\n// Fallback import for systems with case sensitivity issues\nlet HeapVisualizerComponent = HeapVisualizer;\nif (!HeapVisualizerComponent) {\n  try {\n    HeapVisualizerComponent = require('../visualization/components/heap-visualizer').default;\n  } catch (e) {\n    console.error('Failed to import HeapVisualizer component:', e);\n    // Provide a fallback implementation if needed\n    HeapVisualizerComponent = () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 37\n      }\n    }, \"Heap visualization unavailable\");\n  }\n}\n\n/**\n * Side-by-side comparison of JavaScript and Python algorithm implementations\n * Visualizes execution metrics, performance differences, and step-by-step execution\n */\nconst AlgorithmComparison = ({\n  width = 1200,\n  height = 600\n}) => {\n  // State and implementation...\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"algorithm-comparison\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, heapStructure && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heap-view-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Binary Heap Structure\"), /*#__PURE__*/React.createElement(HeapVisualizerComponent, {\n    heapStructure: heapStructure,\n    width: width / 2,\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })));\n};\nexport default AlgorithmComparison;","map":{"version":3,"names":["React","useState","useEffect","useRef","WebGLRenderer","generateDataSet","PythonJSBridge","HeapVisualizer","HeapVisualizerComponent","require","default","e","console","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","AlgorithmComparison","width","height","className","heapStructure"],"sources":["/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/AlgorithmComparison.js"],"sourcesContent":["// src/components/AlgorithmComparison.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { WebGLRenderer } from '../visualization/renderers/webgl-renderer';\nimport { generateDataSet } from '../data/generators';\nimport PythonJSBridge from '../utils/python-js-bridge';\n\n// Import with proper PascalCase naming convention\nimport HeapVisualizer from '../visualization/components/HeapVisualizer';\n\n// Fallback import for systems with case sensitivity issues\nlet HeapVisualizerComponent = HeapVisualizer;\nif (!HeapVisualizerComponent) {\n  try {\n    HeapVisualizerComponent = require('../visualization/components/heap-visualizer').default;\n  } catch (e) {\n    console.error('Failed to import HeapVisualizer component:', e);\n    // Provide a fallback implementation if needed\n    HeapVisualizerComponent = () => <div>Heap visualization unavailable</div>;\n  }\n}\n\n/**\n * Side-by-side comparison of JavaScript and Python algorithm implementations\n * Visualizes execution metrics, performance differences, and step-by-step execution\n */\nconst AlgorithmComparison = ({ width = 1200, height = 600 }) => {\n  // State and implementation...\n  \n  return (\n    <div className=\"algorithm-comparison\">\n      {/* Component implementation */}\n      \n      {/* Use the properly imported HeapVisualizer component */}\n      {heapStructure && (\n        <div className=\"heap-view-container\">\n          <h4>Binary Heap Structure</h4>\n          <HeapVisualizerComponent \n            heapStructure={heapStructure} \n            width={width/2} \n            height={300} \n          />\n        </div>\n      )}\n      \n      {/* Rest of component implementation */}\n    </div>\n  );\n};\n\nexport default AlgorithmComparison;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,aAAa,QAAQ,2CAA2C;AACzE,SAASC,eAAe,QAAQ,oBAAoB;AACpD,OAAOC,cAAc,MAAM,2BAA2B;;AAEtD;AACA,OAAOC,cAAc,MAAM,4CAA4C;;AAEvE;AACA,IAAIC,uBAAuB,GAAGD,cAAc;AAC5C,IAAI,CAACC,uBAAuB,EAAE;EAC5B,IAAI;IACFA,uBAAuB,GAAGC,OAAO,CAAC,6CAA6C,CAAC,CAACC,OAAO;EAC1F,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,4CAA4C,EAAEF,CAAC,CAAC;IAC9D;IACAH,uBAAuB,GAAGA,CAAA,kBAAMR,KAAA,CAAAc,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAK,gCAAmC,CAAC;EAC3E;AACF;;AAEA;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,KAAK,GAAG,IAAI;EAAEC,MAAM,GAAG;AAAI,CAAC,KAAK;EAC9D;;EAEA,oBACEvB,KAAA,CAAAc,aAAA;IAAKU,SAAS,EAAC,sBAAsB;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAIlCK,aAAa,iBACZzB,KAAA,CAAAc,aAAA;IAAKU,SAAS,EAAC,qBAAqB;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClCpB,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,uBAAyB,CAAC,eAC9BpB,KAAA,CAAAc,aAAA,CAACN,uBAAuB;IACtBiB,aAAa,EAAEA,aAAc;IAC7BH,KAAK,EAAEA,KAAK,GAAC,CAAE;IACfC,MAAM,EAAE,GAAI;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACb,CACE,CAIJ,CAAC;AAEV,CAAC;AAED,eAAeC,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module"}