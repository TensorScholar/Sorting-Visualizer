{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/metrics-display.js\";\n// src/components/metrics-display.js\n\n/**\n * @file Performance Metrics Display Component\n * @author Algorithm Visualization Platform Team\n * @version 1.0.0\n * \n * @description\n * A comprehensive metrics visualization component that displays and analyzes\n * algorithm performance characteristics with academic precision. This component\n * renders operation counts, time complexity analysis, and comparison metrics\n * using responsive visualizations and interactive data displays.\n * \n * The architecture follows a modular design with specialized sub-components\n * for different metric categories and visualization types, enabling both\n * detailed analysis of individual algorithm performance and comparative\n * evaluation across multiple algorithms.\n *\n * Time complexity: O(1) for rendering with pre-computed metrics\n * Space complexity: O(k) where k is the number of metrics tracked\n *\n * @requires React\n * @requires Chart.js (imported dynamically for performance)\n */\n\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\n\n/**\n * Helper functions for metrics analysis and processing\n * @namespace MetricsAnalysis\n * @private\n */\nconst MetricsAnalysis = {\n  /**\n   * Calculate derived efficiency metrics\n   * @param {Object} metrics - Raw metrics data\n   * @returns {Object} Derived metrics\n   */\n  calculateDerivedMetrics(metrics) {\n    if (!metrics || Object.keys(metrics).length === 0) {\n      return {};\n    }\n\n    // Calculate operation ratios and efficiency measures\n    const totalOperations = (metrics.comparisons || 0) + (metrics.swaps || 0) + (metrics.reads || 0) + (metrics.writes || 0);\n    const arraySize = metrics.arraySize || 0;\n    return {\n      // Operation ratios\n      comparisonRatio: totalOperations ? metrics.comparisons / totalOperations : 0,\n      swapRatio: totalOperations ? metrics.swaps / totalOperations : 0,\n      readRatio: totalOperations ? metrics.reads / totalOperations : 0,\n      writeRatio: totalOperations ? metrics.writes / totalOperations : 0,\n      // Efficiency measures\n      operationsPerElement: arraySize ? totalOperations / arraySize : 0,\n      comparisonsPerElement: arraySize ? metrics.comparisons / arraySize : 0,\n      swapsPerElement: arraySize ? metrics.swaps / arraySize : 0,\n      // Time efficiency\n      operationsPerMs: metrics.executionTime ? totalOperations / metrics.executionTime : 0,\n      elementsPerMs: metrics.executionTime ? arraySize / metrics.executionTime : 0,\n      // Memory metrics\n      memoryAccessRatio: totalOperations ? metrics.memoryAccesses / totalOperations : 0,\n      // Cache metrics\n      cacheHitRatio: metrics.cacheHits !== undefined && metrics.cacheMisses !== undefined ? metrics.cacheHits / (metrics.cacheHits + metrics.cacheMisses || 1) : undefined,\n      // Total operations\n      totalOperations\n    };\n  },\n  /**\n   * Calculate theoretical complexity values for known size\n   * @param {Object} complexity - Complexity information (O(n), O(n log n), etc.)\n   * @param {number} n - Size of the input\n   * @returns {Object} Theoretical operation counts\n   */\n  calculateTheoreticalComplexity(complexity, n) {\n    if (!complexity || !n) return {};\n\n    // Parse complexity expressions and calculate theoretical values\n    const calculations = {};\n\n    // Helper to evaluate common complexity expressions\n    const evaluate = expr => {\n      if (expr.includes('n²') || expr.includes('n^2')) return n * n;\n      if (expr.includes('n log n')) return n * Math.log2(n);\n      if (expr.includes('n')) return n;\n      if (expr.includes('log n')) return Math.log2(n);\n      if (expr.includes('1')) return 1;\n      // Default case: can't parse, return n as fallback\n      return n;\n    };\n\n    // Calculate theoretical values for different complexity classes\n    if (complexity.time) {\n      if (complexity.time.average) {\n        calculations.average = evaluate(complexity.time.average);\n      }\n      if (complexity.time.worst) {\n        calculations.worst = evaluate(complexity.time.worst);\n      }\n      if (complexity.time.best) {\n        calculations.best = evaluate(complexity.time.best);\n      }\n    }\n    return calculations;\n  },\n  /**\n   * Format a number for display with appropriate units\n   * @param {number} value - The value to format\n   * @param {string} [precision='0'] - Decimal precision\n   * @returns {string} Formatted value\n   */\n  formatNumber(value, precision = '0') {\n    if (value === undefined || value === null) return 'N/A';\n    if (value === 0) return '0';\n\n    // Format based on magnitude\n    if (Math.abs(value) >= 1e9) {\n      return (value / 1e9).toFixed(precision) + 'B';\n    } else if (Math.abs(value) >= 1e6) {\n      return (value / 1e6).toFixed(precision) + 'M';\n    } else if (Math.abs(value) >= 1e3) {\n      return (value / 1e3).toFixed(precision) + 'K';\n    } else if (Math.abs(value) < 0.01 && value !== 0) {\n      return value.toExponential(2);\n    } else {\n      return value.toFixed(precision);\n    }\n  },\n  /**\n   * Format time value with appropriate units\n   * @param {number} timeMs - Time in milliseconds\n   * @returns {string} Formatted time string\n   */\n  formatTime(timeMs) {\n    if (timeMs === undefined || timeMs === null) return 'N/A';\n    if (timeMs === 0) return '0 ms';\n    if (timeMs < 1) {\n      return (timeMs * 1000).toFixed(2) + ' μs';\n    } else if (timeMs < 1000) {\n      return timeMs.toFixed(2) + ' ms';\n    } else {\n      return (timeMs / 1000).toFixed(2) + ' s';\n    }\n  },\n  /**\n   * Classify algorithm performance based on metrics\n   * @param {Object} metrics - Raw metrics data\n   * @param {Object} theoreticalValues - Theoretical values\n   * @returns {Object} Performance classification\n   */\n  classifyPerformance(metrics, theoreticalValues) {\n    if (!metrics || !theoreticalValues) return {};\n    const classification = {\n      efficiency: null,\n      scalability: null,\n      memoryUsage: null,\n      overall: null\n    };\n\n    // Evaluate efficiency based on comparison to theoretical values\n    if (theoreticalValues.average && metrics.comparisons) {\n      const ratio = metrics.comparisons / theoreticalValues.average;\n      if (ratio < 0.8) classification.efficiency = 'excellent';else if (ratio < 1.2) classification.efficiency = 'good';else if (ratio < 2) classification.efficiency = 'fair';else classification.efficiency = 'poor';\n    }\n\n    // Evaluate memory usage\n    if (metrics.auxiliarySpace !== undefined && metrics.arraySize) {\n      const memoryRatio = metrics.auxiliarySpace / metrics.arraySize;\n      if (memoryRatio < 0.1) classification.memoryUsage = 'excellent';else if (memoryRatio < 0.5) classification.memoryUsage = 'good';else if (memoryRatio < 1) classification.memoryUsage = 'fair';else classification.memoryUsage = 'high';\n    }\n    return classification;\n  }\n};\n\n/**\n * Component that displays basic operation counts\n * @param {Object} props - Component properties\n * @param {Object} props.metrics - Algorithm metrics\n * @returns {JSX.Element} Rendered component\n * @private\n */\nconst BasicMetrics = ({\n  metrics\n}) => {\n  if (!metrics || Object.keys(metrics).length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"no-metrics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 12\n      }\n    }, \"No metrics available\");\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"basic-metrics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metrics-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, \"Comparisons\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, MetricsAnalysis.formatNumber(metrics.comparisons))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, \"Swaps\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, MetricsAnalysis.formatNumber(metrics.swaps))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, \"Array Reads\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, MetricsAnalysis.formatNumber(metrics.reads))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, \"Array Writes\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, MetricsAnalysis.formatNumber(metrics.writes))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, \"Memory Accesses\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, MetricsAnalysis.formatNumber(metrics.memoryAccesses))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, \"Execution Time\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, MetricsAnalysis.formatTime(metrics.executionTime))), metrics.recursiveCalls !== undefined && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, \"Recursive Calls\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, MetricsAnalysis.formatNumber(metrics.recursiveCalls))), metrics.auxiliarySpace !== undefined && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, \"Auxiliary Space\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, MetricsAnalysis.formatNumber(metrics.auxiliarySpace), \" units\"))));\n};\n\n/**\n * Component that displays derived performance metrics\n * @param {Object} props - Component properties\n * @param {Object} props.metrics - Algorithm metrics\n * @param {number} props.arraySize - Size of the array being sorted\n * @returns {JSX.Element} Rendered component\n * @private\n */\nconst DerivedMetrics = ({\n  metrics,\n  arraySize\n}) => {\n  // Calculate derived metrics\n  const derivedMetrics = useMemo(() => {\n    const extendedMetrics = {\n      ...metrics,\n      arraySize\n    };\n    return MetricsAnalysis.calculateDerivedMetrics(extendedMetrics);\n  }, [metrics, arraySize]);\n  if (!derivedMetrics || Object.keys(derivedMetrics).length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"derived-metrics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"metrics-section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }\n  }, \"Performance Analysis\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metrics-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  }, \"Operations per Element\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, derivedMetrics.operationsPerElement.toFixed(2))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }, \"Comparisons per Element\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, derivedMetrics.comparisonsPerElement.toFixed(2))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, \"Processing Speed\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  }, (derivedMetrics.elementsPerMs * 1000).toFixed(2), \" elements/sec\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }, \"Operation Speed\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  }, (derivedMetrics.operationsPerMs * 1000).toFixed(2), \" ops/sec\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"operation-ratio-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subsection-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, \"Operation Distribution\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ratio-bars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ratio-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ratio-fill comparison-color\",\n    style: {\n      width: `${derivedMetrics.comparisonRatio * 100}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ratio-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }\n  }, \"Comparisons\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ratio-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, (derivedMetrics.comparisonRatio * 100).toFixed(1), \"%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ratio-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ratio-fill swap-color\",\n    style: {\n      width: `${derivedMetrics.swapRatio * 100}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ratio-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }, \"Swaps\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ratio-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  }, (derivedMetrics.swapRatio * 100).toFixed(1), \"%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ratio-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ratio-fill read-color\",\n    style: {\n      width: `${derivedMetrics.readRatio * 100}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ratio-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, \"Reads\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ratio-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, (derivedMetrics.readRatio * 100).toFixed(1), \"%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ratio-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ratio-fill write-color\",\n    style: {\n      width: `${derivedMetrics.writeRatio * 100}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ratio-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }\n  }, \"Writes\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ratio-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, (derivedMetrics.writeRatio * 100).toFixed(1), \"%\")))));\n};\n\n/**\n * Component that displays theoretical complexity analysis\n * @param {Object} props - Component properties\n * @param {Object} props.complexity - Algorithm complexity information\n * @param {Object} props.metrics - Algorithm metrics\n * @param {number} props.arraySize - Size of the array being sorted\n * @returns {JSX.Element} Rendered component\n * @private\n */\nconst ComplexityAnalysis = ({\n  complexity,\n  metrics,\n  arraySize\n}) => {\n  var _complexity$time, _complexity$time2, _complexity$time3, _complexity$space;\n  // Calculate theoretical values\n  const theoreticalValues = useMemo(() => {\n    return MetricsAnalysis.calculateTheoreticalComplexity(complexity, arraySize);\n  }, [complexity, arraySize]);\n\n  // Classification of performance\n  const classification = useMemo(() => {\n    return MetricsAnalysis.classifyPerformance(metrics, theoreticalValues);\n  }, [metrics, theoreticalValues]);\n  if (!complexity || !metrics) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-analysis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"metrics-section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }\n  }, \"Complexity Analysis\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 11\n    }\n  }, \"Time Complexity\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-values\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"complexity-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 18\n    }\n  }, \"Best:\"), \" \", ((_complexity$time = complexity.time) === null || _complexity$time === void 0 ? void 0 : _complexity$time.best) || 'N/A'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"complexity-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 18\n    }\n  }, \"Average:\"), \" \", ((_complexity$time2 = complexity.time) === null || _complexity$time2 === void 0 ? void 0 : _complexity$time2.average) || 'N/A'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"complexity-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 18\n    }\n  }, \"Worst:\"), \" \", ((_complexity$time3 = complexity.time) === null || _complexity$time3 === void 0 ? void 0 : _complexity$time3.worst) || 'N/A'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 11\n    }\n  }, \"Space Complexity\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-values\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"complexity-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 18\n    }\n  }, \"Auxiliary:\"), \" \", ((_complexity$space = complexity.space) === null || _complexity$space === void 0 ? void 0 : _complexity$space.average) || 'N/A'))), classification.efficiency && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 13\n    }\n  }, \"Performance Classification\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-values\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"complexity-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 17\n    }\n  }, \"Efficiency:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: `classification ${classification.efficiency}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 17\n    }\n  }, classification.efficiency)), classification.memoryUsage && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"complexity-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 19\n    }\n  }, \"Memory Usage:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: `classification ${classification.memoryUsage}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 19\n    }\n  }, classification.memoryUsage))))), theoreticalValues.average && metrics.comparisons && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"theoretical-comparison\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subsection-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 11\n    }\n  }, \"Actual vs. Theoretical\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 15\n    }\n  }, \"Comparisons\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-bars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-bar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-bar-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 19\n    }\n  }, \"Actual\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-bar-fill actual\",\n    style: {\n      width: `${Math.min(100, metrics.comparisons / theoreticalValues.worst * 100)}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-bar-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 19\n    }\n  }, MetricsAnalysis.formatNumber(metrics.comparisons))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-bar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-bar-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 19\n    }\n  }, \"Theoretical (Avg)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-bar-fill theoretical\",\n    style: {\n      width: `${Math.min(100, theoreticalValues.average / theoreticalValues.worst * 100)}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-bar-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 19\n    }\n  }, MetricsAnalysis.formatNumber(theoreticalValues.average))), theoreticalValues.worst && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-bar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-bar-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 21\n    }\n  }, \"Theoretical (Worst)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-bar-fill theoretical-worst\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-bar-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 21\n    }\n  }, MetricsAnalysis.formatNumber(theoreticalValues.worst)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"efficiency-ratio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"efficiency-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 13\n    }\n  }, \"Performance Ratio:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"efficiency-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }\n  }, (metrics.comparisons / theoreticalValues.average).toFixed(2), \"x theoretical average\"))));\n};\n\n/**\n * Component for visualizing algorithm metrics with Chart.js\n * This component is loaded dynamically to reduce initial bundle size\n * @param {Object} props - Component properties\n * @param {Object} props.metrics - Algorithm metrics\n * @param {Object[]} props.historyMetrics - Metrics history for time-series visualization\n * @returns {JSX.Element} Rendered component\n * @private\n */\nconst MetricsCharts = ({\n  metrics,\n  historyMetrics\n}) => {\n  const [chartLibrary, setChartLibrary] = useState(null);\n  const operationsChartRef = useRef(null);\n  const timeSeriesChartRef = useRef(null);\n\n  // Load Chart.js library dynamically\n  useEffect(() => {\n    const loadChartLibrary = async () => {\n      try {\n        // Dynamic import to reduce initial bundle size\n        const Chart = await import('chart.js/auto');\n        setChartLibrary(Chart);\n      } catch (error) {\n        console.error('Failed to load Chart.js library:', error);\n      }\n    };\n    loadChartLibrary();\n\n    // Cleanup function\n    return () => {\n      var _operationsChartRef$c, _timeSeriesChartRef$c;\n      if ((_operationsChartRef$c = operationsChartRef.current) === null || _operationsChartRef$c === void 0 ? void 0 : _operationsChartRef$c.chartInstance) {\n        operationsChartRef.current.chartInstance.destroy();\n      }\n      if ((_timeSeriesChartRef$c = timeSeriesChartRef.current) === null || _timeSeriesChartRef$c === void 0 ? void 0 : _timeSeriesChartRef$c.chartInstance) {\n        timeSeriesChartRef.current.chartInstance.destroy();\n      }\n    };\n  }, []);\n\n  // Create operations chart\n  useEffect(() => {\n    if (!chartLibrary || !metrics || !operationsChartRef.current) return;\n\n    // Destroy previous chart if exists\n    if (operationsChartRef.current.chartInstance) {\n      operationsChartRef.current.chartInstance.destroy();\n    }\n    const ctx = operationsChartRef.current.getContext('2d');\n\n    // Create operations chart\n    const chartInstance = new chartLibrary.Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: ['Comparisons', 'Swaps', 'Reads', 'Writes'],\n        datasets: [{\n          label: 'Operation Counts',\n          data: [metrics.comparisons || 0, metrics.swaps || 0, metrics.reads || 0, metrics.writes || 0],\n          backgroundColor: ['rgba(54, 162, 235, 0.7)',\n          // Blue for comparisons\n          'rgba(255, 99, 132, 0.7)',\n          // Red for swaps\n          'rgba(75, 192, 192, 0.7)',\n          // Teal for reads\n          'rgba(255, 159, 64, 0.7)' // Orange for writes\n          ],\n          borderColor: ['rgba(54, 162, 235, 1)', 'rgba(255, 99, 132, 1)', 'rgba(75, 192, 192, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          title: {\n            display: true,\n            text: 'Operation Distribution'\n          },\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                const value = context.raw;\n                return `${context.label}: ${MetricsAnalysis.formatNumber(value)}`;\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true,\n            ticks: {\n              callback: function (value) {\n                return MetricsAnalysis.formatNumber(value);\n              }\n            }\n          }\n        }\n      }\n    });\n\n    // Store chart instance for cleanup\n    operationsChartRef.current.chartInstance = chartInstance;\n  }, [chartLibrary, metrics]);\n\n  // Create time series chart if history metrics are available\n  useEffect(() => {\n    if (!chartLibrary || !historyMetrics || !historyMetrics.length || !timeSeriesChartRef.current) {\n      return;\n    }\n\n    // Destroy previous chart if exists\n    if (timeSeriesChartRef.current.chartInstance) {\n      timeSeriesChartRef.current.chartInstance.destroy();\n    }\n    const ctx = timeSeriesChartRef.current.getContext('2d');\n\n    // Extract time series data\n    const timePoints = historyMetrics.map((entry, index) => index);\n    const comparisonSeries = historyMetrics.map(entry => entry.comparisons || 0);\n    const swapSeries = historyMetrics.map(entry => entry.swaps || 0);\n\n    // Create time series chart\n    const chartInstance = new chartLibrary.Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: timePoints,\n        datasets: [{\n          label: 'Comparisons',\n          data: comparisonSeries,\n          borderColor: 'rgba(54, 162, 235, 1)',\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          tension: 0.4,\n          fill: true\n        }, {\n          label: 'Swaps',\n          data: swapSeries,\n          borderColor: 'rgba(255, 99, 132, 1)',\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          tension: 0.4,\n          fill: true\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          title: {\n            display: true,\n            text: 'Operation Counts Over Time'\n          },\n          tooltip: {\n            mode: 'index',\n            intersect: false\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Algorithm Step'\n            }\n          },\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: 'Cumulative Operations'\n            },\n            ticks: {\n              callback: function (value) {\n                return MetricsAnalysis.formatNumber(value);\n              }\n            }\n          }\n        }\n      }\n    });\n\n    // Store chart instance for cleanup\n    timeSeriesChartRef.current.chartInstance = chartInstance;\n  }, [chartLibrary, historyMetrics]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metrics-charts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container operations-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: operationsChartRef,\n    height: \"250\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 9\n    }\n  })), historyMetrics && historyMetrics.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container time-series-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: timeSeriesChartRef,\n    height: \"250\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 11\n    }\n  })));\n};\n\n/**\n * Component that displays metrics for renderers like WebGL\n * @param {Object} props - Component properties\n * @param {Object} props.rendererMetrics - Renderer performance metrics\n * @returns {JSX.Element} Rendered component\n * @private\n */\nconst RendererMetrics = ({\n  rendererMetrics\n}) => {\n  if (!rendererMetrics) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"renderer-metrics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"metrics-section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 7\n    }\n  }, \"Rendering Performance\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metrics-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 11\n    }\n  }, \"FPS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 11\n    }\n  }, rendererMetrics.fps || 'N/A')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 11\n    }\n  }, \"Render Time\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 11\n    }\n  }, MetricsAnalysis.formatTime(rendererMetrics.renderTime))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 11\n    }\n  }, \"Elements\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 11\n    }\n  }, MetricsAnalysis.formatNumber(rendererMetrics.elementsRendered))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 11\n    }\n  }, \"Buffer Updates\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 11\n    }\n  }, rendererMetrics.bufferUpdates || 'N/A'))));\n};\n\n/**\n * MetricsDisplay component renders comprehensive performance metrics\n * for sorting algorithm visualization and analysis\n * \n * @param {Object} props - Component properties\n * @param {Object} props.metrics - Algorithm performance metrics\n * @param {Object} props.complexity - Algorithm complexity information\n * @param {Object} props.rendererMetrics - Renderer performance metrics\n * @param {number} props.arraySize - Size of array being processed\n * @param {Object[]} props.historyMetrics - Metrics history for time-series visualization\n * @param {boolean} [props.showCharts=true] - Whether to show charts\n * @param {boolean} [props.showDerived=true] - Whether to show derived metrics\n * @param {boolean} [props.showComplexity=true] - Whether to show complexity analysis\n * @param {boolean} [props.compact=false] - Whether to use compact display mode\n * @returns {JSX.Element} Rendered component\n */\nconst MetricsDisplay = ({\n  metrics,\n  complexity,\n  rendererMetrics,\n  arraySize,\n  historyMetrics,\n  showCharts = true,\n  showDerived = true,\n  showComplexity = true,\n  compact = false\n}) => {\n  // Track whether metrics has been initialized\n  const hasMetrics = metrics && Object.keys(metrics).length > 0;\n\n  // Component state\n  const [activeTab, setActiveTab] = useState('basic');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `metrics-display ${compact ? 'compact' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metrics-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"metrics-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 9\n    }\n  }, \"Performance Metrics\"), !compact && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metrics-tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `metrics-tab ${activeTab === 'basic' ? 'active' : ''}`,\n    onClick: () => setActiveTab('basic'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 13\n    }\n  }, \"Basic Metrics\"), showDerived && /*#__PURE__*/React.createElement(\"button\", {\n    className: `metrics-tab ${activeTab === 'derived' ? 'active' : ''}`,\n    onClick: () => setActiveTab('derived'),\n    disabled: !hasMetrics,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 15\n    }\n  }, \"Performance Analysis\"), showComplexity && /*#__PURE__*/React.createElement(\"button\", {\n    className: `metrics-tab ${activeTab === 'complexity' ? 'active' : ''}`,\n    onClick: () => setActiveTab('complexity'),\n    disabled: !hasMetrics || !complexity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 15\n    }\n  }, \"Complexity Analysis\"), showCharts && /*#__PURE__*/React.createElement(\"button\", {\n    className: `metrics-tab ${activeTab === 'charts' ? 'active' : ''}`,\n    onClick: () => setActiveTab('charts'),\n    disabled: !hasMetrics,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 15\n    }\n  }, \"Charts\"), rendererMetrics && /*#__PURE__*/React.createElement(\"button\", {\n    className: `metrics-tab ${activeTab === 'renderer' ? 'active' : ''}`,\n    onClick: () => setActiveTab('renderer'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 15\n    }\n  }, \"Renderer Performance\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metrics-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 7\n    }\n  }, !hasMetrics ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metrics-placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 13\n    }\n  }, \"Execute an algorithm to view performance metrics\")) : /*#__PURE__*/React.createElement(React.Fragment, null, (compact || activeTab === 'basic') && /*#__PURE__*/React.createElement(BasicMetrics, {\n    metrics: metrics,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 15\n    }\n  }), showDerived && (compact || activeTab === 'derived') && /*#__PURE__*/React.createElement(DerivedMetrics, {\n    metrics: metrics,\n    arraySize: arraySize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 15\n    }\n  }), showComplexity && (compact || activeTab === 'complexity') && complexity && /*#__PURE__*/React.createElement(ComplexityAnalysis, {\n    complexity: complexity,\n    metrics: metrics,\n    arraySize: arraySize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 15\n    }\n  }), showCharts && (compact || activeTab === 'charts') && /*#__PURE__*/React.createElement(MetricsCharts, {\n    metrics: metrics,\n    historyMetrics: historyMetrics,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 15\n    }\n  }), rendererMetrics && (compact || activeTab === 'renderer') && /*#__PURE__*/React.createElement(RendererMetrics, {\n    rendererMetrics: rendererMetrics,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 15\n    }\n  }))));\n};\nexport default MetricsDisplay;","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","MetricsAnalysis","calculateDerivedMetrics","metrics","Object","keys","length","totalOperations","comparisons","swaps","reads","writes","arraySize","comparisonRatio","swapRatio","readRatio","writeRatio","operationsPerElement","comparisonsPerElement","swapsPerElement","operationsPerMs","executionTime","elementsPerMs","memoryAccessRatio","memoryAccesses","cacheHitRatio","cacheHits","undefined","cacheMisses","calculateTheoreticalComplexity","complexity","n","calculations","evaluate","expr","includes","Math","log2","time","average","worst","best","formatNumber","value","precision","abs","toFixed","toExponential","formatTime","timeMs","classifyPerformance","theoreticalValues","classification","efficiency","scalability","memoryUsage","overall","ratio","auxiliarySpace","memoryRatio","BasicMetrics","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","recursiveCalls","DerivedMetrics","derivedMetrics","extendedMetrics","style","width","ComplexityAnalysis","_complexity$time","_complexity$time2","_complexity$time3","_complexity$space","space","min","MetricsCharts","historyMetrics","chartLibrary","setChartLibrary","operationsChartRef","timeSeriesChartRef","loadChartLibrary","Chart","error","console","_operationsChartRef$c","_timeSeriesChartRef$c","current","chartInstance","destroy","ctx","getContext","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","plugins","title","display","text","tooltip","callbacks","context","raw","scales","y","beginAtZero","ticks","callback","timePoints","map","entry","index","comparisonSeries","swapSeries","tension","fill","mode","intersect","x","ref","height","RendererMetrics","rendererMetrics","fps","renderTime","elementsRendered","bufferUpdates","MetricsDisplay","showCharts","showDerived","showComplexity","compact","hasMetrics","activeTab","setActiveTab","onClick","disabled","Fragment"],"sources":["/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/metrics-display.js"],"sourcesContent":["// src/components/metrics-display.js\n\n/**\n * @file Performance Metrics Display Component\n * @author Algorithm Visualization Platform Team\n * @version 1.0.0\n * \n * @description\n * A comprehensive metrics visualization component that displays and analyzes\n * algorithm performance characteristics with academic precision. This component\n * renders operation counts, time complexity analysis, and comparison metrics\n * using responsive visualizations and interactive data displays.\n * \n * The architecture follows a modular design with specialized sub-components\n * for different metric categories and visualization types, enabling both\n * detailed analysis of individual algorithm performance and comparative\n * evaluation across multiple algorithms.\n *\n * Time complexity: O(1) for rendering with pre-computed metrics\n * Space complexity: O(k) where k is the number of metrics tracked\n *\n * @requires React\n * @requires Chart.js (imported dynamically for performance)\n */\n\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\n\n/**\n * Helper functions for metrics analysis and processing\n * @namespace MetricsAnalysis\n * @private\n */\nconst MetricsAnalysis = {\n  /**\n   * Calculate derived efficiency metrics\n   * @param {Object} metrics - Raw metrics data\n   * @returns {Object} Derived metrics\n   */\n  calculateDerivedMetrics(metrics) {\n    if (!metrics || Object.keys(metrics).length === 0) {\n      return {};\n    }\n    \n    // Calculate operation ratios and efficiency measures\n    const totalOperations = (metrics.comparisons || 0) + \n                           (metrics.swaps || 0) + \n                           (metrics.reads || 0) + \n                           (metrics.writes || 0);\n    \n    const arraySize = metrics.arraySize || 0;\n    \n    return {\n      // Operation ratios\n      comparisonRatio: totalOperations ? metrics.comparisons / totalOperations : 0,\n      swapRatio: totalOperations ? metrics.swaps / totalOperations : 0,\n      readRatio: totalOperations ? metrics.reads / totalOperations : 0,\n      writeRatio: totalOperations ? metrics.writes / totalOperations : 0,\n      \n      // Efficiency measures\n      operationsPerElement: arraySize ? totalOperations / arraySize : 0,\n      comparisonsPerElement: arraySize ? metrics.comparisons / arraySize : 0,\n      swapsPerElement: arraySize ? metrics.swaps / arraySize : 0,\n      \n      // Time efficiency\n      operationsPerMs: metrics.executionTime ? totalOperations / metrics.executionTime : 0,\n      elementsPerMs: metrics.executionTime ? arraySize / metrics.executionTime : 0,\n      \n      // Memory metrics\n      memoryAccessRatio: totalOperations ? metrics.memoryAccesses / totalOperations : 0,\n      \n      // Cache metrics\n      cacheHitRatio: (metrics.cacheHits !== undefined && metrics.cacheMisses !== undefined) ? \n        metrics.cacheHits / (metrics.cacheHits + metrics.cacheMisses || 1) : undefined,\n      \n      // Total operations\n      totalOperations\n    };\n  },\n  \n  /**\n   * Calculate theoretical complexity values for known size\n   * @param {Object} complexity - Complexity information (O(n), O(n log n), etc.)\n   * @param {number} n - Size of the input\n   * @returns {Object} Theoretical operation counts\n   */\n  calculateTheoreticalComplexity(complexity, n) {\n    if (!complexity || !n) return {};\n    \n    // Parse complexity expressions and calculate theoretical values\n    const calculations = {};\n    \n    // Helper to evaluate common complexity expressions\n    const evaluate = (expr) => {\n      if (expr.includes('n²') || expr.includes('n^2')) return n * n;\n      if (expr.includes('n log n')) return n * Math.log2(n);\n      if (expr.includes('n')) return n;\n      if (expr.includes('log n')) return Math.log2(n);\n      if (expr.includes('1')) return 1;\n      // Default case: can't parse, return n as fallback\n      return n;\n    };\n    \n    // Calculate theoretical values for different complexity classes\n    if (complexity.time) {\n      if (complexity.time.average) {\n        calculations.average = evaluate(complexity.time.average);\n      }\n      if (complexity.time.worst) {\n        calculations.worst = evaluate(complexity.time.worst);\n      }\n      if (complexity.time.best) {\n        calculations.best = evaluate(complexity.time.best);\n      }\n    }\n    \n    return calculations;\n  },\n  \n  /**\n   * Format a number for display with appropriate units\n   * @param {number} value - The value to format\n   * @param {string} [precision='0'] - Decimal precision\n   * @returns {string} Formatted value\n   */\n  formatNumber(value, precision = '0') {\n    if (value === undefined || value === null) return 'N/A';\n    \n    if (value === 0) return '0';\n    \n    // Format based on magnitude\n    if (Math.abs(value) >= 1e9) {\n      return (value / 1e9).toFixed(precision) + 'B';\n    } else if (Math.abs(value) >= 1e6) {\n      return (value / 1e6).toFixed(precision) + 'M';\n    } else if (Math.abs(value) >= 1e3) {\n      return (value / 1e3).toFixed(precision) + 'K';\n    } else if (Math.abs(value) < 0.01 && value !== 0) {\n      return value.toExponential(2);\n    } else {\n      return value.toFixed(precision);\n    }\n  },\n  \n  /**\n   * Format time value with appropriate units\n   * @param {number} timeMs - Time in milliseconds\n   * @returns {string} Formatted time string\n   */\n  formatTime(timeMs) {\n    if (timeMs === undefined || timeMs === null) return 'N/A';\n    \n    if (timeMs === 0) return '0 ms';\n    \n    if (timeMs < 1) {\n      return (timeMs * 1000).toFixed(2) + ' μs';\n    } else if (timeMs < 1000) {\n      return timeMs.toFixed(2) + ' ms';\n    } else {\n      return (timeMs / 1000).toFixed(2) + ' s';\n    }\n  },\n  \n  /**\n   * Classify algorithm performance based on metrics\n   * @param {Object} metrics - Raw metrics data\n   * @param {Object} theoreticalValues - Theoretical values\n   * @returns {Object} Performance classification\n   */\n  classifyPerformance(metrics, theoreticalValues) {\n    if (!metrics || !theoreticalValues) return {};\n    \n    const classification = {\n      efficiency: null,\n      scalability: null,\n      memoryUsage: null,\n      overall: null\n    };\n    \n    // Evaluate efficiency based on comparison to theoretical values\n    if (theoreticalValues.average && metrics.comparisons) {\n      const ratio = metrics.comparisons / theoreticalValues.average;\n      \n      if (ratio < 0.8) classification.efficiency = 'excellent';\n      else if (ratio < 1.2) classification.efficiency = 'good';\n      else if (ratio < 2) classification.efficiency = 'fair';\n      else classification.efficiency = 'poor';\n    }\n    \n    // Evaluate memory usage\n    if (metrics.auxiliarySpace !== undefined && metrics.arraySize) {\n      const memoryRatio = metrics.auxiliarySpace / metrics.arraySize;\n      \n      if (memoryRatio < 0.1) classification.memoryUsage = 'excellent';\n      else if (memoryRatio < 0.5) classification.memoryUsage = 'good';\n      else if (memoryRatio < 1) classification.memoryUsage = 'fair';\n      else classification.memoryUsage = 'high';\n    }\n    \n    return classification;\n  }\n};\n\n/**\n * Component that displays basic operation counts\n * @param {Object} props - Component properties\n * @param {Object} props.metrics - Algorithm metrics\n * @returns {JSX.Element} Rendered component\n * @private\n */\nconst BasicMetrics = ({ metrics }) => {\n  if (!metrics || Object.keys(metrics).length === 0) {\n    return <div className=\"no-metrics\">No metrics available</div>;\n  }\n  \n  return (\n    <div className=\"basic-metrics\">\n      <div className=\"metrics-grid\">\n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Comparisons</div>\n          <div className=\"metric-value\">{MetricsAnalysis.formatNumber(metrics.comparisons)}</div>\n        </div>\n        \n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Swaps</div>\n          <div className=\"metric-value\">{MetricsAnalysis.formatNumber(metrics.swaps)}</div>\n        </div>\n        \n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Array Reads</div>\n          <div className=\"metric-value\">{MetricsAnalysis.formatNumber(metrics.reads)}</div>\n        </div>\n        \n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Array Writes</div>\n          <div className=\"metric-value\">{MetricsAnalysis.formatNumber(metrics.writes)}</div>\n        </div>\n        \n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Memory Accesses</div>\n          <div className=\"metric-value\">{MetricsAnalysis.formatNumber(metrics.memoryAccesses)}</div>\n        </div>\n        \n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Execution Time</div>\n          <div className=\"metric-value\">{MetricsAnalysis.formatTime(metrics.executionTime)}</div>\n        </div>\n        \n        {metrics.recursiveCalls !== undefined && (\n          <div className=\"metric-card\">\n            <div className=\"metric-title\">Recursive Calls</div>\n            <div className=\"metric-value\">{MetricsAnalysis.formatNumber(metrics.recursiveCalls)}</div>\n          </div>\n        )}\n        \n        {metrics.auxiliarySpace !== undefined && (\n          <div className=\"metric-card\">\n            <div className=\"metric-title\">Auxiliary Space</div>\n            <div className=\"metric-value\">{MetricsAnalysis.formatNumber(metrics.auxiliarySpace)} units</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n/**\n * Component that displays derived performance metrics\n * @param {Object} props - Component properties\n * @param {Object} props.metrics - Algorithm metrics\n * @param {number} props.arraySize - Size of the array being sorted\n * @returns {JSX.Element} Rendered component\n * @private\n */\nconst DerivedMetrics = ({ metrics, arraySize }) => {\n  // Calculate derived metrics\n  const derivedMetrics = useMemo(() => {\n    const extendedMetrics = { ...metrics, arraySize };\n    return MetricsAnalysis.calculateDerivedMetrics(extendedMetrics);\n  }, [metrics, arraySize]);\n  \n  if (!derivedMetrics || Object.keys(derivedMetrics).length === 0) {\n    return null;\n  }\n  \n  return (\n    <div className=\"derived-metrics\">\n      <h3 className=\"metrics-section-title\">Performance Analysis</h3>\n      \n      <div className=\"metrics-grid\">\n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Operations per Element</div>\n          <div className=\"metric-value\">{derivedMetrics.operationsPerElement.toFixed(2)}</div>\n        </div>\n        \n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Comparisons per Element</div>\n          <div className=\"metric-value\">{derivedMetrics.comparisonsPerElement.toFixed(2)}</div>\n        </div>\n        \n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Processing Speed</div>\n          <div className=\"metric-value\">{(derivedMetrics.elementsPerMs * 1000).toFixed(2)} elements/sec</div>\n        </div>\n        \n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Operation Speed</div>\n          <div className=\"metric-value\">{(derivedMetrics.operationsPerMs * 1000).toFixed(2)} ops/sec</div>\n        </div>\n      </div>\n      \n      <div className=\"operation-ratio-chart\">\n        <h4 className=\"subsection-title\">Operation Distribution</h4>\n        <div className=\"ratio-bars\">\n          <div className=\"ratio-bar\">\n            <div \n              className=\"ratio-fill comparison-color\" \n              style={{ width: `${derivedMetrics.comparisonRatio * 100}%` }}\n            />\n            <span className=\"ratio-label\">Comparisons</span>\n            <span className=\"ratio-value\">{(derivedMetrics.comparisonRatio * 100).toFixed(1)}%</span>\n          </div>\n          \n          <div className=\"ratio-bar\">\n            <div \n              className=\"ratio-fill swap-color\" \n              style={{ width: `${derivedMetrics.swapRatio * 100}%` }}\n            />\n            <span className=\"ratio-label\">Swaps</span>\n            <span className=\"ratio-value\">{(derivedMetrics.swapRatio * 100).toFixed(1)}%</span>\n          </div>\n          \n          <div className=\"ratio-bar\">\n            <div \n              className=\"ratio-fill read-color\" \n              style={{ width: `${derivedMetrics.readRatio * 100}%` }}\n            />\n            <span className=\"ratio-label\">Reads</span>\n            <span className=\"ratio-value\">{(derivedMetrics.readRatio * 100).toFixed(1)}%</span>\n          </div>\n          \n          <div className=\"ratio-bar\">\n            <div \n              className=\"ratio-fill write-color\" \n              style={{ width: `${derivedMetrics.writeRatio * 100}%` }}\n            />\n            <span className=\"ratio-label\">Writes</span>\n            <span className=\"ratio-value\">{(derivedMetrics.writeRatio * 100).toFixed(1)}%</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/**\n * Component that displays theoretical complexity analysis\n * @param {Object} props - Component properties\n * @param {Object} props.complexity - Algorithm complexity information\n * @param {Object} props.metrics - Algorithm metrics\n * @param {number} props.arraySize - Size of the array being sorted\n * @returns {JSX.Element} Rendered component\n * @private\n */\nconst ComplexityAnalysis = ({ complexity, metrics, arraySize }) => {\n  // Calculate theoretical values\n  const theoreticalValues = useMemo(() => {\n    return MetricsAnalysis.calculateTheoreticalComplexity(complexity, arraySize);\n  }, [complexity, arraySize]);\n  \n  // Classification of performance\n  const classification = useMemo(() => {\n    return MetricsAnalysis.classifyPerformance(metrics, theoreticalValues);\n  }, [metrics, theoreticalValues]);\n  \n  if (!complexity || !metrics) {\n    return null;\n  }\n  \n  return (\n    <div className=\"complexity-analysis\">\n      <h3 className=\"metrics-section-title\">Complexity Analysis</h3>\n      \n      <div className=\"complexity-info\">\n        <div className=\"complexity-card\">\n          <div className=\"complexity-title\">Time Complexity</div>\n          <div className=\"complexity-values\">\n            <div><span className=\"complexity-type\">Best:</span> {complexity.time?.best || 'N/A'}</div>\n            <div><span className=\"complexity-type\">Average:</span> {complexity.time?.average || 'N/A'}</div>\n            <div><span className=\"complexity-type\">Worst:</span> {complexity.time?.worst || 'N/A'}</div>\n          </div>\n        </div>\n        \n        <div className=\"complexity-card\">\n          <div className=\"complexity-title\">Space Complexity</div>\n          <div className=\"complexity-values\">\n            <div><span className=\"complexity-type\">Auxiliary:</span> {complexity.space?.average || 'N/A'}</div>\n          </div>\n        </div>\n        \n        {classification.efficiency && (\n          <div className=\"complexity-card\">\n            <div className=\"complexity-title\">Performance Classification</div>\n            <div className=\"complexity-values\">\n              <div>\n                <span className=\"complexity-type\">Efficiency:</span> \n                <span className={`classification ${classification.efficiency}`}>\n                  {classification.efficiency}\n                </span>\n              </div>\n              \n              {classification.memoryUsage && (\n                <div>\n                  <span className=\"complexity-type\">Memory Usage:</span>\n                  <span className={`classification ${classification.memoryUsage}`}>\n                    {classification.memoryUsage}\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Compare actual vs theoretical performance */}\n      {theoreticalValues.average && metrics.comparisons && (\n        <div className=\"theoretical-comparison\">\n          <h4 className=\"subsection-title\">Actual vs. Theoretical</h4>\n          \n          <div className=\"comparison-chart\">\n            <div className=\"comparison-item\">\n              <div className=\"comparison-label\">Comparisons</div>\n              <div className=\"comparison-bars\">\n                <div className=\"comparison-bar-container\">\n                  <div className=\"comparison-bar-label\">Actual</div>\n                  <div className=\"comparison-bar\">\n                    <div \n                      className=\"comparison-bar-fill actual\" \n                      style={{ \n                        width: `${Math.min(100, (metrics.comparisons / theoreticalValues.worst) * 100)}%` \n                      }}\n                    />\n                  </div>\n                  <div className=\"comparison-bar-value\">{MetricsAnalysis.formatNumber(metrics.comparisons)}</div>\n                </div>\n                \n                <div className=\"comparison-bar-container\">\n                  <div className=\"comparison-bar-label\">Theoretical (Avg)</div>\n                  <div className=\"comparison-bar\">\n                    <div \n                      className=\"comparison-bar-fill theoretical\" \n                      style={{ \n                        width: `${Math.min(100, (theoreticalValues.average / theoreticalValues.worst) * 100)}%` \n                      }}\n                    />\n                  </div>\n                  <div className=\"comparison-bar-value\">{MetricsAnalysis.formatNumber(theoreticalValues.average)}</div>\n                </div>\n                \n                {theoreticalValues.worst && (\n                  <div className=\"comparison-bar-container\">\n                    <div className=\"comparison-bar-label\">Theoretical (Worst)</div>\n                    <div className=\"comparison-bar\">\n                      <div \n                        className=\"comparison-bar-fill theoretical-worst\" \n                        style={{ width: '100%' }}\n                      />\n                    </div>\n                    <div className=\"comparison-bar-value\">{MetricsAnalysis.formatNumber(theoreticalValues.worst)}</div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          \n          {/* Efficiency ratio */}\n          <div className=\"efficiency-ratio\">\n            <span className=\"efficiency-label\">Performance Ratio:</span>\n            <span className=\"efficiency-value\">\n              {(metrics.comparisons / theoreticalValues.average).toFixed(2)}x theoretical average\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n/**\n * Component for visualizing algorithm metrics with Chart.js\n * This component is loaded dynamically to reduce initial bundle size\n * @param {Object} props - Component properties\n * @param {Object} props.metrics - Algorithm metrics\n * @param {Object[]} props.historyMetrics - Metrics history for time-series visualization\n * @returns {JSX.Element} Rendered component\n * @private\n */\nconst MetricsCharts = ({ metrics, historyMetrics }) => {\n  const [chartLibrary, setChartLibrary] = useState(null);\n  const operationsChartRef = useRef(null);\n  const timeSeriesChartRef = useRef(null);\n  \n  // Load Chart.js library dynamically\n  useEffect(() => {\n    const loadChartLibrary = async () => {\n      try {\n        // Dynamic import to reduce initial bundle size\n        const Chart = await import('chart.js/auto');\n        setChartLibrary(Chart);\n      } catch (error) {\n        console.error('Failed to load Chart.js library:', error);\n      }\n    };\n    \n    loadChartLibrary();\n    \n    // Cleanup function\n    return () => {\n      if (operationsChartRef.current?.chartInstance) {\n        operationsChartRef.current.chartInstance.destroy();\n      }\n      if (timeSeriesChartRef.current?.chartInstance) {\n        timeSeriesChartRef.current.chartInstance.destroy();\n      }\n    };\n  }, []);\n  \n  // Create operations chart\n  useEffect(() => {\n    if (!chartLibrary || !metrics || !operationsChartRef.current) return;\n    \n    // Destroy previous chart if exists\n    if (operationsChartRef.current.chartInstance) {\n      operationsChartRef.current.chartInstance.destroy();\n    }\n    \n    const ctx = operationsChartRef.current.getContext('2d');\n    \n    // Create operations chart\n    const chartInstance = new chartLibrary.Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: ['Comparisons', 'Swaps', 'Reads', 'Writes'],\n        datasets: [{\n          label: 'Operation Counts',\n          data: [\n            metrics.comparisons || 0,\n            metrics.swaps || 0,\n            metrics.reads || 0,\n            metrics.writes || 0\n          ],\n          backgroundColor: [\n            'rgba(54, 162, 235, 0.7)', // Blue for comparisons\n            'rgba(255, 99, 132, 0.7)',  // Red for swaps\n            'rgba(75, 192, 192, 0.7)',  // Teal for reads\n            'rgba(255, 159, 64, 0.7)'   // Orange for writes\n          ],\n          borderColor: [\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 99, 132, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(255, 159, 64, 1)'\n          ],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          title: {\n            display: true,\n            text: 'Operation Distribution'\n          },\n          tooltip: {\n            callbacks: {\n              label: function(context) {\n                const value = context.raw;\n                return `${context.label}: ${MetricsAnalysis.formatNumber(value)}`;\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true,\n            ticks: {\n              callback: function(value) {\n                return MetricsAnalysis.formatNumber(value);\n              }\n            }\n          }\n        }\n      }\n    });\n    \n    // Store chart instance for cleanup\n    operationsChartRef.current.chartInstance = chartInstance;\n    \n  }, [chartLibrary, metrics]);\n  \n  // Create time series chart if history metrics are available\n  useEffect(() => {\n    if (!chartLibrary || !historyMetrics || !historyMetrics.length || !timeSeriesChartRef.current) {\n      return;\n    }\n    \n    // Destroy previous chart if exists\n    if (timeSeriesChartRef.current.chartInstance) {\n      timeSeriesChartRef.current.chartInstance.destroy();\n    }\n    \n    const ctx = timeSeriesChartRef.current.getContext('2d');\n    \n    // Extract time series data\n    const timePoints = historyMetrics.map((entry, index) => index);\n    const comparisonSeries = historyMetrics.map(entry => entry.comparisons || 0);\n    const swapSeries = historyMetrics.map(entry => entry.swaps || 0);\n    \n    // Create time series chart\n    const chartInstance = new chartLibrary.Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: timePoints,\n        datasets: [\n          {\n            label: 'Comparisons',\n            data: comparisonSeries,\n            borderColor: 'rgba(54, 162, 235, 1)',\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n            tension: 0.4,\n            fill: true\n          },\n          {\n            label: 'Swaps',\n            data: swapSeries,\n            borderColor: 'rgba(255, 99, 132, 1)',\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            tension: 0.4,\n            fill: true\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          title: {\n            display: true,\n            text: 'Operation Counts Over Time'\n          },\n          tooltip: {\n            mode: 'index',\n            intersect: false\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Algorithm Step'\n            }\n          },\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: 'Cumulative Operations'\n            },\n            ticks: {\n              callback: function(value) {\n                return MetricsAnalysis.formatNumber(value);\n              }\n            }\n          }\n        }\n      }\n    });\n    \n    // Store chart instance for cleanup\n    timeSeriesChartRef.current.chartInstance = chartInstance;\n    \n  }, [chartLibrary, historyMetrics]);\n  \n  return (\n    <div className=\"metrics-charts\">\n      <div className=\"chart-container operations-chart\">\n        <canvas ref={operationsChartRef} height=\"250\"></canvas>\n      </div>\n      \n      {historyMetrics && historyMetrics.length > 0 && (\n        <div className=\"chart-container time-series-chart\">\n          <canvas ref={timeSeriesChartRef} height=\"250\"></canvas>\n        </div>\n      )}\n    </div>\n  );\n};\n\n/**\n * Component that displays metrics for renderers like WebGL\n * @param {Object} props - Component properties\n * @param {Object} props.rendererMetrics - Renderer performance metrics\n * @returns {JSX.Element} Rendered component\n * @private\n */\nconst RendererMetrics = ({ rendererMetrics }) => {\n  if (!rendererMetrics) return null;\n  \n  return (\n    <div className=\"renderer-metrics\">\n      <h3 className=\"metrics-section-title\">Rendering Performance</h3>\n      \n      <div className=\"metrics-grid\">\n        <div className=\"metric-card\">\n          <div className=\"metric-title\">FPS</div>\n          <div className=\"metric-value\">{rendererMetrics.fps || 'N/A'}</div>\n        </div>\n        \n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Render Time</div>\n          <div className=\"metric-value\">{MetricsAnalysis.formatTime(rendererMetrics.renderTime)}</div>\n        </div>\n        \n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Elements</div>\n          <div className=\"metric-value\">{MetricsAnalysis.formatNumber(rendererMetrics.elementsRendered)}</div>\n        </div>\n        \n        <div className=\"metric-card\">\n          <div className=\"metric-title\">Buffer Updates</div>\n          <div className=\"metric-value\">{rendererMetrics.bufferUpdates || 'N/A'}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/**\n * MetricsDisplay component renders comprehensive performance metrics\n * for sorting algorithm visualization and analysis\n * \n * @param {Object} props - Component properties\n * @param {Object} props.metrics - Algorithm performance metrics\n * @param {Object} props.complexity - Algorithm complexity information\n * @param {Object} props.rendererMetrics - Renderer performance metrics\n * @param {number} props.arraySize - Size of array being processed\n * @param {Object[]} props.historyMetrics - Metrics history for time-series visualization\n * @param {boolean} [props.showCharts=true] - Whether to show charts\n * @param {boolean} [props.showDerived=true] - Whether to show derived metrics\n * @param {boolean} [props.showComplexity=true] - Whether to show complexity analysis\n * @param {boolean} [props.compact=false] - Whether to use compact display mode\n * @returns {JSX.Element} Rendered component\n */\nconst MetricsDisplay = ({\n  metrics,\n  complexity,\n  rendererMetrics,\n  arraySize,\n  historyMetrics,\n  showCharts = true,\n  showDerived = true,\n  showComplexity = true,\n  compact = false\n}) => {\n  // Track whether metrics has been initialized\n  const hasMetrics = metrics && Object.keys(metrics).length > 0;\n  \n  // Component state\n  const [activeTab, setActiveTab] = useState('basic');\n  \n  return (\n    <div className={`metrics-display ${compact ? 'compact' : ''}`}>\n      <div className=\"metrics-header\">\n        <h2 className=\"metrics-title\">Performance Metrics</h2>\n        \n        {!compact && (\n          <div className=\"metrics-tabs\">\n            <button \n              className={`metrics-tab ${activeTab === 'basic' ? 'active' : ''}`}\n              onClick={() => setActiveTab('basic')}\n            >\n              Basic Metrics\n            </button>\n            \n            {showDerived && (\n              <button \n                className={`metrics-tab ${activeTab === 'derived' ? 'active' : ''}`}\n                onClick={() => setActiveTab('derived')}\n                disabled={!hasMetrics}\n              >\n                Performance Analysis\n              </button>\n            )}\n            \n            {showComplexity && (\n              <button \n                className={`metrics-tab ${activeTab === 'complexity' ? 'active' : ''}`}\n                onClick={() => setActiveTab('complexity')}\n                disabled={!hasMetrics || !complexity}\n              >\n                Complexity Analysis\n              </button>\n            )}\n            \n            {showCharts && (\n              <button \n                className={`metrics-tab ${activeTab === 'charts' ? 'active' : ''}`}\n                onClick={() => setActiveTab('charts')}\n                disabled={!hasMetrics}\n              >\n                Charts\n              </button>\n            )}\n            \n            {rendererMetrics && (\n              <button \n                className={`metrics-tab ${activeTab === 'renderer' ? 'active' : ''}`}\n                onClick={() => setActiveTab('renderer')}\n              >\n                Renderer Performance\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n      \n      <div className=\"metrics-content\">\n        {!hasMetrics ? (\n          <div className=\"metrics-placeholder\">\n            <p>Execute an algorithm to view performance metrics</p>\n          </div>\n        ) : (\n          <>\n            {/* Show all sections in compact mode, otherwise show only active tab */}\n            {(compact || activeTab === 'basic') && (\n              <BasicMetrics metrics={metrics} />\n            )}\n            \n            {showDerived && (compact || activeTab === 'derived') && (\n              <DerivedMetrics metrics={metrics} arraySize={arraySize} />\n            )}\n            \n            {showComplexity && (compact || activeTab === 'complexity') && complexity && (\n              <ComplexityAnalysis \n                complexity={complexity} \n                metrics={metrics} \n                arraySize={arraySize} \n              />\n            )}\n            \n            {showCharts && (compact || activeTab === 'charts') && (\n              <MetricsCharts \n                metrics={metrics} \n                historyMetrics={historyMetrics} \n              />\n            )}\n            \n            {rendererMetrics && (compact || activeTab === 'renderer') && (\n              <RendererMetrics rendererMetrics={rendererMetrics} />\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MetricsDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}