{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/App.js\",\n  _s = $RefreshSig$();\n/**\n * Advanced Sorting Algorithm Visualization Platform\n * Main Application Component\n * \n * This component serves as the application's root UI controller,\n * orchestrating algorithm selection, visualization mode switching,\n * and managing the primary interface components.\n */\n\nimport React, { useState } from 'react';\nimport SortingVisualizer from './components/SortingVisualizer';\nimport AlgorithmComparison from './components/AlgorithmComparison';\nimport './styles/App.css';\n\n// Import algorithm implementations directly\n// These will be replaced with the index-based imports once established\nimport BubbleSort from './algorithms/comparison/bubble';\nimport MergeSort from './algorithms/comparison/merge';\nimport QuickSort from './algorithms/comparison/quick';\nimport HeapSort from './algorithms/comparison/heap';\n\n/**\n * Main application component that manages algorithm selection,\n * visualization view, and coordination between components.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for active algorithm and view\n  const [activeAlgorithm, setActiveAlgorithm] = useState('merge-sort');\n  const [view, setView] = useState('visualizer'); // 'visualizer' or 'comparison'\n\n  /**\n   * Algorithm instance registry with appropriate configuration options\n   * for demonstration and educational purposes\n   */\n  const algorithms = {\n    'bubble-sort': new BubbleSort({\n      optimize: true,\n      adaptive: true\n    }),\n    'merge-sort': new MergeSort({\n      adaptive: true,\n      insertionThreshold: 10,\n      optimizeMerge: true\n    }),\n    'quick-sort': new QuickSort({\n      pivotStrategy: 'median-of-three',\n      insertionThreshold: 10,\n      threeWayPartition: true\n    }),\n    'heap-sort': new HeapSort({\n      visualizeHeap: true,\n      optimizeLeafChecks: true\n    })\n  };\n\n  /**\n   * Retrieves the current algorithm instance based on user selection\n   * @returns {Object} The configured algorithm instance\n   */\n  const getCurrentAlgorithm = () => {\n    return algorithms[activeAlgorithm];\n  };\n\n  /**\n   * Handles algorithm selection change from UI controls\n   * @param {Event} e - The change event from select element\n   */\n  const handleAlgorithmChange = e => {\n    setActiveAlgorithm(e.target.value);\n  };\n\n  /**\n   * Handles visualization view mode change\n   * @param {Event} e - The change event from select element\n   */\n  const handleViewChange = e => {\n    setView(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Advanced Sorting Algorithm Visualization Platform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Algorithm:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: activeAlgorithm,\n            onChange: handleAlgorithmChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bubble-sort\",\n              children: \"Bubble Sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"merge-sort\",\n              children: \"Merge Sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"quick-sort\",\n              children: \"Quick Sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"heap-sort\",\n              children: \"Heap Sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"View:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: view,\n            onChange: handleViewChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"visualizer\",\n              children: \"Algorithm Visualizer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"comparison\",\n              children: \"JS-Python Comparison\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: view === 'visualizer' ? /*#__PURE__*/_jsxDEV(SortingVisualizer, {\n        algorithm: getCurrentAlgorithm(),\n        options: {\n          colorScheme: 'spectrum',\n          barWidth: 6,\n          spacing: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AlgorithmComparison, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Advanced Sorting Algorithm Visualization Platform\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"separator\",\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/your-username/sorting-visualizer\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"GitHub Repository\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XYg9n5ujKlEVMzso3xyKVen8wnY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SortingVisualizer","AlgorithmComparison","BubbleSort","MergeSort","QuickSort","HeapSort","jsxDEV","_jsxDEV","App","_s","activeAlgorithm","setActiveAlgorithm","view","setView","algorithms","optimize","adaptive","insertionThreshold","optimizeMerge","pivotStrategy","threeWayPartition","visualizeHeap","optimizeLeafChecks","getCurrentAlgorithm","handleAlgorithmChange","e","target","value","handleViewChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","algorithm","options","colorScheme","barWidth","spacing","href","rel","_c","$RefreshReg$"],"sources":["/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/App.js"],"sourcesContent":["/**\n * Advanced Sorting Algorithm Visualization Platform\n * Main Application Component\n * \n * This component serves as the application's root UI controller,\n * orchestrating algorithm selection, visualization mode switching,\n * and managing the primary interface components.\n */\n\nimport React, { useState } from 'react';\nimport SortingVisualizer from './components/SortingVisualizer';\nimport AlgorithmComparison from './components/AlgorithmComparison';\nimport './styles/App.css';\n\n// Import algorithm implementations directly\n// These will be replaced with the index-based imports once established\nimport BubbleSort from './algorithms/comparison/bubble';\nimport MergeSort from './algorithms/comparison/merge';\nimport QuickSort from './algorithms/comparison/quick';\nimport HeapSort from './algorithms/comparison/heap';\n\n/**\n * Main application component that manages algorithm selection,\n * visualization view, and coordination between components.\n */\nfunction App() {\n  // State for active algorithm and view\n  const [activeAlgorithm, setActiveAlgorithm] = useState('merge-sort');\n  const [view, setView] = useState('visualizer'); // 'visualizer' or 'comparison'\n  \n  /**\n   * Algorithm instance registry with appropriate configuration options\n   * for demonstration and educational purposes\n   */\n  const algorithms = {\n    'bubble-sort': new BubbleSort({ \n      optimize: true, \n      adaptive: true \n    }),\n    'merge-sort': new MergeSort({ \n      adaptive: true, \n      insertionThreshold: 10,\n      optimizeMerge: true\n    }),\n    'quick-sort': new QuickSort({\n      pivotStrategy: 'median-of-three',\n      insertionThreshold: 10,\n      threeWayPartition: true\n    }),\n    'heap-sort': new HeapSort({\n      visualizeHeap: true,\n      optimizeLeafChecks: true\n    })\n  };\n  \n  /**\n   * Retrieves the current algorithm instance based on user selection\n   * @returns {Object} The configured algorithm instance\n   */\n  const getCurrentAlgorithm = () => {\n    return algorithms[activeAlgorithm];\n  };\n  \n  /**\n   * Handles algorithm selection change from UI controls\n   * @param {Event} e - The change event from select element\n   */\n  const handleAlgorithmChange = (e) => {\n    setActiveAlgorithm(e.target.value);\n  };\n  \n  /**\n   * Handles visualization view mode change\n   * @param {Event} e - The change event from select element\n   */\n  const handleViewChange = (e) => {\n    setView(e.target.value);\n  };\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Advanced Sorting Algorithm Visualization Platform</h1>\n        \n        <div className=\"controls\">\n          <div className=\"control-group\">\n            <label>Algorithm:</label>\n            <select \n              value={activeAlgorithm} \n              onChange={handleAlgorithmChange}\n            >\n              <option value=\"bubble-sort\">Bubble Sort</option>\n              <option value=\"merge-sort\">Merge Sort</option>\n              <option value=\"quick-sort\">Quick Sort</option>\n              <option value=\"heap-sort\">Heap Sort</option>\n            </select>\n          </div>\n          \n          <div className=\"control-group\">\n            <label>View:</label>\n            <select \n              value={view} \n              onChange={handleViewChange}\n            >\n              <option value=\"visualizer\">Algorithm Visualizer</option>\n              <option value=\"comparison\">JS-Python Comparison</option>\n            </select>\n          </div>\n        </div>\n      </header>\n      \n      <main>\n        {view === 'visualizer' ? (\n          <SortingVisualizer \n            algorithm={getCurrentAlgorithm()} \n            options={{\n              colorScheme: 'spectrum',\n              barWidth: 6,\n              spacing: 2\n            }}\n          />\n        ) : (\n          <AlgorithmComparison />\n        )}\n      </main>\n      \n      <footer>\n        <p>\n          Advanced Sorting Algorithm Visualization Platform\n          <span className=\"separator\">|</span>\n          <a href=\"https://github.com/your-username/sorting-visualizer\" target=\"_blank\" rel=\"noopener noreferrer\">\n            GitHub Repository\n          </a>\n        </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}