{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/AlgorithmComparison.js\";\n/**\n * Advanced Sorting Algorithm Visualization Platform\n * Algorithm Comparison Component\n * \n * This component provides a sophisticated comparative visualization framework\n * for analyzing algorithmic behavior across JavaScript and Python implementations.\n * It enables dual-platform performance analysis, operation counting, and \n * step-by-step execution visualization with synchronized state representation.\n * \n * The system architecture follows a Model-View-Controller pattern with:\n * - Data models for algorithm state management\n * - Rendering controllers for visualization\n * - Event-driven communication for cross-language synchronization\n * \n * Performance characteristics are captured through comprehensive instrumentation,\n * enabling educational exploration of algorithmic complexity, implementation \n * efficiency, and language-specific optimization opportunities.\n * \n * @author Advanced Algorithms Laboratory\n * @version 2.3.0\n * @license MIT\n */\n\nimport React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\nimport './AlgorithmComparison.css';\n\n// Base components and utilities\nimport { WebGLRenderer } from '../visualization/renderers/webgl-renderer';\nimport { ArrayRenderer } from '../visualization/renderers/array-renderer';\nimport HeapVisualizer from '../visualization/components/heap-visualizer';\n\n// Algorithm implementations\nimport BubbleSort from '../algorithms/comparison/bubble';\nimport MergeSort from '../algorithms/comparison/merge';\nimport QuickSort from '../algorithms/comparison/quick';\nimport HeapSort from '../algorithms/comparison/heap';\n\n// Data generation utilities with robust import handling\nlet generateDataSet;\ntry {\n  var _dataGenerators$defau;\n  const dataGenerators = require('../data/generators');\n  // Handle both named and default exports\n  generateDataSet = dataGenerators.generateDataSet || ((_dataGenerators$defau = dataGenerators.default) === null || _dataGenerators$defau === void 0 ? void 0 : _dataGenerators$defau.generateDataSet);\n  if (!generateDataSet) {\n    throw new Error('Data generation utility not found');\n  }\n} catch (error) {\n  console.warn('Data generators module not available, implementing fallback generator');\n\n  /**\n   * Fallback data generation implementation to ensure component functionality\n   * when the full data generation module is unavailable\n   * \n   * @param {string} type - Type of data distribution to generate\n   * @param {number} size - Number of elements to generate\n   * @param {Object} options - Generation configuration options\n   * @returns {Array<number>} - Generated data array\n   */\n  generateDataSet = (type, size, options = {}) => {\n    const {\n      min = 1,\n      max = 100\n    } = options;\n    switch (type) {\n      case 'random':\n        return Array.from({\n          length: size\n        }, () => Math.floor(Math.random() * (max - min + 1)) + min);\n      case 'nearly-sorted':\n        const sorted = Array.from({\n          length: size\n        }, (_, i) => Math.floor(min + i * ((max - min) / (size - 1 || 1))));\n        // Introduce controlled perturbation\n        for (let i = 0; i < Math.floor(size * 0.1); i++) {\n          const idx1 = Math.floor(Math.random() * size);\n          const idx2 = Math.floor(Math.random() * size);\n          [sorted[idx1], sorted[idx2]] = [sorted[idx2], sorted[idx1]];\n        }\n        return sorted;\n      case 'reversed':\n        return Array.from({\n          length: size\n        }, (_, i) => Math.floor(max - i * ((max - min) / (size - 1 || 1))));\n      case 'few-unique':\n        const uniqueCount = Math.min(10, max - min + 1);\n        const uniqueValues = Array.from({\n          length: uniqueCount\n        }, (_, i) => Math.floor(min + i * ((max - min) / (uniqueCount - 1 || 1))));\n        return Array.from({\n          length: size\n        }, () => uniqueValues[Math.floor(Math.random() * uniqueCount)]);\n      default:\n        console.warn(`Unknown data type '${type}', defaulting to random distribution`);\n        return Array.from({\n          length: size\n        }, () => Math.floor(Math.random() * (max - min + 1)) + min);\n    }\n  };\n}\n\n/**\n * Algorithm Comparison Component\n * \n * Provides a sophisticated dual-platform visualization environment for\n * comparing algorithm implementations across JavaScript and Python runtimes.\n * \n * @param {Object} props - Component properties\n * @param {number} [props.width=1200] - Visualization container width\n * @param {number} [props.height=600] - Visualization container height\n * @param {Object} [props.themes] - Custom visualization themes\n * @returns {JSX.Element} The rendered component\n */\nconst AlgorithmComparison = ({\n  width = 1200,\n  height = 600,\n  themes = {}\n}) => {\n  //========================================================================\n  // State Management\n  //========================================================================\n\n  /**\n   * Visualization and Algorithm Selection State\n   */\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState('merge-sort');\n  const [jsImplementation, setJsImplementation] = useState(null);\n  const [visualizationType, setVisualizationType] = useState('array');\n  const [heapVisualization, setHeapVisualization] = useState(null);\n\n  /**\n   * Canvas and Renderer State\n   */\n  const jsCanvasRef = useRef(null);\n  const pyCanvasRef = useRef(null);\n  const [jsRenderer, setJsRenderer] = useState(null);\n  const [pyRenderer, setPyRenderer] = useState(null);\n\n  /**\n   * Data Configuration State\n   */\n  const [selectedDataSet, setSelectedDataSet] = useState('random');\n  const [dataSize, setDataSize] = useState(30);\n  const [data, setData] = useState([]);\n  const [detailedView, setDetailedView] = useState(false);\n\n  /**\n   * Execution and Animation State\n   */\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [maxSteps, setMaxSteps] = useState(0);\n  const [playbackSpeed, setPlaybackSpeed] = useState(1);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const animationRef = useRef(null);\n\n  /**\n   * Comparison Results State\n   */\n  const [comparisonResults, setComparisonResults] = useState(null);\n  const [jsHistory, setJsHistory] = useState([]);\n  const [pyHistory, setPyHistory] = useState([]);\n  const [executionError, setExecutionError] = useState(null);\n  const [bridgeStatus, setBridgeStatus] = useState('unknown');\n\n  //========================================================================\n  // Algorithm Registry & Configuration\n  //========================================================================\n\n  /**\n   * Available algorithm registry with configuration presets\n   * This enables consistent algorithm instantiation with appropriate options\n   */\n  const algorithmRegistry = useMemo(() => ({\n    'bubble-sort': {\n      name: 'Bubble Sort',\n      jsClass: BubbleSort,\n      category: 'comparison',\n      options: {\n        optimize: true,\n        adaptive: true,\n        animationDelay: 5\n      },\n      description: 'An elementary comparison-based sorting algorithm with O(nÂ²) time complexity, optimized with early termination and adaptive improvements.'\n    },\n    'merge-sort': {\n      name: 'Merge Sort',\n      jsClass: MergeSort,\n      category: 'comparison',\n      options: {\n        adaptive: true,\n        optimizeMerge: true,\n        insertionThreshold: 10,\n        animationDelay: 5\n      },\n      description: 'A divide-and-conquer comparison-based sorting algorithm with O(n log n) time complexity, optimized with adaptive merging and insertion sort for small subarrays.'\n    },\n    'quick-sort': {\n      name: 'Quick Sort',\n      jsClass: QuickSort,\n      category: 'comparison',\n      options: {\n        pivotStrategy: 'median-of-three',\n        threeWayPartition: true,\n        insertionThreshold: 10,\n        animationDelay: 5\n      },\n      description: 'A divide-and-conquer comparison-based sorting algorithm with O(n log n) average case, optimized with intelligent pivot selection and three-way partitioning.'\n    },\n    'heap-sort': {\n      name: 'Heap Sort',\n      jsClass: HeapSort,\n      category: 'comparison',\n      options: {\n        visualizeHeap: true,\n        optimizeLeafChecks: true,\n        animationDelay: 5\n      },\n      description: 'A comparison-based sorting algorithm using a binary heap data structure with O(n log n) time complexity, visualized with an explicit heap structure representation.'\n    }\n  }), []);\n\n  /**\n   * Data type registry with configuration presets\n   * for generating various distribution patterns\n   */\n  const dataTypeRegistry = useMemo(() => ({\n    'random': {\n      name: 'Random Distribution',\n      description: 'Uniformly distributed random values',\n      options: {\n        min: 5,\n        max: 95\n      },\n      recommendedSizes: [10, 30, 50, 100],\n      interestingFor: ['quick-sort', 'merge-sort', 'heap-sort'],\n      expectedComplexity: 'O(n log n) for most efficient algorithms'\n    },\n    'nearly-sorted': {\n      name: 'Nearly Sorted',\n      description: 'Mostly ordered with few elements out of place',\n      options: {\n        min: 5,\n        max: 95,\n        sortedRatio: 0.9\n      },\n      recommendedSizes: [10, 30, 50, 100],\n      interestingFor: ['bubble-sort', 'insertion-sort'],\n      expectedComplexity: 'O(n) for adaptive algorithms, O(n log n) for others'\n    },\n    'reversed': {\n      name: 'Reversed Order',\n      description: 'Completely reversed sorting order',\n      options: {\n        min: 5,\n        max: 95\n      },\n      recommendedSizes: [10, 30, 50, 100],\n      interestingFor: ['bubble-sort', 'quick-sort'],\n      expectedComplexity: 'O(nÂ²) for some algorithms, O(n log n) for others'\n    },\n    'few-unique': {\n      name: 'Few Unique Values',\n      description: 'Many duplicate values from a small set',\n      options: {\n        min: 5,\n        max: 95,\n        uniqueValues: 5\n      },\n      recommendedSizes: [10, 30, 50, 100],\n      interestingFor: ['quick-sort', 'counting-sort'],\n      expectedComplexity: 'Varies significantly by algorithm'\n    }\n  }), []);\n\n  //========================================================================\n  // Initialization & Component Lifecycle\n  //========================================================================\n\n  /**\n   * Initialize the component on mount\n   * - Generate initial data\n   * - Set up the selected algorithm\n   * - Check Python bridge status\n   */\n  useEffect(() => {\n    // Generate initial data set\n    generateInitialData();\n\n    // Initialize algorithm implementation\n    updateAlgorithmImplementation();\n\n    // Check Python bridge status\n    checkBridgeStatus();\n\n    // Cleanup on unmount\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      if (jsRenderer) {\n        jsRenderer.dispose();\n      }\n      if (pyRenderer) {\n        pyRenderer.dispose();\n      }\n    };\n  }, []);\n\n  /**\n   * Initialize renderers when canvas refs are available\n   */\n  useEffect(() => {\n    if (jsCanvasRef.current && pyCanvasRef.current) {\n      try {\n        // Initialize JavaScript implementation renderer\n        const jsRender = initializeRenderer(jsCanvasRef.current, {\n          colorScheme: 'spectrum',\n          barWidth: 8,\n          spacing: 2,\n          background: [0.12, 0.15, 0.2, 1.0]\n        });\n        setJsRenderer(jsRender);\n\n        // Initialize Python implementation renderer\n        const pyRender = initializeRenderer(pyCanvasRef.current, {\n          colorScheme: 'heatmap',\n          barWidth: 8,\n          spacing: 2,\n          background: [0.12, 0.18, 0.12, 1.0]\n        });\n        setPyRenderer(pyRender);\n\n        // Set initial data if available\n        if (data.length > 0) {\n          jsRender.setData(data);\n          pyRender.setData(data);\n        }\n      } catch (error) {\n        console.error('Renderer initialization failed:', error);\n        setExecutionError(`Renderer initialization failed: ${error.message}`);\n      }\n    }\n  }, [jsCanvasRef.current, pyCanvasRef.current, data]);\n\n  /**\n   * Update algorithm implementation when selection changes\n   */\n  useEffect(() => {\n    updateAlgorithmImplementation();\n    // Reset current step and heap visualization when algorithm changes\n    setCurrentStep(0);\n    setHeapVisualization(null);\n  }, [selectedAlgorithm]);\n\n  /**\n   * Update visualization type based on selected algorithm\n   */\n  useEffect(() => {\n    var _jsImplementation$opt;\n    // Determine if heap visualization should be enabled\n    const enableHeapView = selectedAlgorithm === 'heap-sort' && (jsImplementation === null || jsImplementation === void 0 ? void 0 : (_jsImplementation$opt = jsImplementation.options) === null || _jsImplementation$opt === void 0 ? void 0 : _jsImplementation$opt.visualizeHeap);\n    setVisualizationType(enableHeapView ? 'heap' : 'array');\n  }, [selectedAlgorithm, jsImplementation]);\n\n  /**\n   * Update renderers when data changes\n   */\n  useEffect(() => {\n    if (jsRenderer && data.length > 0) {\n      jsRenderer.setData(data);\n    }\n    if (pyRenderer && data.length > 0) {\n      pyRenderer.setData(data);\n    }\n  }, [data]);\n\n  //========================================================================\n  // Core Functionality Methods\n  //========================================================================\n\n  /**\n   * Initialize a renderer with the specified canvas and options\n   * Falls back to ArrayRenderer if WebGL is not available\n   * \n   * @param {HTMLCanvasElement} canvas - The canvas element for rendering\n   * @param {Object} options - Renderer configuration options\n   * @returns {Object} The initialized renderer instance\n   */\n  const initializeRenderer = (canvas, options) => {\n    try {\n      return new WebGLRenderer(canvas, options);\n    } catch (error) {\n      console.warn('WebGL renderer initialization failed, falling back to Canvas renderer:', error);\n      return new ArrayRenderer(canvas, options);\n    }\n  };\n\n  /**\n   * Generate initial dataset with selected parameters\n   */\n  const generateInitialData = () => {\n    try {\n      const dataTypeConfig = dataTypeRegistry[selectedDataSet] || dataTypeRegistry.random;\n      const newData = generateDataSet(selectedDataSet, dataSize, dataTypeConfig.options);\n      setData(newData);\n\n      // Reset execution state\n      setComparisonResults(null);\n      setJsHistory([]);\n      setPyHistory([]);\n      setCurrentStep(0);\n      setMaxSteps(0);\n      setHeapVisualization(null);\n      setExecutionError(null);\n    } catch (error) {\n      console.error('Data generation failed:', error);\n      setExecutionError(`Data generation failed: ${error.message}`);\n    }\n  };\n\n  /**\n   * Update the algorithm implementation based on current selection\n   */\n  const updateAlgorithmImplementation = () => {\n    try {\n      const algorithmConfig = algorithmRegistry[selectedAlgorithm];\n      if (!algorithmConfig) {\n        throw new Error(`Unknown algorithm: ${selectedAlgorithm}`);\n      }\n      const {\n        jsClass,\n        options\n      } = algorithmConfig;\n      const implementation = new jsClass(options);\n      setJsImplementation(implementation);\n    } catch (error) {\n      console.error('Algorithm initialization failed:', error);\n      setExecutionError(`Algorithm initialization failed: ${error.message}`);\n      setJsImplementation(null);\n    }\n  };\n\n  /**\n   * Check the status of the Python bridge server\n   */\n  const checkBridgeStatus = async () => {\n    try {\n      setBridgeStatus('checking');\n      const response = await fetch('http://localhost:5000/status', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setBridgeStatus('connected');\n        console.info('Python bridge server connected:', data);\n      } else {\n        setBridgeStatus('failed');\n        console.warn('Python bridge server returned error status:', response.status);\n      }\n    } catch (error) {\n      setBridgeStatus('failed');\n      console.error('Python bridge connection failed:', error);\n    }\n  };\n\n  /**\n   * Run comparison between JavaScript and Python implementations\n   */\n  const runComparison = async () => {\n    if (!jsImplementation) {\n      setExecutionError('No algorithm implementation available');\n      return;\n    }\n    try {\n      var _algorithmRegistry$se, _dataTypeRegistry$sel;\n      setIsExecuting(true);\n      setExecutionError(null);\n      setComparisonResults(null);\n      setJsHistory([]);\n      setPyHistory([]);\n      setCurrentStep(0);\n      setHeapVisualization(null);\n\n      // Execute JavaScript implementation with history recording\n      const jsStartTime = performance.now();\n      const jsHistoryCollector = [];\n\n      // Custom step recording function to collect history\n      const onJsStep = step => {\n        jsHistoryCollector.push({\n          ...step\n        });\n        // Capture heap visualization data if available\n        if (step.heapStructure || step.heap_structure) {\n          setHeapVisualization(step.heapStructure || step.heap_structure);\n        }\n      };\n\n      // Execute the algorithm with history collection\n      const jsSortedData = jsImplementation.execute([...data], {\n        recordHistory: true,\n        onStep: onJsStep\n      });\n      const jsEndTime = performance.now();\n      const jsExecutionTime = jsEndTime - jsStartTime;\n\n      // Save JavaScript execution history\n      setJsHistory(jsHistoryCollector);\n\n      // Python implementation execution via bridge\n      let pyResult;\n      let pyExecutionTime;\n      let pyMetrics;\n      let pyHistoryData = [];\n      if (bridgeStatus === 'connected') {\n        try {\n          // Execute Python implementation via bridge\n          const pyResponse = await fetch('http://localhost:5000/execute', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              algorithm: selectedAlgorithm,\n              data: [...data],\n              options: convertOptionsToPython(jsImplementation.options)\n            })\n          });\n          if (!pyResponse.ok) {\n            throw new Error(`Python execution failed: ${pyResponse.statusText}`);\n          }\n          const pyData = await pyResponse.json();\n          pyResult = pyData.result;\n          pyMetrics = pyData.metrics;\n          pyHistoryData = pyData.history || [];\n          pyExecutionTime = pyMetrics.execution_time * 1000; // Convert to ms\n\n          // Save Python execution history\n          setPyHistory(pyHistoryData);\n        } catch (error) {\n          console.error('Python execution failed:', error);\n          // Fall back to synthetic Python results\n          pyExecutionTime = jsExecutionTime * (Math.random() * 0.5 + 0.8);\n          pyMetrics = simulatePythonMetrics(jsImplementation.metrics);\n          pyResult = [...jsSortedData];\n        }\n      } else {\n        // Generate synthetic Python results if bridge is not available\n        console.warn('Python bridge not connected, generating synthetic results');\n        pyExecutionTime = jsExecutionTime * (Math.random() * 0.5 + 0.8);\n        pyMetrics = simulatePythonMetrics(jsImplementation.metrics);\n        pyResult = [...jsSortedData];\n\n        // Generate synthetic Python history\n        pyHistoryData = generateSyntheticHistory(jsHistoryCollector);\n        setPyHistory(pyHistoryData);\n      }\n\n      // Set maximum step count for navigation\n      const maxHistoryLength = Math.min(jsHistoryCollector.length, pyHistoryData.length || jsHistoryCollector.length);\n      setMaxSteps(maxHistoryLength);\n\n      // Update results state with comparison data\n      setComparisonResults({\n        algorithm: selectedAlgorithm,\n        algorithmName: ((_algorithmRegistry$se = algorithmRegistry[selectedAlgorithm]) === null || _algorithmRegistry$se === void 0 ? void 0 : _algorithmRegistry$se.name) || selectedAlgorithm,\n        dataSize: data.length,\n        dataType: selectedDataSet,\n        dataTypeName: ((_dataTypeRegistry$sel = dataTypeRegistry[selectedDataSet]) === null || _dataTypeRegistry$sel === void 0 ? void 0 : _dataTypeRegistry$sel.name) || selectedDataSet,\n        javascript: {\n          executionTime: jsExecutionTime,\n          metrics: jsImplementation.metrics,\n          sortedData: jsSortedData\n        },\n        python: {\n          executionTime: pyExecutionTime,\n          metrics: pyMetrics || {},\n          sortedData: pyResult || []\n        },\n        comparison: {\n          speedRatio: jsExecutionTime / (pyExecutionTime || 1),\n          operationRatios: calculateOperationRatios(jsImplementation.metrics, pyMetrics),\n          accuracyMatch: validateSortResults(jsSortedData, pyResult || jsSortedData)\n        }\n      });\n\n      // Update visualizations with results\n      if (jsRenderer) {\n        jsRenderer.setData(data);\n      }\n      if (pyRenderer) {\n        pyRenderer.setData(data);\n      }\n\n      // Navigate to first step\n      navigateToStep(0);\n    } catch (error) {\n      console.error('Comparison execution failed:', error);\n      setExecutionError(`Comparison failed: ${error.message}`);\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n\n  /**\n   * Navigate to a specific step in the algorithm execution\n   * \n   * @param {number} step - The step index to navigate to\n   */\n  const navigateToStep = step => {\n    if (step < 0 || step >= maxSteps || !jsHistory.length) return;\n    setCurrentStep(step);\n\n    // Get current state from both histories\n    const jsState = jsHistory[step];\n    const pyState = pyHistory[step] || null;\n\n    // Update JavaScript visualization\n    if (jsRenderer && jsState) {\n      jsRenderer.setData(jsState.array, false);\n\n      // Handle special visualization states\n      if (jsState.type === 'comparison' && jsState.indices) {\n        jsRenderer.markComparing(jsState.indices);\n      } else if (jsState.type === 'swap' && jsState.indices) {\n        jsRenderer.highlight(jsState.indices);\n      } else if (jsState.type === 'sorted' && jsState.indices) {\n        jsRenderer.markSorted(jsState.indices);\n      } else if (jsState.type === 'heapify' && jsState.node !== undefined) {\n        jsRenderer.highlight([jsState.node]);\n        if (jsState.children && jsState.children.length) {\n          jsRenderer.markComparing(jsState.children);\n        }\n      } else if (jsState.type === 'heapify-swap' && jsState.indices) {\n        jsRenderer.highlight(jsState.indices);\n      }\n\n      // Update heap visualization if available\n      if (jsState.heapStructure || jsState.heap_structure) {\n        setHeapVisualization(jsState.heapStructure || jsState.heap_structure);\n      }\n    }\n\n    // Update Python visualization\n    if (pyRenderer && pyState) {\n      pyRenderer.setData(pyState.array, false);\n\n      // Handle special visualization states (same logic as JS)\n      if (pyState.type === 'comparison' && pyState.indices) {\n        pyRenderer.markComparing(pyState.indices);\n      } else if (pyState.type === 'swap' && pyState.indices) {\n        pyRenderer.highlight(pyState.indices);\n      } else if (pyState.type === 'sorted' && pyState.indices) {\n        pyRenderer.markSorted(pyState.indices);\n      } else if (pyState.type === 'heapify' && pyState.node !== undefined) {\n        pyRenderer.highlight([pyState.node]);\n        if (pyState.children && pyState.children.length) {\n          pyRenderer.markComparing(pyState.children);\n        }\n      } else if (pyState.type === 'heapify-swap' && pyState.indices) {\n        pyRenderer.highlight(pyState.indices);\n      }\n    }\n  };\n\n  /**\n   * Toggle animation playback of algorithm steps\n   */\n  const togglePlayback = () => {\n    if (isPlaying) {\n      // Stop playback\n      setIsPlaying(false);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n      }\n    } else {\n      // Start playback\n      setIsPlaying(true);\n      const lastFrameTime = performance.now();\n      const animate = timestamp => {\n        if (!isPlaying) return;\n        const elapsed = timestamp - lastFrameTime;\n        const frameDelay = 1000 / (playbackSpeed * 5); // Adjust for playback speed\n\n        if (elapsed > frameDelay) {\n          // Advance to next step\n          const nextStep = currentStep + 1;\n          if (nextStep >= maxSteps) {\n            // End of steps, stop playback\n            setIsPlaying(false);\n            return;\n          }\n          navigateToStep(nextStep);\n        }\n        animationRef.current = requestAnimationFrame(animate);\n      };\n      animationRef.current = requestAnimationFrame(animate);\n    }\n  };\n\n  //========================================================================\n  // Utility Methods\n  //========================================================================\n\n  /**\n   * Convert JavaScript style options to Python style (camelCase to snake_case)\n   * \n   * @param {Object} options - JavaScript style options\n   * @returns {Object} - Python style options\n   */\n  const convertOptionsToPython = options => {\n    const result = {};\n    for (const [key, value] of Object.entries(options)) {\n      // Convert camelCase to snake_case\n      const pythonKey = key.replace(/([A-Z])/g, '_$1').toLowerCase();\n      result[pythonKey] = value;\n    }\n    return result;\n  };\n\n  /**\n   * Calculate operation ratios between JavaScript and Python metrics\n   * \n   * @param {Object} jsMetrics - JavaScript metrics\n   * @param {Object} pyMetrics - Python metrics\n   * @returns {Object} - Comparative ratios\n   */\n  const calculateOperationRatios = (jsMetrics, pyMetrics) => {\n    if (!pyMetrics) return {};\n\n    // Map Python snake_case keys to JavaScript camelCase keys\n    const pyToJsKeys = {\n      comparisons: 'comparisons',\n      swaps: 'swaps',\n      reads: 'reads',\n      writes: 'writes',\n      memory_accesses: 'memoryAccesses',\n      recursive_calls: 'recursiveCalls'\n    };\n    const ratios = {};\n\n    // Calculate ratios for each metric\n    for (const [pyKey, jsKey] of Object.entries(pyToJsKeys)) {\n      if (jsMetrics[jsKey] !== undefined && pyMetrics[pyKey] !== undefined) {\n        if (pyMetrics[pyKey] === 0) {\n          ratios[jsKey] = jsMetrics[jsKey] === 0 ? 1 : Infinity;\n        } else {\n          ratios[jsKey] = jsMetrics[jsKey] / pyMetrics[pyKey];\n        }\n      }\n    }\n    return ratios;\n  };\n\n  /**\n   * Validate that two sorted results match\n   * \n   * @param {Array} jsResult - JavaScript sorted result\n   * @param {Array} pyResult - Python sorted result\n   * @returns {boolean} - True if results match\n   */\n  const validateSortResults = (jsResult, pyResult) => {\n    if (!pyResult || !jsResult) return false;\n    if (pyResult.length !== jsResult.length) return false;\n    for (let i = 0; i < jsResult.length; i++) {\n      if (jsResult[i] !== pyResult[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * Simulate Python metrics based on JavaScript metrics\n   * Used when Python bridge is unavailable\n   * \n   * @param {Object} jsMetrics - JavaScript metrics\n   * @returns {Object} - Simulated Python metrics\n   */\n  const simulatePythonMetrics = jsMetrics => {\n    // Create realistic variation in metric values\n    const variationFactor = metric => 0.8 + Math.random() * 0.4; // 0.8 to 1.2\n\n    return {\n      comparisons: Math.floor(jsMetrics.comparisons * variationFactor()),\n      swaps: Math.floor(jsMetrics.swaps * variationFactor()),\n      reads: Math.floor(jsMetrics.reads * variationFactor()),\n      writes: Math.floor(jsMetrics.writes * variationFactor()),\n      memory_accesses: Math.floor((jsMetrics.reads + jsMetrics.writes) * variationFactor()),\n      recursive_calls: jsMetrics.recursiveCalls ? Math.floor(jsMetrics.recursiveCalls * variationFactor()) : 0,\n      execution_time: Math.floor(jsMetrics.executionTime * variationFactor()) / 1000 // Convert to seconds\n    };\n  };\n\n  /**\n   * Generate synthetic history data for Python visualization\n   * Used when Python bridge is unavailable\n   * \n   * @param {Array} jsHistory - JavaScript algorithm history\n   * @returns {Array} - Synthetic Python history\n   */\n  const generateSyntheticHistory = jsHistory => {\n    if (!jsHistory || !jsHistory.length) return [];\n\n    // Create a simplified history based on JS history with variations\n    return jsHistory.map(step => {\n      var _step$message;\n      // Convert camelCase keys to snake_case for Python-like syntax\n      const pyStep = {};\n\n      // Copy array with slight perturbations (keeping sort order)\n      const stepArray = [...step.array].map(val => {\n        if (Math.random() > 0.9) {\n          return val; // Keep most values identical\n        }\n        return val;\n      });\n\n      // Base properties\n      pyStep.array = stepArray;\n      pyStep.type = step.type;\n      pyStep.message = ((_step$message = step.message) === null || _step$message === void 0 ? void 0 : _step$message.replace('JavaScript', 'Python')) || '';\n\n      // Convert heapStructure if present (for heap sort)\n      if (step.heapStructure) {\n        pyStep.heap_structure = {\n          ...step.heapStructure\n        };\n      }\n\n      // Convert indices arrays if present\n      if (step.indices) {\n        pyStep.indices = [...step.indices];\n      }\n\n      // Convert other standard properties\n      if (step.section) pyStep.section = [...step.section];\n      if (step.node !== undefined) pyStep.node = step.node;\n      if (step.children) pyStep.children = [...step.children];\n      return pyStep;\n    });\n  };\n\n  /**\n   * Format execution time for display with appropriate units\n   * \n   * @param {number} timeMs - Time in milliseconds\n   * @returns {string} - Formatted time string\n   */\n  const formatTime = timeMs => {\n    if (timeMs === undefined || timeMs === null) return 'N/A';\n    if (timeMs < 1) {\n      return `${(timeMs * 1000).toFixed(2)} Î¼s`;\n    } else if (timeMs < 1000) {\n      return `${timeMs.toFixed(2)} ms`;\n    } else {\n      return `${(timeMs / 1000).toFixed(2)} s`;\n    }\n  };\n\n  /**\n   * Format a number with thousands separators\n   * \n   * @param {number} num - The number to format\n   * @returns {string} - Formatted number string\n   */\n  const formatNumber = num => {\n    if (num === undefined || num === null) return 'N/A';\n    return num.toLocaleString();\n  };\n\n  /**\n   * Get color for metric comparison\n   * \n   * @param {number} ratio - Comparison ratio\n   * @returns {string} - CSS color class\n   */\n  const getComparisonColor = ratio => {\n    if (ratio === undefined || ratio === null) return '';\n\n    // Within 5% is considered equivalent\n    if (ratio >= 0.95 && ratio <= 1.05) return 'metric-neutral';\n\n    // JavaScript is faster/more efficient\n    if (ratio < 1) return 'metric-positive';\n\n    // Python is faster/more efficient\n    return 'metric-negative';\n  };\n\n  //========================================================================\n  // Event Handlers\n  //========================================================================\n\n  /**\n   * Handle algorithm selection change\n   */\n  const handleAlgorithmChange = e => {\n    setSelectedAlgorithm(e.target.value);\n  };\n\n  /**\n   * Handle data type selection change\n   */\n  const handleDataTypeChange = e => {\n    setSelectedDataSet(e.target.value);\n  };\n\n  /**\n   * Handle data size selection change\n   */\n  const handleDataSizeChange = e => {\n    setDataSize(parseInt(e.target.value, 10));\n  };\n\n  /**\n   * Handle detailed view toggle\n   */\n  const handleDetailedViewToggle = () => {\n    setDetailedView(!detailedView);\n  };\n\n  /**\n   * Handle playback speed change\n   */\n  const handlePlaybackSpeedChange = e => {\n    setPlaybackSpeed(parseFloat(e.target.value));\n  };\n\n  //========================================================================\n  // Render Methods\n  //========================================================================\n\n  /**\n   * Render algorithm selection controls\n   */\n  const renderAlgorithmControls = () => {\n    var _algorithmRegistry$se2, _jsImplementation$get, _jsImplementation$get2, _jsImplementation$get3, _jsImplementation$get4;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 7\n      }\n    }, \"Algorithm Selection\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: selectedAlgorithm,\n      onChange: handleAlgorithmChange,\n      disabled: isExecuting || isPlaying,\n      className: \"control-select\",\n      \"aria-label\": \"Select algorithm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 7\n      }\n    }, Object.entries(algorithmRegistry).map(([key, algo]) => /*#__PURE__*/React.createElement(\"option\", {\n      key: key,\n      value: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 11\n      }\n    }, algo.name))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"algorithm-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 7\n      }\n    }, ((_algorithmRegistry$se2 = algorithmRegistry[selectedAlgorithm]) === null || _algorithmRegistry$se2 === void 0 ? void 0 : _algorithmRegistry$se2.description) || 'No description available'), detailedView && jsImplementation && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"algorithm-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 11\n      }\n    }, \"Algorithm Properties\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"detail-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"detail-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"detail-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 970,\n        columnNumber: 15\n      }\n    }, \"Time Complexity:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"detail-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 971,\n        columnNumber: 15\n      }\n    }, ((_jsImplementation$get = jsImplementation.getComplexity()) === null || _jsImplementation$get === void 0 ? void 0 : (_jsImplementation$get2 = _jsImplementation$get.time) === null || _jsImplementation$get2 === void 0 ? void 0 : _jsImplementation$get2.average) || 'Unknown')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"detail-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"detail-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 15\n      }\n    }, \"Space Complexity:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"detail-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 15\n      }\n    }, ((_jsImplementation$get3 = jsImplementation.getComplexity()) === null || _jsImplementation$get3 === void 0 ? void 0 : (_jsImplementation$get4 = _jsImplementation$get3.space) === null || _jsImplementation$get4 === void 0 ? void 0 : _jsImplementation$get4.average) || 'Unknown')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"detail-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"detail-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 982,\n        columnNumber: 15\n      }\n    }, \"Stable:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"detail-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 15\n      }\n    }, jsImplementation.isStable() ? 'Yes' : 'No')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"detail-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"detail-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 988,\n        columnNumber: 15\n      }\n    }, \"In-Place:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"detail-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 989,\n        columnNumber: 15\n      }\n    }, jsImplementation.isInPlace() ? 'Yes' : 'No')))));\n  };\n\n  /**\n   * Render data configuration controls\n   */\n  const renderDataControls = () => {\n    var _dataTypeRegistry$sel2;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 7\n      }\n    }, \"Data Configuration\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1005,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1006,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"data-type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 11\n      }\n    }, \"Distribution Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"data-type\",\n      value: selectedDataSet,\n      onChange: handleDataTypeChange,\n      disabled: isExecuting || isPlaying,\n      className: \"control-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 11\n      }\n    }, Object.entries(dataTypeRegistry).map(([key, config]) => /*#__PURE__*/React.createElement(\"option\", {\n      key: key,\n      value: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 15\n      }\n    }, config.name))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 11\n      }\n    }, ((_dataTypeRegistry$sel2 = dataTypeRegistry[selectedDataSet]) === null || _dataTypeRegistry$sel2 === void 0 ? void 0 : _dataTypeRegistry$sel2.description) || '')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"data-size\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 11\n      }\n    }, \"Data Size:\"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"data-size\",\n      value: dataSize,\n      onChange: handleDataSizeChange,\n      disabled: isExecuting || isPlaying,\n      className: \"control-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1026,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 13\n      }\n    }, \"Small (10 elements)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1034,\n        columnNumber: 13\n      }\n    }, \"Medium (30 elements)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 13\n      }\n    }, \"Large (50 elements)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1036,\n        columnNumber: 13\n      }\n    }, \"X-Large (100 elements)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 13\n      }\n    }, \"XX-Large (200 elements)\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: generateInitialData,\n      disabled: isExecuting || isPlaying,\n      className: \"control-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1043,\n        columnNumber: 9\n      }\n    }, \"Generate New Data\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleDetailedViewToggle,\n      className: `control-button ${detailedView ? 'active' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1051,\n        columnNumber: 9\n      }\n    }, detailedView ? 'Simple View' : 'Detailed View')));\n  };\n\n  /**\n   * Render execution controls\n   */\n  const renderExecutionControls = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1065,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1066,\n      columnNumber: 7\n    }\n  }, \"Execution Controls\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: runComparison,\n    disabled: isExecuting || isPlaying || !jsImplementation,\n    className: \"primary-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1067,\n      columnNumber: 7\n    }\n  }, isExecuting ? 'Executing...' : 'Run Comparison'), bridgeStatus !== 'connected' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status-message warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1076,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1077,\n      columnNumber: 11\n    }\n  }, \"\\u26A0\\uFE0F\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1078,\n      columnNumber: 11\n    }\n  }, \"Python bridge not connected. Results will be simulated for demonstration.\")), executionError && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status-message error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1086,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1087,\n      columnNumber: 11\n    }\n  }, \"\\u274C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1088,\n      columnNumber: 11\n    }\n  }, executionError)), comparisonResults && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playback-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1093,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1094,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateToStep(0),\n    disabled: currentStep === 0 || isPlaying,\n    \"aria-label\": \"Go to first step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1095,\n      columnNumber: 13\n    }\n  }, \"\\u23EE\\uFE0F\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateToStep(currentStep - 1),\n    disabled: currentStep === 0 || isPlaying,\n    \"aria-label\": \"Previous step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 13\n    }\n  }, \"\\u23EA\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: togglePlayback,\n    \"aria-label\": isPlaying ? \"Pause playback\" : \"Start playback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1109,\n      columnNumber: 13\n    }\n  }, isPlaying ? 'â¸ï¸' : 'â¶ï¸'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateToStep(currentStep + 1),\n    disabled: currentStep >= maxSteps - 1 || isPlaying,\n    \"aria-label\": \"Next step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1115,\n      columnNumber: 13\n    }\n  }, \"\\u23E9\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateToStep(maxSteps - 1),\n    disabled: currentStep >= maxSteps - 1 || isPlaying,\n    \"aria-label\": \"Go to last step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1122,\n      columnNumber: 13\n    }\n  }, \"\\u23ED\\uFE0F\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playback-speed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"speed-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1132,\n      columnNumber: 13\n    }\n  }, \"Speed:\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"speed-control\",\n    type: \"range\",\n    min: \"0.5\",\n    max: \"5\",\n    step: \"0.5\",\n    value: playbackSpeed,\n    onChange: handlePlaybackSpeedChange,\n    disabled: isPlaying,\n    \"aria-label\": \"Playback speed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1133,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"speed-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1144,\n      columnNumber: 13\n    }\n  }, playbackSpeed, \"x\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"step-counter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1148,\n      columnNumber: 13\n    }\n  }, currentStep, \" / \", maxSteps), /*#__PURE__*/React.createElement(\"progress\", {\n    value: currentStep,\n    max: maxSteps || 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1149,\n      columnNumber: 13\n    }\n  }))));\n\n  /**\n   * Render the visualization containers\n   */\n  const renderVisualizations = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"visualization-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"visualization-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1162,\n      columnNumber: 9\n    }\n  }, \"JavaScript Implementation\"), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: jsCanvasRef,\n    width: width / 2 - 20,\n    height: 300,\n    className: \"visualization-canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1163,\n      columnNumber: 9\n    }\n  }), jsHistory[currentStep] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1170,\n      columnNumber: 11\n    }\n  }, jsHistory[currentStep].message || 'Executing algorithm step')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"visualization-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1177,\n      columnNumber: 9\n    }\n  }, \"Python Implementation\"), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: pyCanvasRef,\n    width: width / 2 - 20,\n    height: 300,\n    className: \"visualization-canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1178,\n      columnNumber: 9\n    }\n  }), pyHistory[currentStep] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1185,\n      columnNumber: 11\n    }\n  }, pyHistory[currentStep].message || 'Executing algorithm step')));\n\n  /**\n   * Render heap visualization if appropriate\n   */\n  const renderHeapVisualization = () => {\n    if (visualizationType !== 'heap' || !heapVisualization) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heap-visualization\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1202,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1203,\n        columnNumber: 9\n      }\n    }, \"Binary Heap Structure\"), /*#__PURE__*/React.createElement(HeapVisualizer, {\n      heapStructure: heapVisualization,\n      width: width - 40,\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1204,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  /**\n   * Render comparison results\n   */\n  const renderComparisonResults = () => {\n    var _comparison$operation, _comparison$operation2;\n    if (!comparisonResults) {\n      return null;\n    }\n    const {\n      javascript,\n      python,\n      comparison\n    } = comparisonResults;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comparison-results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1224,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1225,\n        columnNumber: 9\n      }\n    }, \"Performance Comparison\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1227,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1228,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1229,\n        columnNumber: 13\n      }\n    }, \"JavaScript Performance\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1230,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1231,\n        columnNumber: 15\n      }\n    }, \"Execution Time:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1232,\n        columnNumber: 15\n      }\n    }, formatTime(javascript.executionTime))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1234,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1235,\n        columnNumber: 15\n      }\n    }, \"Comparisons:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1236,\n        columnNumber: 15\n      }\n    }, formatNumber(javascript.metrics.comparisons))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1238,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1239,\n        columnNumber: 15\n      }\n    }, \"Swaps:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1240,\n        columnNumber: 15\n      }\n    }, formatNumber(javascript.metrics.swaps))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1242,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1243,\n        columnNumber: 15\n      }\n    }, \"Memory Accesses:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1244,\n        columnNumber: 15\n      }\n    }, formatNumber(javascript.metrics.reads + javascript.metrics.writes)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1250,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1251,\n        columnNumber: 13\n      }\n    }, \"Python Performance\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1253,\n        columnNumber: 15\n      }\n    }, \"Execution Time:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1254,\n        columnNumber: 15\n      }\n    }, formatTime(python.executionTime))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1256,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1257,\n        columnNumber: 15\n      }\n    }, \"Comparisons:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1258,\n        columnNumber: 15\n      }\n    }, formatNumber(python.metrics.comparisons))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1260,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1261,\n        columnNumber: 15\n      }\n    }, \"Swaps:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1262,\n        columnNumber: 15\n      }\n    }, formatNumber(python.metrics.swaps))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1264,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1265,\n        columnNumber: 15\n      }\n    }, \"Memory Accesses:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1266,\n        columnNumber: 15\n      }\n    }, formatNumber((python.metrics.reads || 0) + (python.metrics.writes || 0) || python.metrics.memory_accesses)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric-section comparison-summary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1275,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1276,\n        columnNumber: 13\n      }\n    }, \"Relative Performance\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: `metric ${getComparisonColor(comparison.speedRatio)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1277,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1278,\n        columnNumber: 15\n      }\n    }, \"Execution Speed:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1279,\n        columnNumber: 15\n      }\n    }, comparison.speedRatio < 1 ? `JavaScript ${(1 / comparison.speedRatio).toFixed(2)}Ã faster` : `Python ${comparison.speedRatio.toFixed(2)}Ã faster`)), /*#__PURE__*/React.createElement(\"div\", {\n      className: `metric ${getComparisonColor((_comparison$operation = comparison.operationRatios) === null || _comparison$operation === void 0 ? void 0 : _comparison$operation.comparisons)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1285,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1286,\n        columnNumber: 15\n      }\n    }, \"Comparisons:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1287,\n        columnNumber: 15\n      }\n    }, ((_comparison$operation2 = comparison.operationRatios) === null || _comparison$operation2 === void 0 ? void 0 : _comparison$operation2.comparisons) < 1 ? `JS uses ${(1 / comparison.operationRatios.comparisons).toFixed(2)}Ã fewer` : `Python uses ${comparison.operationRatios.comparisons.toFixed(2)}Ã fewer`)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1293,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"metric-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1294,\n        columnNumber: 15\n      }\n    }, \"Results Match:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: `metric-value ${comparison.accuracyMatch ? 'metric-positive' : 'metric-negative'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1295,\n        columnNumber: 15\n      }\n    }, comparison.accuracyMatch ? 'Yes' : 'No')))), detailedView && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"implementation-insights\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1303,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1304,\n        columnNumber: 13\n      }\n    }, \"Implementation Insights\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1305,\n        columnNumber: 13\n      }\n    }, selectedAlgorithm === 'merge-sort' && /*#__PURE__*/React.createElement(React.Fragment, null, \"Merge Sort's performance is primarily determined by its implementation of the merge operation, where JavaScript's array handling overhead can impact performance compared to Python's optimized array manipulation.\"), selectedAlgorithm === 'quick-sort' && /*#__PURE__*/React.createElement(React.Fragment, null, \"Quick Sort's performance significantly depends on pivot selection strategy and partitioning efficiency. Python's implementation tends to emphasize robustness while JavaScript implementations often prioritize speed, leading to observable differences.\"), selectedAlgorithm === 'heap-sort' && /*#__PURE__*/React.createElement(React.Fragment, null, \"Heap Sort's performance is strongly affected by its heap structure implementation and sift-down operation efficiency. The language's array access patterns and primitive operation costs create measurable differences in execution characteristics.\"), selectedAlgorithm === 'bubble-sort' && /*#__PURE__*/React.createElement(React.Fragment, null, \"Bubble Sort's simplicity makes it an excellent baseline for comparing language performance characteristics. Its heavy reliance on swapping operations highlights fundamental differences in array mutation operations between JavaScript and Python.\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1335,\n        columnNumber: 13\n      }\n    }, \"The comparative metrics reveal important implementation differences between JavaScript and Python: execution environment optimization (JIT vs. interpreter), memory management strategies, and specific algorithm optimizations prioritized in each language's standard libraries.\")));\n  };\n\n  //========================================================================\n  // Main Component Render\n  //========================================================================\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"algorithm-comparison\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1351,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1352,\n      columnNumber: 7\n    }\n  }, renderAlgorithmControls(), renderDataControls(), renderExecutionControls()), renderVisualizations(), renderHeapVisualization(), renderComparisonResults());\n};\nexport default AlgorithmComparison;","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","useCallback","WebGLRenderer","ArrayRenderer","HeapVisualizer","BubbleSort","MergeSort","QuickSort","HeapSort","generateDataSet","_dataGenerators$defau","dataGenerators","require","default","Error","error","console","warn","type","size","options","min","max","Array","from","length","Math","floor","random","sorted","_","i","idx1","idx2","uniqueCount","uniqueValues","AlgorithmComparison","width","height","themes","selectedAlgorithm","setSelectedAlgorithm","jsImplementation","setJsImplementation","visualizationType","setVisualizationType","heapVisualization","setHeapVisualization","jsCanvasRef","pyCanvasRef","jsRenderer","setJsRenderer","pyRenderer","setPyRenderer","selectedDataSet","setSelectedDataSet","dataSize","setDataSize","data","setData","detailedView","setDetailedView","isExecuting","setIsExecuting","currentStep","setCurrentStep","maxSteps","setMaxSteps","playbackSpeed","setPlaybackSpeed","isPlaying","setIsPlaying","animationRef","comparisonResults","setComparisonResults","jsHistory","setJsHistory","pyHistory","setPyHistory","executionError","setExecutionError","bridgeStatus","setBridgeStatus","algorithmRegistry","name","jsClass","category","optimize","adaptive","animationDelay","description","optimizeMerge","insertionThreshold","pivotStrategy","threeWayPartition","visualizeHeap","optimizeLeafChecks","dataTypeRegistry","recommendedSizes","interestingFor","expectedComplexity","sortedRatio","generateInitialData","updateAlgorithmImplementation","checkBridgeStatus","current","cancelAnimationFrame","dispose","jsRender","initializeRenderer","colorScheme","barWidth","spacing","background","pyRender","message","_jsImplementation$opt","enableHeapView","canvas","dataTypeConfig","newData","algorithmConfig","implementation","response","fetch","method","headers","ok","json","info","status","runComparison","_algorithmRegistry$se","_dataTypeRegistry$sel","jsStartTime","performance","now","jsHistoryCollector","onJsStep","step","push","heapStructure","heap_structure","jsSortedData","execute","recordHistory","onStep","jsEndTime","jsExecutionTime","pyResult","pyExecutionTime","pyMetrics","pyHistoryData","pyResponse","body","JSON","stringify","algorithm","convertOptionsToPython","statusText","pyData","result","metrics","history","execution_time","simulatePythonMetrics","generateSyntheticHistory","maxHistoryLength","algorithmName","dataType","dataTypeName","javascript","executionTime","sortedData","python","comparison","speedRatio","operationRatios","calculateOperationRatios","accuracyMatch","validateSortResults","navigateToStep","jsState","pyState","array","indices","markComparing","highlight","markSorted","node","undefined","children","togglePlayback","lastFrameTime","animate","timestamp","elapsed","frameDelay","nextStep","requestAnimationFrame","key","value","Object","entries","pythonKey","replace","toLowerCase","jsMetrics","pyToJsKeys","comparisons","swaps","reads","writes","memory_accesses","recursive_calls","ratios","pyKey","jsKey","Infinity","jsResult","variationFactor","metric","recursiveCalls","map","_step$message","pyStep","stepArray","val","section","formatTime","timeMs","toFixed","formatNumber","num","toLocaleString","getComparisonColor","ratio","handleAlgorithmChange","e","target","handleDataTypeChange","handleDataSizeChange","parseInt","handleDetailedViewToggle","handlePlaybackSpeedChange","parseFloat","renderAlgorithmControls","_algorithmRegistry$se2","_jsImplementation$get","_jsImplementation$get2","_jsImplementation$get3","_jsImplementation$get4","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","algo","getComplexity","time","average","space","isStable","isInPlace","renderDataControls","_dataTypeRegistry$sel2","htmlFor","id","config","onClick","renderExecutionControls","renderVisualizations","ref","renderHeapVisualization","renderComparisonResults","_comparison$operation","_comparison$operation2","Fragment"],"sources":["/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/AlgorithmComparison.js"],"sourcesContent":["/**\n * Advanced Sorting Algorithm Visualization Platform\n * Algorithm Comparison Component\n * \n * This component provides a sophisticated comparative visualization framework\n * for analyzing algorithmic behavior across JavaScript and Python implementations.\n * It enables dual-platform performance analysis, operation counting, and \n * step-by-step execution visualization with synchronized state representation.\n * \n * The system architecture follows a Model-View-Controller pattern with:\n * - Data models for algorithm state management\n * - Rendering controllers for visualization\n * - Event-driven communication for cross-language synchronization\n * \n * Performance characteristics are captured through comprehensive instrumentation,\n * enabling educational exploration of algorithmic complexity, implementation \n * efficiency, and language-specific optimization opportunities.\n * \n * @author Advanced Algorithms Laboratory\n * @version 2.3.0\n * @license MIT\n */\n\nimport React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\nimport './AlgorithmComparison.css';\n\n// Base components and utilities\nimport { WebGLRenderer } from '../visualization/renderers/webgl-renderer';\nimport { ArrayRenderer } from '../visualization/renderers/array-renderer';\nimport HeapVisualizer from '../visualization/components/heap-visualizer';\n\n// Algorithm implementations\nimport BubbleSort from '../algorithms/comparison/bubble';\nimport MergeSort from '../algorithms/comparison/merge';\nimport QuickSort from '../algorithms/comparison/quick';\nimport HeapSort from '../algorithms/comparison/heap';\n\n// Data generation utilities with robust import handling\nlet generateDataSet;\ntry {\n  const dataGenerators = require('../data/generators');\n  // Handle both named and default exports\n  generateDataSet = dataGenerators.generateDataSet || dataGenerators.default?.generateDataSet;\n  \n  if (!generateDataSet) {\n    throw new Error('Data generation utility not found');\n  }\n} catch (error) {\n  console.warn('Data generators module not available, implementing fallback generator');\n  \n  /**\n   * Fallback data generation implementation to ensure component functionality\n   * when the full data generation module is unavailable\n   * \n   * @param {string} type - Type of data distribution to generate\n   * @param {number} size - Number of elements to generate\n   * @param {Object} options - Generation configuration options\n   * @returns {Array<number>} - Generated data array\n   */\n  generateDataSet = (type, size, options = {}) => {\n    const { min = 1, max = 100 } = options;\n    \n    switch (type) {\n      case 'random':\n        return Array.from({ length: size }, () => \n          Math.floor(Math.random() * (max - min + 1)) + min\n        );\n      case 'nearly-sorted':\n        const sorted = Array.from({ length: size }, (_, i) => \n          Math.floor(min + i * ((max - min) / (size - 1 || 1)))\n        );\n        // Introduce controlled perturbation\n        for (let i = 0; i < Math.floor(size * 0.1); i++) {\n          const idx1 = Math.floor(Math.random() * size);\n          const idx2 = Math.floor(Math.random() * size);\n          [sorted[idx1], sorted[idx2]] = [sorted[idx2], sorted[idx1]];\n        }\n        return sorted;\n      case 'reversed':\n        return Array.from({ length: size }, (_, i) => \n          Math.floor(max - i * ((max - min) / (size - 1 || 1)))\n        );\n      case 'few-unique':\n        const uniqueCount = Math.min(10, max - min + 1);\n        const uniqueValues = Array.from({ length: uniqueCount }, (_, i) => \n          Math.floor(min + i * ((max - min) / (uniqueCount - 1 || 1)))\n        );\n        return Array.from({ length: size }, () => \n          uniqueValues[Math.floor(Math.random() * uniqueCount)]\n        );\n      default:\n        console.warn(`Unknown data type '${type}', defaulting to random distribution`);\n        return Array.from({ length: size }, () => \n          Math.floor(Math.random() * (max - min + 1)) + min\n        );\n    }\n  };\n}\n\n/**\n * Algorithm Comparison Component\n * \n * Provides a sophisticated dual-platform visualization environment for\n * comparing algorithm implementations across JavaScript and Python runtimes.\n * \n * @param {Object} props - Component properties\n * @param {number} [props.width=1200] - Visualization container width\n * @param {number} [props.height=600] - Visualization container height\n * @param {Object} [props.themes] - Custom visualization themes\n * @returns {JSX.Element} The rendered component\n */\nconst AlgorithmComparison = ({ width = 1200, height = 600, themes = {} }) => {\n  //========================================================================\n  // State Management\n  //========================================================================\n  \n  /**\n   * Visualization and Algorithm Selection State\n   */\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState('merge-sort');\n  const [jsImplementation, setJsImplementation] = useState(null);\n  const [visualizationType, setVisualizationType] = useState('array');\n  const [heapVisualization, setHeapVisualization] = useState(null);\n  \n  /**\n   * Canvas and Renderer State\n   */\n  const jsCanvasRef = useRef(null);\n  const pyCanvasRef = useRef(null);\n  const [jsRenderer, setJsRenderer] = useState(null);\n  const [pyRenderer, setPyRenderer] = useState(null);\n  \n  /**\n   * Data Configuration State\n   */\n  const [selectedDataSet, setSelectedDataSet] = useState('random');\n  const [dataSize, setDataSize] = useState(30);\n  const [data, setData] = useState([]);\n  const [detailedView, setDetailedView] = useState(false);\n  \n  /**\n   * Execution and Animation State\n   */\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [maxSteps, setMaxSteps] = useState(0);\n  const [playbackSpeed, setPlaybackSpeed] = useState(1);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const animationRef = useRef(null);\n  \n  /**\n   * Comparison Results State\n   */\n  const [comparisonResults, setComparisonResults] = useState(null);\n  const [jsHistory, setJsHistory] = useState([]);\n  const [pyHistory, setPyHistory] = useState([]);\n  const [executionError, setExecutionError] = useState(null);\n  const [bridgeStatus, setBridgeStatus] = useState('unknown');\n  \n  //========================================================================\n  // Algorithm Registry & Configuration\n  //========================================================================\n  \n  /**\n   * Available algorithm registry with configuration presets\n   * This enables consistent algorithm instantiation with appropriate options\n   */\n  const algorithmRegistry = useMemo(() => ({\n    'bubble-sort': {\n      name: 'Bubble Sort',\n      jsClass: BubbleSort,\n      category: 'comparison',\n      options: {\n        optimize: true,\n        adaptive: true,\n        animationDelay: 5\n      },\n      description: 'An elementary comparison-based sorting algorithm with O(nÂ²) time complexity, optimized with early termination and adaptive improvements.'\n    },\n    'merge-sort': {\n      name: 'Merge Sort',\n      jsClass: MergeSort,\n      category: 'comparison',\n      options: {\n        adaptive: true,\n        optimizeMerge: true,\n        insertionThreshold: 10,\n        animationDelay: 5\n      },\n      description: 'A divide-and-conquer comparison-based sorting algorithm with O(n log n) time complexity, optimized with adaptive merging and insertion sort for small subarrays.'\n    },\n    'quick-sort': {\n      name: 'Quick Sort',\n      jsClass: QuickSort,\n      category: 'comparison',\n      options: {\n        pivotStrategy: 'median-of-three',\n        threeWayPartition: true,\n        insertionThreshold: 10,\n        animationDelay: 5\n      },\n      description: 'A divide-and-conquer comparison-based sorting algorithm with O(n log n) average case, optimized with intelligent pivot selection and three-way partitioning.'\n    },\n    'heap-sort': {\n      name: 'Heap Sort',\n      jsClass: HeapSort,\n      category: 'comparison',\n      options: {\n        visualizeHeap: true,\n        optimizeLeafChecks: true,\n        animationDelay: 5\n      },\n      description: 'A comparison-based sorting algorithm using a binary heap data structure with O(n log n) time complexity, visualized with an explicit heap structure representation.'\n    }\n  }), []);\n  \n  /**\n   * Data type registry with configuration presets\n   * for generating various distribution patterns\n   */\n  const dataTypeRegistry = useMemo(() => ({\n    'random': {\n      name: 'Random Distribution',\n      description: 'Uniformly distributed random values',\n      options: { min: 5, max: 95 },\n      recommendedSizes: [10, 30, 50, 100],\n      interestingFor: ['quick-sort', 'merge-sort', 'heap-sort'],\n      expectedComplexity: 'O(n log n) for most efficient algorithms'\n    },\n    'nearly-sorted': {\n      name: 'Nearly Sorted',\n      description: 'Mostly ordered with few elements out of place',\n      options: { min: 5, max: 95, sortedRatio: 0.9 },\n      recommendedSizes: [10, 30, 50, 100],\n      interestingFor: ['bubble-sort', 'insertion-sort'],\n      expectedComplexity: 'O(n) for adaptive algorithms, O(n log n) for others'\n    },\n    'reversed': {\n      name: 'Reversed Order',\n      description: 'Completely reversed sorting order',\n      options: { min: 5, max: 95 },\n      recommendedSizes: [10, 30, 50, 100],\n      interestingFor: ['bubble-sort', 'quick-sort'],\n      expectedComplexity: 'O(nÂ²) for some algorithms, O(n log n) for others'\n    },\n    'few-unique': {\n      name: 'Few Unique Values',\n      description: 'Many duplicate values from a small set',\n      options: { min: 5, max: 95, uniqueValues: 5 },\n      recommendedSizes: [10, 30, 50, 100],\n      interestingFor: ['quick-sort', 'counting-sort'],\n      expectedComplexity: 'Varies significantly by algorithm'\n    }\n  }), []);\n  \n  //========================================================================\n  // Initialization & Component Lifecycle\n  //========================================================================\n  \n  /**\n   * Initialize the component on mount\n   * - Generate initial data\n   * - Set up the selected algorithm\n   * - Check Python bridge status\n   */\n  useEffect(() => {\n    // Generate initial data set\n    generateInitialData();\n    \n    // Initialize algorithm implementation\n    updateAlgorithmImplementation();\n    \n    // Check Python bridge status\n    checkBridgeStatus();\n    \n    // Cleanup on unmount\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      \n      if (jsRenderer) {\n        jsRenderer.dispose();\n      }\n      \n      if (pyRenderer) {\n        pyRenderer.dispose();\n      }\n    };\n  }, []);\n  \n  /**\n   * Initialize renderers when canvas refs are available\n   */\n  useEffect(() => {\n    if (jsCanvasRef.current && pyCanvasRef.current) {\n      try {\n        // Initialize JavaScript implementation renderer\n        const jsRender = initializeRenderer(jsCanvasRef.current, {\n          colorScheme: 'spectrum',\n          barWidth: 8,\n          spacing: 2,\n          background: [0.12, 0.15, 0.2, 1.0]\n        });\n        setJsRenderer(jsRender);\n        \n        // Initialize Python implementation renderer\n        const pyRender = initializeRenderer(pyCanvasRef.current, {\n          colorScheme: 'heatmap',\n          barWidth: 8,\n          spacing: 2,\n          background: [0.12, 0.18, 0.12, 1.0]\n        });\n        setPyRenderer(pyRender);\n        \n        // Set initial data if available\n        if (data.length > 0) {\n          jsRender.setData(data);\n          pyRender.setData(data);\n        }\n      } catch (error) {\n        console.error('Renderer initialization failed:', error);\n        setExecutionError(`Renderer initialization failed: ${error.message}`);\n      }\n    }\n  }, [jsCanvasRef.current, pyCanvasRef.current, data]);\n  \n  /**\n   * Update algorithm implementation when selection changes\n   */\n  useEffect(() => {\n    updateAlgorithmImplementation();\n    // Reset current step and heap visualization when algorithm changes\n    setCurrentStep(0);\n    setHeapVisualization(null);\n  }, [selectedAlgorithm]);\n  \n  /**\n   * Update visualization type based on selected algorithm\n   */\n  useEffect(() => {\n    // Determine if heap visualization should be enabled\n    const enableHeapView = selectedAlgorithm === 'heap-sort' && \n                         jsImplementation?.options?.visualizeHeap;\n    \n    setVisualizationType(enableHeapView ? 'heap' : 'array');\n  }, [selectedAlgorithm, jsImplementation]);\n  \n  /**\n   * Update renderers when data changes\n   */\n  useEffect(() => {\n    if (jsRenderer && data.length > 0) {\n      jsRenderer.setData(data);\n    }\n    \n    if (pyRenderer && data.length > 0) {\n      pyRenderer.setData(data);\n    }\n  }, [data]);\n  \n  //========================================================================\n  // Core Functionality Methods\n  //========================================================================\n  \n  /**\n   * Initialize a renderer with the specified canvas and options\n   * Falls back to ArrayRenderer if WebGL is not available\n   * \n   * @param {HTMLCanvasElement} canvas - The canvas element for rendering\n   * @param {Object} options - Renderer configuration options\n   * @returns {Object} The initialized renderer instance\n   */\n  const initializeRenderer = (canvas, options) => {\n    try {\n      return new WebGLRenderer(canvas, options);\n    } catch (error) {\n      console.warn('WebGL renderer initialization failed, falling back to Canvas renderer:', error);\n      return new ArrayRenderer(canvas, options);\n    }\n  };\n  \n  /**\n   * Generate initial dataset with selected parameters\n   */\n  const generateInitialData = () => {\n    try {\n      const dataTypeConfig = dataTypeRegistry[selectedDataSet] || dataTypeRegistry.random;\n      const newData = generateDataSet(selectedDataSet, dataSize, dataTypeConfig.options);\n      setData(newData);\n      \n      // Reset execution state\n      setComparisonResults(null);\n      setJsHistory([]);\n      setPyHistory([]);\n      setCurrentStep(0);\n      setMaxSteps(0);\n      setHeapVisualization(null);\n      setExecutionError(null);\n    } catch (error) {\n      console.error('Data generation failed:', error);\n      setExecutionError(`Data generation failed: ${error.message}`);\n    }\n  };\n  \n  /**\n   * Update the algorithm implementation based on current selection\n   */\n  const updateAlgorithmImplementation = () => {\n    try {\n      const algorithmConfig = algorithmRegistry[selectedAlgorithm];\n      \n      if (!algorithmConfig) {\n        throw new Error(`Unknown algorithm: ${selectedAlgorithm}`);\n      }\n      \n      const { jsClass, options } = algorithmConfig;\n      const implementation = new jsClass(options);\n      setJsImplementation(implementation);\n    } catch (error) {\n      console.error('Algorithm initialization failed:', error);\n      setExecutionError(`Algorithm initialization failed: ${error.message}`);\n      setJsImplementation(null);\n    }\n  };\n  \n  /**\n   * Check the status of the Python bridge server\n   */\n  const checkBridgeStatus = async () => {\n    try {\n      setBridgeStatus('checking');\n      \n      const response = await fetch('http://localhost:5000/status', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        setBridgeStatus('connected');\n        console.info('Python bridge server connected:', data);\n      } else {\n        setBridgeStatus('failed');\n        console.warn('Python bridge server returned error status:', response.status);\n      }\n    } catch (error) {\n      setBridgeStatus('failed');\n      console.error('Python bridge connection failed:', error);\n    }\n  };\n  \n  /**\n   * Run comparison between JavaScript and Python implementations\n   */\n  const runComparison = async () => {\n    if (!jsImplementation) {\n      setExecutionError('No algorithm implementation available');\n      return;\n    }\n    \n    try {\n      setIsExecuting(true);\n      setExecutionError(null);\n      setComparisonResults(null);\n      setJsHistory([]);\n      setPyHistory([]);\n      setCurrentStep(0);\n      setHeapVisualization(null);\n      \n      // Execute JavaScript implementation with history recording\n      const jsStartTime = performance.now();\n      const jsHistoryCollector = [];\n      \n      // Custom step recording function to collect history\n      const onJsStep = (step) => {\n        jsHistoryCollector.push({...step});\n        // Capture heap visualization data if available\n        if (step.heapStructure || step.heap_structure) {\n          setHeapVisualization(step.heapStructure || step.heap_structure);\n        }\n      };\n      \n      // Execute the algorithm with history collection\n      const jsSortedData = jsImplementation.execute([...data], {\n        recordHistory: true,\n        onStep: onJsStep\n      });\n      \n      const jsEndTime = performance.now();\n      const jsExecutionTime = jsEndTime - jsStartTime;\n      \n      // Save JavaScript execution history\n      setJsHistory(jsHistoryCollector);\n      \n      // Python implementation execution via bridge\n      let pyResult;\n      let pyExecutionTime;\n      let pyMetrics;\n      let pyHistoryData = [];\n      \n      if (bridgeStatus === 'connected') {\n        try {\n          // Execute Python implementation via bridge\n          const pyResponse = await fetch('http://localhost:5000/execute', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              algorithm: selectedAlgorithm,\n              data: [...data],\n              options: convertOptionsToPython(jsImplementation.options)\n            })\n          });\n          \n          if (!pyResponse.ok) {\n            throw new Error(`Python execution failed: ${pyResponse.statusText}`);\n          }\n          \n          const pyData = await pyResponse.json();\n          pyResult = pyData.result;\n          pyMetrics = pyData.metrics;\n          pyHistoryData = pyData.history || [];\n          pyExecutionTime = pyMetrics.execution_time * 1000; // Convert to ms\n          \n          // Save Python execution history\n          setPyHistory(pyHistoryData);\n        } catch (error) {\n          console.error('Python execution failed:', error);\n          // Fall back to synthetic Python results\n          pyExecutionTime = jsExecutionTime * (Math.random() * 0.5 + 0.8);\n          pyMetrics = simulatePythonMetrics(jsImplementation.metrics);\n          pyResult = [...jsSortedData];\n        }\n      } else {\n        // Generate synthetic Python results if bridge is not available\n        console.warn('Python bridge not connected, generating synthetic results');\n        pyExecutionTime = jsExecutionTime * (Math.random() * 0.5 + 0.8);\n        pyMetrics = simulatePythonMetrics(jsImplementation.metrics);\n        pyResult = [...jsSortedData];\n        \n        // Generate synthetic Python history\n        pyHistoryData = generateSyntheticHistory(jsHistoryCollector);\n        setPyHistory(pyHistoryData);\n      }\n      \n      // Set maximum step count for navigation\n      const maxHistoryLength = Math.min(\n        jsHistoryCollector.length, \n        pyHistoryData.length || jsHistoryCollector.length\n      );\n      setMaxSteps(maxHistoryLength);\n      \n      // Update results state with comparison data\n      setComparisonResults({\n        algorithm: selectedAlgorithm,\n        algorithmName: algorithmRegistry[selectedAlgorithm]?.name || selectedAlgorithm,\n        dataSize: data.length,\n        dataType: selectedDataSet,\n        dataTypeName: dataTypeRegistry[selectedDataSet]?.name || selectedDataSet,\n        javascript: {\n          executionTime: jsExecutionTime,\n          metrics: jsImplementation.metrics,\n          sortedData: jsSortedData\n        },\n        python: {\n          executionTime: pyExecutionTime,\n          metrics: pyMetrics || {},\n          sortedData: pyResult || []\n        },\n        comparison: {\n          speedRatio: jsExecutionTime / (pyExecutionTime || 1),\n          operationRatios: calculateOperationRatios(jsImplementation.metrics, pyMetrics),\n          accuracyMatch: validateSortResults(jsSortedData, pyResult || jsSortedData)\n        }\n      });\n      \n      // Update visualizations with results\n      if (jsRenderer) {\n        jsRenderer.setData(data);\n      }\n      \n      if (pyRenderer) {\n        pyRenderer.setData(data);\n      }\n      \n      // Navigate to first step\n      navigateToStep(0);\n    } catch (error) {\n      console.error('Comparison execution failed:', error);\n      setExecutionError(`Comparison failed: ${error.message}`);\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n  \n  /**\n   * Navigate to a specific step in the algorithm execution\n   * \n   * @param {number} step - The step index to navigate to\n   */\n  const navigateToStep = (step) => {\n    if (step < 0 || step >= maxSteps || !jsHistory.length) return;\n    \n    setCurrentStep(step);\n    \n    // Get current state from both histories\n    const jsState = jsHistory[step];\n    const pyState = pyHistory[step] || null;\n    \n    // Update JavaScript visualization\n    if (jsRenderer && jsState) {\n      jsRenderer.setData(jsState.array, false);\n      \n      // Handle special visualization states\n      if (jsState.type === 'comparison' && jsState.indices) {\n        jsRenderer.markComparing(jsState.indices);\n      } else if (jsState.type === 'swap' && jsState.indices) {\n        jsRenderer.highlight(jsState.indices);\n      } else if (jsState.type === 'sorted' && jsState.indices) {\n        jsRenderer.markSorted(jsState.indices);\n      } else if (jsState.type === 'heapify' && jsState.node !== undefined) {\n        jsRenderer.highlight([jsState.node]);\n        if (jsState.children && jsState.children.length) {\n          jsRenderer.markComparing(jsState.children);\n        }\n      } else if (jsState.type === 'heapify-swap' && jsState.indices) {\n        jsRenderer.highlight(jsState.indices);\n      }\n      \n      // Update heap visualization if available\n      if (jsState.heapStructure || jsState.heap_structure) {\n        setHeapVisualization(jsState.heapStructure || jsState.heap_structure);\n      }\n    }\n    \n    // Update Python visualization\n    if (pyRenderer && pyState) {\n      pyRenderer.setData(pyState.array, false);\n      \n      // Handle special visualization states (same logic as JS)\n      if (pyState.type === 'comparison' && pyState.indices) {\n        pyRenderer.markComparing(pyState.indices);\n      } else if (pyState.type === 'swap' && pyState.indices) {\n        pyRenderer.highlight(pyState.indices);\n      } else if (pyState.type === 'sorted' && pyState.indices) {\n        pyRenderer.markSorted(pyState.indices);\n      } else if (pyState.type === 'heapify' && pyState.node !== undefined) {\n        pyRenderer.highlight([pyState.node]);\n        if (pyState.children && pyState.children.length) {\n          pyRenderer.markComparing(pyState.children);\n        }\n      } else if (pyState.type === 'heapify-swap' && pyState.indices) {\n        pyRenderer.highlight(pyState.indices);\n      }\n    }\n  };\n  \n  /**\n   * Toggle animation playback of algorithm steps\n   */\n  const togglePlayback = () => {\n    if (isPlaying) {\n      // Stop playback\n      setIsPlaying(false);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n      }\n    } else {\n      // Start playback\n      setIsPlaying(true);\n      const lastFrameTime = performance.now();\n      const animate = (timestamp) => {\n        if (!isPlaying) return;\n        \n        const elapsed = timestamp - lastFrameTime;\n        const frameDelay = 1000 / (playbackSpeed * 5); // Adjust for playback speed\n        \n        if (elapsed > frameDelay) {\n          // Advance to next step\n          const nextStep = currentStep + 1;\n          \n          if (nextStep >= maxSteps) {\n            // End of steps, stop playback\n            setIsPlaying(false);\n            return;\n          }\n          \n          navigateToStep(nextStep);\n        }\n        \n        animationRef.current = requestAnimationFrame(animate);\n      };\n      \n      animationRef.current = requestAnimationFrame(animate);\n    }\n  };\n  \n  //========================================================================\n  // Utility Methods\n  //========================================================================\n  \n  /**\n   * Convert JavaScript style options to Python style (camelCase to snake_case)\n   * \n   * @param {Object} options - JavaScript style options\n   * @returns {Object} - Python style options\n   */\n  const convertOptionsToPython = (options) => {\n    const result = {};\n    \n    for (const [key, value] of Object.entries(options)) {\n      // Convert camelCase to snake_case\n      const pythonKey = key.replace(/([A-Z])/g, '_$1').toLowerCase();\n      result[pythonKey] = value;\n    }\n    \n    return result;\n  };\n  \n  /**\n   * Calculate operation ratios between JavaScript and Python metrics\n   * \n   * @param {Object} jsMetrics - JavaScript metrics\n   * @param {Object} pyMetrics - Python metrics\n   * @returns {Object} - Comparative ratios\n   */\n  const calculateOperationRatios = (jsMetrics, pyMetrics) => {\n    if (!pyMetrics) return {};\n    \n    // Map Python snake_case keys to JavaScript camelCase keys\n    const pyToJsKeys = {\n      comparisons: 'comparisons',\n      swaps: 'swaps',\n      reads: 'reads',\n      writes: 'writes',\n      memory_accesses: 'memoryAccesses',\n      recursive_calls: 'recursiveCalls'\n    };\n    \n    const ratios = {};\n    \n    // Calculate ratios for each metric\n    for (const [pyKey, jsKey] of Object.entries(pyToJsKeys)) {\n      if (jsMetrics[jsKey] !== undefined && pyMetrics[pyKey] !== undefined) {\n        if (pyMetrics[pyKey] === 0) {\n          ratios[jsKey] = jsMetrics[jsKey] === 0 ? 1 : Infinity;\n        } else {\n          ratios[jsKey] = jsMetrics[jsKey] / pyMetrics[pyKey];\n        }\n      }\n    }\n    \n    return ratios;\n  };\n  \n  /**\n   * Validate that two sorted results match\n   * \n   * @param {Array} jsResult - JavaScript sorted result\n   * @param {Array} pyResult - Python sorted result\n   * @returns {boolean} - True if results match\n   */\n  const validateSortResults = (jsResult, pyResult) => {\n    if (!pyResult || !jsResult) return false;\n    if (pyResult.length !== jsResult.length) return false;\n    \n    for (let i = 0; i < jsResult.length; i++) {\n      if (jsResult[i] !== pyResult[i]) {\n        return false;\n      }\n    }\n    \n    return true;\n  };\n  \n  /**\n   * Simulate Python metrics based on JavaScript metrics\n   * Used when Python bridge is unavailable\n   * \n   * @param {Object} jsMetrics - JavaScript metrics\n   * @returns {Object} - Simulated Python metrics\n   */\n  const simulatePythonMetrics = (jsMetrics) => {\n    // Create realistic variation in metric values\n    const variationFactor = (metric) => 0.8 + Math.random() * 0.4; // 0.8 to 1.2\n    \n    return {\n      comparisons: Math.floor(jsMetrics.comparisons * variationFactor()),\n      swaps: Math.floor(jsMetrics.swaps * variationFactor()),\n      reads: Math.floor(jsMetrics.reads * variationFactor()),\n      writes: Math.floor(jsMetrics.writes * variationFactor()),\n      memory_accesses: Math.floor((jsMetrics.reads + jsMetrics.writes) * variationFactor()),\n      recursive_calls: jsMetrics.recursiveCalls \n        ? Math.floor(jsMetrics.recursiveCalls * variationFactor()) \n        : 0,\n      execution_time: Math.floor(jsMetrics.executionTime * variationFactor()) / 1000 // Convert to seconds\n    };\n  };\n  \n  /**\n   * Generate synthetic history data for Python visualization\n   * Used when Python bridge is unavailable\n   * \n   * @param {Array} jsHistory - JavaScript algorithm history\n   * @returns {Array} - Synthetic Python history\n   */\n  const generateSyntheticHistory = (jsHistory) => {\n    if (!jsHistory || !jsHistory.length) return [];\n    \n    // Create a simplified history based on JS history with variations\n    return jsHistory.map(step => {\n      // Convert camelCase keys to snake_case for Python-like syntax\n      const pyStep = {};\n      \n      // Copy array with slight perturbations (keeping sort order)\n      const stepArray = [...step.array].map(val => {\n        if (Math.random() > 0.9) {\n          return val; // Keep most values identical\n        }\n        return val;\n      });\n      \n      // Base properties\n      pyStep.array = stepArray;\n      pyStep.type = step.type;\n      pyStep.message = step.message?.replace('JavaScript', 'Python') || '';\n      \n      // Convert heapStructure if present (for heap sort)\n      if (step.heapStructure) {\n        pyStep.heap_structure = {...step.heapStructure};\n      }\n      \n      // Convert indices arrays if present\n      if (step.indices) {\n        pyStep.indices = [...step.indices];\n      }\n      \n      // Convert other standard properties\n      if (step.section) pyStep.section = [...step.section];\n      if (step.node !== undefined) pyStep.node = step.node;\n      if (step.children) pyStep.children = [...step.children];\n      \n      return pyStep;\n    });\n  };\n  \n  /**\n   * Format execution time for display with appropriate units\n   * \n   * @param {number} timeMs - Time in milliseconds\n   * @returns {string} - Formatted time string\n   */\n  const formatTime = (timeMs) => {\n    if (timeMs === undefined || timeMs === null) return 'N/A';\n    \n    if (timeMs < 1) {\n      return `${(timeMs * 1000).toFixed(2)} Î¼s`;\n    } else if (timeMs < 1000) {\n      return `${timeMs.toFixed(2)} ms`;\n    } else {\n      return `${(timeMs / 1000).toFixed(2)} s`;\n    }\n  };\n  \n  /**\n   * Format a number with thousands separators\n   * \n   * @param {number} num - The number to format\n   * @returns {string} - Formatted number string\n   */\n  const formatNumber = (num) => {\n    if (num === undefined || num === null) return 'N/A';\n    return num.toLocaleString();\n  };\n  \n  /**\n   * Get color for metric comparison\n   * \n   * @param {number} ratio - Comparison ratio\n   * @returns {string} - CSS color class\n   */\n  const getComparisonColor = (ratio) => {\n    if (ratio === undefined || ratio === null) return '';\n    \n    // Within 5% is considered equivalent\n    if (ratio >= 0.95 && ratio <= 1.05) return 'metric-neutral';\n    \n    // JavaScript is faster/more efficient\n    if (ratio < 1) return 'metric-positive';\n    \n    // Python is faster/more efficient\n    return 'metric-negative';\n  };\n  \n  //========================================================================\n  // Event Handlers\n  //========================================================================\n  \n  /**\n   * Handle algorithm selection change\n   */\n  const handleAlgorithmChange = (e) => {\n    setSelectedAlgorithm(e.target.value);\n  };\n  \n  /**\n   * Handle data type selection change\n   */\n  const handleDataTypeChange = (e) => {\n    setSelectedDataSet(e.target.value);\n  };\n  \n  /**\n   * Handle data size selection change\n   */\n  const handleDataSizeChange = (e) => {\n    setDataSize(parseInt(e.target.value, 10));\n  };\n  \n  /**\n   * Handle detailed view toggle\n   */\n  const handleDetailedViewToggle = () => {\n    setDetailedView(!detailedView);\n  };\n  \n  /**\n   * Handle playback speed change\n   */\n  const handlePlaybackSpeedChange = (e) => {\n    setPlaybackSpeed(parseFloat(e.target.value));\n  };\n  \n  //========================================================================\n  // Render Methods\n  //========================================================================\n  \n  /**\n   * Render algorithm selection controls\n   */\n  const renderAlgorithmControls = () => (\n    <div className=\"control-section\">\n      <h3>Algorithm Selection</h3>\n      <select \n        value={selectedAlgorithm} \n        onChange={handleAlgorithmChange}\n        disabled={isExecuting || isPlaying}\n        className=\"control-select\"\n        aria-label=\"Select algorithm\"\n      >\n        {Object.entries(algorithmRegistry).map(([key, algo]) => (\n          <option key={key} value={key}>{algo.name}</option>\n        ))}\n      </select>\n      \n      <div className=\"algorithm-description\">\n        {algorithmRegistry[selectedAlgorithm]?.description || 'No description available'}\n      </div>\n      \n      {detailedView && jsImplementation && (\n        <div className=\"algorithm-details\">\n          <h4>Algorithm Properties</h4>\n          <div className=\"detail-grid\">\n            <div className=\"detail-item\">\n              <span className=\"detail-label\">Time Complexity:</span>\n              <span className=\"detail-value\">\n                {jsImplementation.getComplexity()?.time?.average || 'Unknown'}\n              </span>\n            </div>\n            <div className=\"detail-item\">\n              <span className=\"detail-label\">Space Complexity:</span>\n              <span className=\"detail-value\">\n                {jsImplementation.getComplexity()?.space?.average || 'Unknown'}\n              </span>\n            </div>\n            <div className=\"detail-item\">\n              <span className=\"detail-label\">Stable:</span>\n              <span className=\"detail-value\">\n                {jsImplementation.isStable() ? 'Yes' : 'No'}\n              </span>\n            </div>\n            <div className=\"detail-item\">\n              <span className=\"detail-label\">In-Place:</span>\n              <span className=\"detail-value\">\n                {jsImplementation.isInPlace() ? 'Yes' : 'No'}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n  \n  /**\n   * Render data configuration controls\n   */\n  const renderDataControls = () => (\n    <div className=\"control-section\">\n      <h3>Data Configuration</h3>\n      <div className=\"control-grid\">\n        <div className=\"control-group\">\n          <label htmlFor=\"data-type\">Distribution Type:</label>\n          <select \n            id=\"data-type\"\n            value={selectedDataSet} \n            onChange={handleDataTypeChange}\n            disabled={isExecuting || isPlaying}\n            className=\"control-select\"\n          >\n            {Object.entries(dataTypeRegistry).map(([key, config]) => (\n              <option key={key} value={key}>{config.name}</option>\n            ))}\n          </select>\n          <div className=\"input-help\">\n            {dataTypeRegistry[selectedDataSet]?.description || ''}\n          </div>\n        </div>\n        \n        <div className=\"control-group\">\n          <label htmlFor=\"data-size\">Data Size:</label>\n          <select \n            id=\"data-size\"\n            value={dataSize} \n            onChange={handleDataSizeChange}\n            disabled={isExecuting || isPlaying}\n            className=\"control-select\"\n          >\n            <option value=\"10\">Small (10 elements)</option>\n            <option value=\"30\">Medium (30 elements)</option>\n            <option value=\"50\">Large (50 elements)</option>\n            <option value=\"100\">X-Large (100 elements)</option>\n            <option value=\"200\">XX-Large (200 elements)</option>\n          </select>\n        </div>\n      </div>\n      \n      <div className=\"button-group\">\n        <button \n          onClick={generateInitialData}\n          disabled={isExecuting || isPlaying}\n          className=\"control-button\"\n        >\n          Generate New Data\n        </button>\n        \n        <button \n          onClick={handleDetailedViewToggle}\n          className={`control-button ${detailedView ? 'active' : ''}`}\n        >\n          {detailedView ? 'Simple View' : 'Detailed View'}\n        </button>\n      </div>\n    </div>\n  );\n  \n  /**\n   * Render execution controls\n   */\n  const renderExecutionControls = () => (\n    <div className=\"control-section\">\n      <h3>Execution Controls</h3>\n      <button \n        onClick={runComparison}\n        disabled={isExecuting || isPlaying || !jsImplementation}\n        className=\"primary-button\"\n      >\n        {isExecuting ? 'Executing...' : 'Run Comparison'}\n      </button>\n      \n      {bridgeStatus !== 'connected' && (\n        <div className=\"status-message warning\">\n          <div className=\"status-icon\">â ï¸</div>\n          <div className=\"status-text\">\n            Python bridge not connected. \n            Results will be simulated for demonstration.\n          </div>\n        </div>\n      )}\n      \n      {executionError && (\n        <div className=\"status-message error\">\n          <div className=\"status-icon\">â</div>\n          <div className=\"status-text\">{executionError}</div>\n        </div>\n      )}\n      \n      {comparisonResults && (\n        <div className=\"playback-controls\">\n          <div className=\"step-navigation\">\n            <button \n              onClick={() => navigateToStep(0)}\n              disabled={currentStep === 0 || isPlaying}\n              aria-label=\"Go to first step\"\n            >\n              â®ï¸\n            </button>\n            <button \n              onClick={() => navigateToStep(currentStep - 1)}\n              disabled={currentStep === 0 || isPlaying}\n              aria-label=\"Previous step\"\n            >\n              âª\n            </button>\n            <button \n              onClick={togglePlayback}\n              aria-label={isPlaying ? \"Pause playback\" : \"Start playback\"}\n            >\n              {isPlaying ? 'â¸ï¸' : 'â¶ï¸'}\n            </button>\n            <button \n              onClick={() => navigateToStep(currentStep + 1)}\n              disabled={currentStep >= maxSteps - 1 || isPlaying}\n              aria-label=\"Next step\"\n            >\n              â©\n            </button>\n            <button \n              onClick={() => navigateToStep(maxSteps - 1)}\n              disabled={currentStep >= maxSteps - 1 || isPlaying}\n              aria-label=\"Go to last step\"\n            >\n              â­ï¸\n            </button>\n          </div>\n          \n          <div className=\"playback-speed\">\n            <label htmlFor=\"speed-control\">Speed:</label>\n            <input\n              id=\"speed-control\"\n              type=\"range\"\n              min=\"0.5\"\n              max=\"5\"\n              step=\"0.5\"\n              value={playbackSpeed}\n              onChange={handlePlaybackSpeedChange}\n              disabled={isPlaying}\n              aria-label=\"Playback speed\"\n            />\n            <span className=\"speed-value\">{playbackSpeed}x</span>\n          </div>\n          \n          <div className=\"step-progress\">\n            <span className=\"step-counter\">{currentStep} / {maxSteps}</span>\n            <progress value={currentStep} max={maxSteps || 1} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n  \n  /**\n   * Render the visualization containers\n   */\n  const renderVisualizations = () => (\n    <div className=\"visualization-container\">\n      <div className=\"visualization-section\">\n        <h3>JavaScript Implementation</h3>\n        <canvas\n          ref={jsCanvasRef}\n          width={width / 2 - 20}\n          height={300}\n          className=\"visualization-canvas\"\n        />\n        {jsHistory[currentStep] && (\n          <div className=\"step-message\">\n            {jsHistory[currentStep].message || 'Executing algorithm step'}\n          </div>\n        )}\n      </div>\n      \n      <div className=\"visualization-section\">\n        <h3>Python Implementation</h3>\n        <canvas\n          ref={pyCanvasRef}\n          width={width / 2 - 20}\n          height={300}\n          className=\"visualization-canvas\"\n        />\n        {pyHistory[currentStep] && (\n          <div className=\"step-message\">\n            {pyHistory[currentStep].message || 'Executing algorithm step'}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n  \n  /**\n   * Render heap visualization if appropriate\n   */\n  const renderHeapVisualization = () => {\n    if (visualizationType !== 'heap' || !heapVisualization) {\n      return null;\n    }\n    \n    return (\n      <div className=\"heap-visualization\">\n        <h3>Binary Heap Structure</h3>\n        <HeapVisualizer \n          heapStructure={heapVisualization} \n          width={width - 40} \n          height={300}\n        />\n      </div>\n    );\n  };\n  \n  /**\n   * Render comparison results\n   */\n  const renderComparisonResults = () => {\n    if (!comparisonResults) {\n      return null;\n    }\n    \n    const { javascript, python, comparison } = comparisonResults;\n    \n    return (\n      <div className=\"comparison-results\">\n        <h3>Performance Comparison</h3>\n        \n        <div className=\"results-grid\">\n          <div className=\"metric-section\">\n            <h4>JavaScript Performance</h4>\n            <div className=\"metric\">\n              <span className=\"metric-label\">Execution Time:</span>\n              <span className=\"metric-value\">{formatTime(javascript.executionTime)}</span>\n            </div>\n            <div className=\"metric\">\n              <span className=\"metric-label\">Comparisons:</span>\n              <span className=\"metric-value\">{formatNumber(javascript.metrics.comparisons)}</span>\n            </div>\n            <div className=\"metric\">\n              <span className=\"metric-label\">Swaps:</span>\n              <span className=\"metric-value\">{formatNumber(javascript.metrics.swaps)}</span>\n            </div>\n            <div className=\"metric\">\n              <span className=\"metric-label\">Memory Accesses:</span>\n              <span className=\"metric-value\">\n                {formatNumber(javascript.metrics.reads + javascript.metrics.writes)}\n              </span>\n            </div>\n          </div>\n          \n          <div className=\"metric-section\">\n            <h4>Python Performance</h4>\n            <div className=\"metric\">\n              <span className=\"metric-label\">Execution Time:</span>\n              <span className=\"metric-value\">{formatTime(python.executionTime)}</span>\n            </div>\n            <div className=\"metric\">\n              <span className=\"metric-label\">Comparisons:</span>\n              <span className=\"metric-value\">{formatNumber(python.metrics.comparisons)}</span>\n            </div>\n            <div className=\"metric\">\n              <span className=\"metric-label\">Swaps:</span>\n              <span className=\"metric-value\">{formatNumber(python.metrics.swaps)}</span>\n            </div>\n            <div className=\"metric\">\n              <span className=\"metric-label\">Memory Accesses:</span>\n              <span className=\"metric-value\">\n                {formatNumber(\n                  (python.metrics.reads || 0) + (python.metrics.writes || 0) ||\n                  python.metrics.memory_accesses\n                )}\n              </span>\n            </div>\n          </div>\n          \n          <div className=\"metric-section comparison-summary\">\n            <h4>Relative Performance</h4>\n            <div className={`metric ${getComparisonColor(comparison.speedRatio)}`}>\n              <span className=\"metric-label\">Execution Speed:</span>\n              <span className=\"metric-value\">\n                {comparison.speedRatio < 1 \n                  ? `JavaScript ${(1/comparison.speedRatio).toFixed(2)}Ã faster`\n                  : `Python ${comparison.speedRatio.toFixed(2)}Ã faster`}\n              </span>\n            </div>\n            <div className={`metric ${getComparisonColor(comparison.operationRatios?.comparisons)}`}>\n              <span className=\"metric-label\">Comparisons:</span>\n              <span className=\"metric-value\">\n                {comparison.operationRatios?.comparisons < 1 \n                  ? `JS uses ${(1/comparison.operationRatios.comparisons).toFixed(2)}Ã fewer`\n                  : `Python uses ${comparison.operationRatios.comparisons.toFixed(2)}Ã fewer`}\n              </span>\n            </div>\n            <div className=\"metric\">\n              <span className=\"metric-label\">Results Match:</span>\n              <span className={`metric-value ${comparison.accuracyMatch ? 'metric-positive' : 'metric-negative'}`}>\n                {comparison.accuracyMatch ? 'Yes' : 'No'}\n              </span>\n            </div>\n          </div>\n        </div>\n        \n        {detailedView && (\n          <div className=\"implementation-insights\">\n            <h4>Implementation Insights</h4>\n            <p>\n              {selectedAlgorithm === 'merge-sort' && (\n                <>\n                  Merge Sort's performance is primarily determined by its implementation of the merge operation, \n                  where JavaScript's array handling overhead can impact performance compared to Python's \n                  optimized array manipulation.\n                </>\n              )}\n              {selectedAlgorithm === 'quick-sort' && (\n                <>\n                  Quick Sort's performance significantly depends on pivot selection strategy and \n                  partitioning efficiency. Python's implementation tends to emphasize robustness \n                  while JavaScript implementations often prioritize speed, leading to observable differences.\n                </>\n              )}\n              {selectedAlgorithm === 'heap-sort' && (\n                <>\n                  Heap Sort's performance is strongly affected by its heap structure implementation \n                  and sift-down operation efficiency. The language's array access patterns and \n                  primitive operation costs create measurable differences in execution characteristics.\n                </>\n              )}\n              {selectedAlgorithm === 'bubble-sort' && (\n                <>\n                  Bubble Sort's simplicity makes it an excellent baseline for comparing language \n                  performance characteristics. Its heavy reliance on swapping operations highlights \n                  fundamental differences in array mutation operations between JavaScript and Python.\n                </>\n              )}\n            </p>\n            <p>\n              The comparative metrics reveal important implementation differences between JavaScript and Python:\n              execution environment optimization (JIT vs. interpreter), memory management strategies, \n              and specific algorithm optimizations prioritized in each language's standard libraries.\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  //========================================================================\n  // Main Component Render\n  //========================================================================\n  \n  return (\n    <div className=\"algorithm-comparison\">\n      <div className=\"comparison-controls\">\n        {renderAlgorithmControls()}\n        {renderDataControls()}\n        {renderExecutionControls()}\n      </div>\n      \n      {renderVisualizations()}\n      {renderHeapVisualization()}\n      {renderComparisonResults()}\n    </div>\n  );\n};\n\nexport default AlgorithmComparison;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}