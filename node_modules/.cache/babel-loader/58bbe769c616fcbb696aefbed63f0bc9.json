{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/SortingVisualizer.js\";\n/**\n * Advanced Sorting Algorithm Visualization Platform\n * \n * SortingVisualizer Component\n * \n * This component serves as the primary visualization interface for algorithm execution,\n * providing real-time visualization of sorting operations, performance metrics tracking,\n * and interactive execution controls. It implements a sophisticated integration between\n * algorithm instrumentation and visual representation, enabling deep educational insight\n * into algorithmic behavior and computational characteristics.\n * \n * The architecture follows a Model-View-Controller pattern:\n * - Algorithm implementations serve as the Model, maintaining execution state\n * - WebGL/Canvas renderers serve as the View, providing visual representation\n * - This component serves as the Controller, orchestrating interactions\n * \n * @module SortingVisualizer\n * @requires React\n * @requires WebGLRenderer\n * @requires ArrayRenderer\n * @requires generateDataSet\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { WebGLRenderer } from '../visualization/renderers/webgl-renderer';\nimport { ArrayRenderer } from '../visualization/renderers/array-renderer';\nimport { generateDataSet } from '../data/generators';\nimport HeapVisualizer from '../visualization/components/HeapVisualizer';\nimport './SortingVisualizer.css';\n\n/**\n * SortingVisualizer Component\n * \n * @param {Object} props - Component properties\n * @param {Object} props.algorithm - Algorithm instance to visualize\n * @param {Object} props.options - Visualization options\n * @param {number} props.width - Visualization width\n * @param {number} props.height - Visualization height\n * @returns {JSX.Element} Rendered component\n */\nconst SortingVisualizer = ({\n  algorithm,\n  options = {},\n  width = 800,\n  height = 400\n}) => {\n  var _algorithm$getComplex, _algorithm$getComplex2, _algorithm$getComplex3, _algorithm$getComplex4, _metrics$comparisons, _metrics$swaps, _ref;\n  // Canvas references for rendering\n  const canvasRef = useRef(null);\n  const fallbackCanvasRef = useRef(null);\n\n  // Visualization state\n  const [renderer, setRenderer] = useState(null);\n  const [data, setData] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [totalSteps, setTotalSteps] = useState(0);\n  const [playbackSpeed, setPlaybackSpeed] = useState(1);\n  const [metrics, setMetrics] = useState({});\n  const [selectedDataSet, setSelectedDataSet] = useState('random');\n  const [dataSize, setDataSize] = useState(50);\n  const [renderMode, setRenderMode] = useState('webgl');\n\n  // Additional visualization state\n  const [heapStructure, setHeapStructure] = useState(null);\n  const [showHeapView, setShowHeapView] = useState(false);\n  const [currentStepData, setCurrentStepData] = useState(null);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipContent, setTooltipContent] = useState('');\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // Animation references\n  const animationRef = useRef(null);\n  const stepHistoryRef = useRef([]);\n\n  /**\n   * Initialize renderer and data on component mount\n   */\n  useEffect(() => {\n    // Initialize data\n    generateInitialData();\n\n    // Initialize renderer\n    initializeRenderer();\n\n    // Window resize event handler\n    const handleResize = () => {\n      if (renderer) {\n        renderer.resize();\n      }\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup on unmount\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (renderer) {\n        renderer.dispose();\n      }\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []);\n\n  /**\n   * Update renderer when options or render mode changes\n   */\n  useEffect(() => {\n    if (renderer) {\n      renderer.setOptions({\n        colorScheme: options.colorScheme || 'spectrum',\n        barWidth: options.barWidth || 4,\n        spacing: options.spacing || 1,\n        ...options\n      });\n    }\n  }, [options, renderer]);\n\n  /**\n   * Update data when algorithm execution completes\n   */\n  useEffect(() => {\n    if (algorithm && data.length > 0) {\n      executeAlgorithm();\n    }\n  }, [algorithm, data.length, selectedDataSet, dataSize]);\n\n  /**\n   * Detect if algorithm is Heap Sort to enable heap visualization\n   */\n  useEffect(() => {\n    if (algorithm) {\n      const isHeapSort = algorithm.name === 'Heap Sort';\n      const shouldShowHeap = isHeapSort && algorithm.options && algorithm.options.visualizeHeap;\n      setShowHeapView(shouldShowHeap);\n    }\n  }, [algorithm]);\n\n  /**\n   * Update heap structure when step changes\n   */\n  useEffect(() => {\n    if (currentStepData && currentStepData.heapStructure) {\n      setHeapStructure(currentStepData.heapStructure);\n    } else if (currentStepData && currentStepData.heap_structure) {\n      // Handle Python-style property naming\n      setHeapStructure(currentStepData.heap_structure);\n    } else if (showHeapView && currentStep === 0) {\n      // Reset heap view when returning to first step\n      setHeapStructure(null);\n    }\n  }, [currentStepData, showHeapView, currentStep]);\n\n  /**\n   * Initialize the appropriate renderer based on render mode\n   */\n  const initializeRenderer = () => {\n    const canvas = canvasRef.current;\n    const fallbackCanvas = fallbackCanvasRef.current;\n    if (!canvas || !fallbackCanvas) return;\n    try {\n      let newRenderer;\n      if (renderMode === 'webgl') {\n        try {\n          // Initialize WebGL renderer\n          newRenderer = new WebGLRenderer(canvas, {\n            ...options,\n            maxElements: 100000,\n            colorScheme: options.colorScheme || 'spectrum',\n            barWidth: options.barWidth || 4,\n            spacing: options.spacing || 1\n          });\n\n          // Hide fallback canvas\n          canvas.style.display = 'block';\n          fallbackCanvas.style.display = 'none';\n        } catch (e) {\n          console.warn('WebGL renderer initialization failed, falling back to Canvas renderer', e);\n          setRenderMode('canvas');\n          throw e; // Force fallback\n        }\n      }\n      if (renderMode === 'canvas') {\n        // Initialize Canvas renderer as fallback\n        newRenderer = new ArrayRenderer(fallbackCanvas, {\n          ...options,\n          maxElements: 10000,\n          colorScheme: options.colorScheme || 'spectrum',\n          barWidth: options.barWidth || 4,\n          spacing: options.spacing || 1\n        });\n\n        // Hide WebGL canvas\n        canvas.style.display = 'none';\n        fallbackCanvas.style.display = 'block';\n      }\n      setRenderer(newRenderer);\n\n      // Update data if we have it\n      if (data.length > 0) {\n        newRenderer.setData(data);\n      }\n    } catch (e) {\n      console.error('Failed to initialize renderer', e);\n    }\n  };\n\n  /**\n   * Generate initial data based on selected parameters\n   */\n  const generateInitialData = () => {\n    const newData = generateDataSet(selectedDataSet, dataSize, {\n      min: 1,\n      max: 100,\n      ...options\n    });\n    setData(newData);\n    if (renderer) {\n      renderer.setData(newData);\n    }\n  };\n\n  /**\n   * Execute the current algorithm on the data\n   */\n  const executeAlgorithm = async () => {\n    if (!algorithm || data.length === 0) return;\n\n    // Reset visualization state\n    setIsPlaying(false);\n    setIsPaused(false);\n    setCurrentStep(0);\n    stepHistoryRef.current = [];\n    setHeapStructure(null);\n\n    // Clone the data to avoid mutation issues\n    const dataToSort = [...data];\n    try {\n      // Execute algorithm with instrumentation\n      const startTime = performance.now();\n\n      // Use onStep callback to collect execution history\n      const result = await algorithm.execute(dataToSort, {\n        onStep: step => {\n          stepHistoryRef.current.push(step);\n        }\n      });\n      const endTime = performance.now();\n\n      // Update state with results\n      setMetrics({\n        ...algorithm.getMetrics(),\n        executionTime: endTime - startTime\n      });\n      setTotalSteps(stepHistoryRef.current.length);\n\n      // Update renderer with sorted data\n      if (renderer) {\n        renderer.setData(result);\n      }\n    } catch (error) {\n      console.error('Algorithm execution failed', error);\n    }\n  };\n\n  /**\n   * Handle step navigation (forward/backward)\n   * @param {number} step - Step index to navigate to\n   */\n  const navigateStep = step => {\n    if (step < 0 || step >= stepHistoryRef.current.length) return;\n    setCurrentStep(step);\n    const stepData = stepHistoryRef.current[step];\n    setCurrentStepData(stepData);\n    if (renderer && stepData) {\n      // Update renderer with current step data\n      renderer.setData(stepData.array, false);\n\n      // Highlight relevant elements\n      if (stepData.type === 'comparison' && stepData.indices) {\n        renderer.markComparing(stepData.indices);\n      } else if (stepData.type === 'swap' && stepData.indices) {\n        renderer.highlight(stepData.indices);\n      } else if (stepData.type === 'sorted' && stepData.indices) {\n        renderer.markSorted(stepData.indices);\n      } else if (stepData.type === 'heapify' && stepData.node !== undefined) {\n        // For heap sort, highlight the current node being heapified\n        renderer.highlight([stepData.node]);\n\n        // Also highlight children if available\n        if (stepData.children && stepData.children.length) {\n          renderer.markComparing(stepData.children);\n        }\n      } else if (stepData.type === 'heapify-swap' && stepData.indices) {\n        renderer.highlight(stepData.indices);\n      }\n    }\n  };\n\n  /**\n   * Start or stop animation playback\n   */\n  const togglePlayback = () => {\n    if (isPaused) {\n      // Resume paused animation\n      setIsPaused(false);\n      setIsPlaying(true);\n      runAnimation();\n    } else if (isPlaying) {\n      // Pause running animation\n      setIsPaused(true);\n      setIsPlaying(false);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    } else {\n      // Start new animation\n      setIsPlaying(true);\n      runAnimation();\n    }\n  };\n\n  /**\n   * Run the animation loop for algorithm visualization\n   */\n  const runAnimation = () => {\n    let lastTimestamp = performance.now();\n    const animate = timestamp => {\n      if (!isPlaying || isPaused) return;\n\n      // Control animation speed\n      const elapsed = timestamp - lastTimestamp;\n      const frameDuration = 1000 / (playbackSpeed * 10);\n      if (elapsed > frameDuration) {\n        // Time to advance step\n        const nextStep = currentStep + 1;\n        if (nextStep >= totalSteps) {\n          // Reached the end, stop playback\n          setIsPlaying(false);\n          return;\n        }\n        navigateStep(nextStep);\n        lastTimestamp = timestamp;\n      }\n      animationRef.current = requestAnimationFrame(animate);\n    };\n    animationRef.current = requestAnimationFrame(animate);\n  };\n\n  /**\n   * Reset visualization to initial state\n   */\n  const resetVisualization = () => {\n    setIsPlaying(false);\n    setIsPaused(false);\n    navigateStep(0);\n  };\n\n  /**\n   * Skip to the end of the visualization\n   */\n  const skipToEnd = () => {\n    setIsPlaying(false);\n    setIsPaused(false);\n    navigateStep(totalSteps - 1);\n  };\n\n  /**\n   * Change the data set type\n   */\n  const handleDataSetChange = event => {\n    setSelectedDataSet(event.target.value);\n  };\n\n  /**\n   * Change the data set size\n   */\n  const handleSizeChange = event => {\n    setDataSize(parseInt(event.target.value, 10));\n  };\n\n  /**\n   * Regenerate data with current settings\n   */\n  const handleRegenerateData = () => {\n    generateInitialData();\n  };\n\n  /**\n   * Change the render mode\n   */\n  const handleRenderModeChange = event => {\n    setRenderMode(event.target.value);\n\n    // We need to initialize a new renderer\n    setTimeout(() => {\n      initializeRenderer();\n    }, 0);\n  };\n\n  /**\n   * Format execution time for display\n   */\n  const formatExecutionTime = ms => {\n    if (ms < 1) return `${(ms * 1000).toFixed(2)} μs`;\n    if (ms < 1000) return `${ms.toFixed(2)} ms`;\n    return `${(ms / 1000).toFixed(2)} s`;\n  };\n\n  /**\n   * Show tooltip with operation details\n   */\n  const showOperationTooltip = (content, x, y) => {\n    setTooltipContent(content);\n    setTooltipPosition({\n      x,\n      y\n    });\n    setShowTooltip(true);\n  };\n\n  /**\n   * Hide operation tooltip\n   */\n  const hideOperationTooltip = () => {\n    setShowTooltip(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sorting-visualizer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"visualization-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: height,\n    className: \"visualization-canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: fallbackCanvasRef,\n    width: width,\n    height: height,\n    className: \"visualization-canvas fallback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }\n  }), algorithm && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"algorithm-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 13\n    }\n  }, algorithm.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 15\n    }\n  }, \"Time: \", ((_algorithm$getComplex = algorithm.getComplexity()) === null || _algorithm$getComplex === void 0 ? void 0 : (_algorithm$getComplex2 = _algorithm$getComplex.time) === null || _algorithm$getComplex2 === void 0 ? void 0 : _algorithm$getComplex2.average) || 'O(?)'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 15\n    }\n  }, \"Space: \", ((_algorithm$getComplex3 = algorithm.getComplexity()) === null || _algorithm$getComplex3 === void 0 ? void 0 : (_algorithm$getComplex4 = _algorithm$getComplex3.space) === null || _algorithm$getComplex4 === void 0 ? void 0 : _algorithm$getComplex4.average) || 'O(?)'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 15\n    }\n  }, \"Stable: \", algorithm.isStable() ? 'Yes' : 'No'))), showTooltip && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"operation-tooltip\",\n    style: {\n      left: tooltipPosition.x,\n      top: tooltipPosition.y\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 11\n    }\n  }, tooltipContent), showHeapView && heapStructure && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heap-view-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 13\n    }\n  }, \"Binary Heap Structure\"), /*#__PURE__*/React.createElement(HeapVisualizer, {\n    heapStructure: heapStructure,\n    width: width,\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playback-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetVisualization,\n    disabled: currentStep === 0 || isPlaying,\n    title: \"Go to first step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 11\n    }\n  }, \"\\u23EE\\uFE0F First\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateStep(currentStep - 1),\n    disabled: currentStep === 0 || isPlaying,\n    title: \"Go to previous step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 11\n    }\n  }, \"\\u23EA Prev\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: togglePlayback,\n    className: isPaused ? 'resume-button' : isPlaying ? 'pause-button' : 'play-button',\n    title: isPaused ? 'Resume playback' : isPlaying ? 'Pause playback' : 'Start playback',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 11\n    }\n  }, isPaused ? '▶️ Resume' : isPlaying ? '⏸️ Pause' : '▶️ Play'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateStep(currentStep + 1),\n    disabled: currentStep >= totalSteps - 1 || isPlaying,\n    title: \"Go to next step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 11\n    }\n  }, \"\\u23E9 Next\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: skipToEnd,\n    disabled: currentStep >= totalSteps - 1 || isPlaying,\n    title: \"Go to last step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 11\n    }\n  }, \"\\u23ED\\uFE0F Last\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"speed-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 11\n    }\n  }, \"Speed: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0.1\",\n    max: \"10\",\n    step: \"0.1\",\n    value: playbackSpeed,\n    onChange: e => setPlaybackSpeed(parseFloat(e.target.value)),\n    disabled: isPlaying && !isPaused,\n    title: \"Adjust playback speed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 11\n    }\n  }, playbackSpeed.toFixed(1), \"x\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-indicator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-counter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 11\n    }\n  }, \"Step: \", currentStep, \" / \", totalSteps), /*#__PURE__*/React.createElement(\"progress\", {\n    value: currentStep,\n    max: totalSteps || 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 13\n    }\n  }, \"Data Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedDataSet,\n    onChange: handleDataSetChange,\n    disabled: isPlaying,\n    title: \"Select data distribution pattern\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"random\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 15\n    }\n  }, \"Random\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"nearly-sorted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 15\n    }\n  }, \"Nearly Sorted\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"reversed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 15\n    }\n  }, \"Reversed\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"few-unique\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 15\n    }\n  }, \"Few Unique Values\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sorted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 15\n    }\n  }, \"Already Sorted\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sawtooth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 15\n    }\n  }, \"Sawtooth Pattern\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 13\n    }\n  }, \"Size:\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: dataSize,\n    onChange: handleSizeChange,\n    disabled: isPlaying,\n    title: \"Select array size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 15\n    }\n  }, \"Tiny (10)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 15\n    }\n  }, \"Small (30)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 15\n    }\n  }, \"Medium (50)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 15\n    }\n  }, \"Large (100)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"250\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 15\n    }\n  }, \"X-Large (250)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 15\n    }\n  }, \"Huge (1,000)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 15\n    }\n  }, \"Extreme (10,000)\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 13\n    }\n  }, \"Renderer:\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: renderMode,\n    onChange: handleRenderModeChange,\n    disabled: isPlaying,\n    title: \"Select rendering technology\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"webgl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 15\n    }\n  }, \"WebGL (Fast)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 15\n    }\n  }, \"Canvas (Compatible)\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleRegenerateData,\n    disabled: isPlaying,\n    title: \"Generate new data with current settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 11\n    }\n  }, \"Regenerate Data\")), metrics && Object.keys(metrics).length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metrics-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 13\n    }\n  }, \"Performance Metrics\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metrics-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 17\n    }\n  }, \"Comparisons:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 17\n    }\n  }, (_metrics$comparisons = metrics.comparisons) === null || _metrics$comparisons === void 0 ? void 0 : _metrics$comparisons.toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 17\n    }\n  }, \"Swaps:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 17\n    }\n  }, (_metrics$swaps = metrics.swaps) === null || _metrics$swaps === void 0 ? void 0 : _metrics$swaps.toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 17\n    }\n  }, \"Array Accesses:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 17\n    }\n  }, (_ref = metrics.reads + metrics.writes) === null || _ref === void 0 ? void 0 : _ref.toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 17\n    }\n  }, \"Execution Time:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 17\n    }\n  }, formatExecutionTime(metrics.executionTime))))), currentStepData && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 13\n    }\n  }, \"Current Step\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 13\n    }\n  }, currentStepData.message || 'No message for this step'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 15\n    }\n  }, \"Type: \", currentStepData.type || 'unknown'), currentStepData.indices && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 17\n    }\n  }, \"Indices: \", currentStepData.indices.join(', '))))));\n};\nexport default SortingVisualizer;","map":{"version":3,"names":["React","useState","useEffect","useRef","WebGLRenderer","ArrayRenderer","generateDataSet","HeapVisualizer","SortingVisualizer","algorithm","options","width","height","_algorithm$getComplex","_algorithm$getComplex2","_algorithm$getComplex3","_algorithm$getComplex4","_metrics$comparisons","_metrics$swaps","_ref","canvasRef","fallbackCanvasRef","renderer","setRenderer","data","setData","isPlaying","setIsPlaying","isPaused","setIsPaused","currentStep","setCurrentStep","totalSteps","setTotalSteps","playbackSpeed","setPlaybackSpeed","metrics","setMetrics","selectedDataSet","setSelectedDataSet","dataSize","setDataSize","renderMode","setRenderMode","heapStructure","setHeapStructure","showHeapView","setShowHeapView","currentStepData","setCurrentStepData","showTooltip","setShowTooltip","tooltipContent","setTooltipContent","tooltipPosition","setTooltipPosition","x","y","animationRef","stepHistoryRef","generateInitialData","initializeRenderer","handleResize","resize","window","addEventListener","removeEventListener","dispose","current","cancelAnimationFrame","setOptions","colorScheme","barWidth","spacing","length","executeAlgorithm","isHeapSort","name","shouldShowHeap","visualizeHeap","heap_structure","canvas","fallbackCanvas","newRenderer","maxElements","style","display","e","console","warn","error","newData","min","max","dataToSort","startTime","performance","now","result","execute","onStep","step","push","endTime","getMetrics","executionTime","navigateStep","stepData","array","type","indices","markComparing","highlight","markSorted","node","undefined","children","togglePlayback","runAnimation","lastTimestamp","animate","timestamp","elapsed","frameDuration","nextStep","requestAnimationFrame","resetVisualization","skipToEnd","handleDataSetChange","event","target","value","handleSizeChange","parseInt","handleRegenerateData","handleRenderModeChange","setTimeout","formatExecutionTime","ms","toFixed","showOperationTooltip","content","hideOperationTooltip","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","getComplexity","time","average","space","isStable","left","top","onClick","disabled","title","onChange","parseFloat","Object","keys","comparisons","toLocaleString","swaps","reads","writes","message","join"],"sources":["/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/SortingVisualizer.js"],"sourcesContent":["/**\n * Advanced Sorting Algorithm Visualization Platform\n * \n * SortingVisualizer Component\n * \n * This component serves as the primary visualization interface for algorithm execution,\n * providing real-time visualization of sorting operations, performance metrics tracking,\n * and interactive execution controls. It implements a sophisticated integration between\n * algorithm instrumentation and visual representation, enabling deep educational insight\n * into algorithmic behavior and computational characteristics.\n * \n * The architecture follows a Model-View-Controller pattern:\n * - Algorithm implementations serve as the Model, maintaining execution state\n * - WebGL/Canvas renderers serve as the View, providing visual representation\n * - This component serves as the Controller, orchestrating interactions\n * \n * @module SortingVisualizer\n * @requires React\n * @requires WebGLRenderer\n * @requires ArrayRenderer\n * @requires generateDataSet\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { WebGLRenderer } from '../visualization/renderers/webgl-renderer';\nimport { ArrayRenderer } from '../visualization/renderers/array-renderer';\nimport { generateDataSet } from '../data/generators';\nimport HeapVisualizer from '../visualization/components/HeapVisualizer';\nimport './SortingVisualizer.css';\n\n/**\n * SortingVisualizer Component\n * \n * @param {Object} props - Component properties\n * @param {Object} props.algorithm - Algorithm instance to visualize\n * @param {Object} props.options - Visualization options\n * @param {number} props.width - Visualization width\n * @param {number} props.height - Visualization height\n * @returns {JSX.Element} Rendered component\n */\nconst SortingVisualizer = ({ \n  algorithm, \n  options = {},\n  width = 800,\n  height = 400\n}) => {\n  // Canvas references for rendering\n  const canvasRef = useRef(null);\n  const fallbackCanvasRef = useRef(null);\n  \n  // Visualization state\n  const [renderer, setRenderer] = useState(null);\n  const [data, setData] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [totalSteps, setTotalSteps] = useState(0);\n  const [playbackSpeed, setPlaybackSpeed] = useState(1);\n  const [metrics, setMetrics] = useState({});\n  const [selectedDataSet, setSelectedDataSet] = useState('random');\n  const [dataSize, setDataSize] = useState(50);\n  const [renderMode, setRenderMode] = useState('webgl');\n  \n  // Additional visualization state\n  const [heapStructure, setHeapStructure] = useState(null);\n  const [showHeapView, setShowHeapView] = useState(false);\n  const [currentStepData, setCurrentStepData] = useState(null);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipContent, setTooltipContent] = useState('');\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n  \n  // Animation references\n  const animationRef = useRef(null);\n  const stepHistoryRef = useRef([]);\n  \n  /**\n   * Initialize renderer and data on component mount\n   */\n  useEffect(() => {\n    // Initialize data\n    generateInitialData();\n    \n    // Initialize renderer\n    initializeRenderer();\n    \n    // Window resize event handler\n    const handleResize = () => {\n      if (renderer) {\n        renderer.resize();\n      }\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    // Cleanup on unmount\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (renderer) {\n        renderer.dispose();\n      }\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []);\n  \n  /**\n   * Update renderer when options or render mode changes\n   */\n  useEffect(() => {\n    if (renderer) {\n      renderer.setOptions({\n        colorScheme: options.colorScheme || 'spectrum',\n        barWidth: options.barWidth || 4,\n        spacing: options.spacing || 1,\n        ...options\n      });\n    }\n  }, [options, renderer]);\n  \n  /**\n   * Update data when algorithm execution completes\n   */\n  useEffect(() => {\n    if (algorithm && data.length > 0) {\n      executeAlgorithm();\n    }\n  }, [algorithm, data.length, selectedDataSet, dataSize]);\n  \n  /**\n   * Detect if algorithm is Heap Sort to enable heap visualization\n   */\n  useEffect(() => {\n    if (algorithm) {\n      const isHeapSort = algorithm.name === 'Heap Sort';\n      const shouldShowHeap = isHeapSort && algorithm.options && algorithm.options.visualizeHeap;\n      setShowHeapView(shouldShowHeap);\n    }\n  }, [algorithm]);\n  \n  /**\n   * Update heap structure when step changes\n   */\n  useEffect(() => {\n    if (currentStepData && currentStepData.heapStructure) {\n      setHeapStructure(currentStepData.heapStructure);\n    } else if (currentStepData && currentStepData.heap_structure) {\n      // Handle Python-style property naming\n      setHeapStructure(currentStepData.heap_structure);\n    } else if (showHeapView && currentStep === 0) {\n      // Reset heap view when returning to first step\n      setHeapStructure(null);\n    }\n  }, [currentStepData, showHeapView, currentStep]);\n  \n  /**\n   * Initialize the appropriate renderer based on render mode\n   */\n  const initializeRenderer = () => {\n    const canvas = canvasRef.current;\n    const fallbackCanvas = fallbackCanvasRef.current;\n    \n    if (!canvas || !fallbackCanvas) return;\n    \n    try {\n      let newRenderer;\n      \n      if (renderMode === 'webgl') {\n        try {\n          // Initialize WebGL renderer\n          newRenderer = new WebGLRenderer(canvas, {\n            ...options,\n            maxElements: 100000,\n            colorScheme: options.colorScheme || 'spectrum',\n            barWidth: options.barWidth || 4,\n            spacing: options.spacing || 1\n          });\n          \n          // Hide fallback canvas\n          canvas.style.display = 'block';\n          fallbackCanvas.style.display = 'none';\n        } catch (e) {\n          console.warn('WebGL renderer initialization failed, falling back to Canvas renderer', e);\n          setRenderMode('canvas');\n          throw e; // Force fallback\n        }\n      }\n      \n      if (renderMode === 'canvas') {\n        // Initialize Canvas renderer as fallback\n        newRenderer = new ArrayRenderer(fallbackCanvas, {\n          ...options,\n          maxElements: 10000,\n          colorScheme: options.colorScheme || 'spectrum',\n          barWidth: options.barWidth || 4,\n          spacing: options.spacing || 1\n        });\n        \n        // Hide WebGL canvas\n        canvas.style.display = 'none';\n        fallbackCanvas.style.display = 'block';\n      }\n      \n      setRenderer(newRenderer);\n      \n      // Update data if we have it\n      if (data.length > 0) {\n        newRenderer.setData(data);\n      }\n    } catch (e) {\n      console.error('Failed to initialize renderer', e);\n    }\n  };\n  \n  /**\n   * Generate initial data based on selected parameters\n   */\n  const generateInitialData = () => {\n    const newData = generateDataSet(selectedDataSet, dataSize, {\n      min: 1,\n      max: 100,\n      ...options\n    });\n    \n    setData(newData);\n    \n    if (renderer) {\n      renderer.setData(newData);\n    }\n  };\n  \n  /**\n   * Execute the current algorithm on the data\n   */\n  const executeAlgorithm = async () => {\n    if (!algorithm || data.length === 0) return;\n    \n    // Reset visualization state\n    setIsPlaying(false);\n    setIsPaused(false);\n    setCurrentStep(0);\n    stepHistoryRef.current = [];\n    setHeapStructure(null);\n    \n    // Clone the data to avoid mutation issues\n    const dataToSort = [...data];\n    \n    try {\n      // Execute algorithm with instrumentation\n      const startTime = performance.now();\n      \n      // Use onStep callback to collect execution history\n      const result = await algorithm.execute(dataToSort, {\n        onStep: (step) => {\n          stepHistoryRef.current.push(step);\n        }\n      });\n      \n      const endTime = performance.now();\n      \n      // Update state with results\n      setMetrics({\n        ...algorithm.getMetrics(),\n        executionTime: endTime - startTime\n      });\n      \n      setTotalSteps(stepHistoryRef.current.length);\n      \n      // Update renderer with sorted data\n      if (renderer) {\n        renderer.setData(result);\n      }\n      \n    } catch (error) {\n      console.error('Algorithm execution failed', error);\n    }\n  };\n  \n  /**\n   * Handle step navigation (forward/backward)\n   * @param {number} step - Step index to navigate to\n   */\n  const navigateStep = (step) => {\n    if (step < 0 || step >= stepHistoryRef.current.length) return;\n    \n    setCurrentStep(step);\n    \n    const stepData = stepHistoryRef.current[step];\n    setCurrentStepData(stepData);\n    \n    if (renderer && stepData) {\n      // Update renderer with current step data\n      renderer.setData(stepData.array, false);\n      \n      // Highlight relevant elements\n      if (stepData.type === 'comparison' && stepData.indices) {\n        renderer.markComparing(stepData.indices);\n      } else if (stepData.type === 'swap' && stepData.indices) {\n        renderer.highlight(stepData.indices);\n      } else if (stepData.type === 'sorted' && stepData.indices) {\n        renderer.markSorted(stepData.indices);\n      } else if (stepData.type === 'heapify' && stepData.node !== undefined) {\n        // For heap sort, highlight the current node being heapified\n        renderer.highlight([stepData.node]);\n        \n        // Also highlight children if available\n        if (stepData.children && stepData.children.length) {\n          renderer.markComparing(stepData.children);\n        }\n      } else if (stepData.type === 'heapify-swap' && stepData.indices) {\n        renderer.highlight(stepData.indices);\n      }\n    }\n  };\n  \n  /**\n   * Start or stop animation playback\n   */\n  const togglePlayback = () => {\n    if (isPaused) {\n      // Resume paused animation\n      setIsPaused(false);\n      setIsPlaying(true);\n      runAnimation();\n    } else if (isPlaying) {\n      // Pause running animation\n      setIsPaused(true);\n      setIsPlaying(false);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    } else {\n      // Start new animation\n      setIsPlaying(true);\n      runAnimation();\n    }\n  };\n  \n  /**\n   * Run the animation loop for algorithm visualization\n   */\n  const runAnimation = () => {\n    let lastTimestamp = performance.now();\n    \n    const animate = (timestamp) => {\n      if (!isPlaying || isPaused) return;\n      \n      // Control animation speed\n      const elapsed = timestamp - lastTimestamp;\n      const frameDuration = 1000 / (playbackSpeed * 10);\n      \n      if (elapsed > frameDuration) {\n        // Time to advance step\n        const nextStep = currentStep + 1;\n        \n        if (nextStep >= totalSteps) {\n          // Reached the end, stop playback\n          setIsPlaying(false);\n          return;\n        }\n        \n        navigateStep(nextStep);\n        lastTimestamp = timestamp;\n      }\n      \n      animationRef.current = requestAnimationFrame(animate);\n    };\n    \n    animationRef.current = requestAnimationFrame(animate);\n  };\n  \n  /**\n   * Reset visualization to initial state\n   */\n  const resetVisualization = () => {\n    setIsPlaying(false);\n    setIsPaused(false);\n    navigateStep(0);\n  };\n  \n  /**\n   * Skip to the end of the visualization\n   */\n  const skipToEnd = () => {\n    setIsPlaying(false);\n    setIsPaused(false);\n    navigateStep(totalSteps - 1);\n  };\n  \n  /**\n   * Change the data set type\n   */\n  const handleDataSetChange = (event) => {\n    setSelectedDataSet(event.target.value);\n  };\n  \n  /**\n   * Change the data set size\n   */\n  const handleSizeChange = (event) => {\n    setDataSize(parseInt(event.target.value, 10));\n  };\n  \n  /**\n   * Regenerate data with current settings\n   */\n  const handleRegenerateData = () => {\n    generateInitialData();\n  };\n  \n  /**\n   * Change the render mode\n   */\n  const handleRenderModeChange = (event) => {\n    setRenderMode(event.target.value);\n    \n    // We need to initialize a new renderer\n    setTimeout(() => {\n      initializeRenderer();\n    }, 0);\n  };\n  \n  /**\n   * Format execution time for display\n   */\n  const formatExecutionTime = (ms) => {\n    if (ms < 1) return `${(ms * 1000).toFixed(2)} μs`;\n    if (ms < 1000) return `${ms.toFixed(2)} ms`;\n    return `${(ms / 1000).toFixed(2)} s`;\n  };\n  \n  /**\n   * Show tooltip with operation details\n   */\n  const showOperationTooltip = (content, x, y) => {\n    setTooltipContent(content);\n    setTooltipPosition({ x, y });\n    setShowTooltip(true);\n  };\n  \n  /**\n   * Hide operation tooltip\n   */\n  const hideOperationTooltip = () => {\n    setShowTooltip(false);\n  };\n\n  return (\n    <div className=\"sorting-visualizer\">\n      <div className=\"visualization-container\">\n        <canvas \n          ref={canvasRef}\n          width={width}\n          height={height}\n          className=\"visualization-canvas\"\n        />\n        <canvas\n          ref={fallbackCanvasRef}\n          width={width}\n          height={height}\n          className=\"visualization-canvas fallback\"\n        />\n        \n        {algorithm && (\n          <div className=\"algorithm-info\">\n            <h3>{algorithm.name}</h3>\n            <div className=\"complexity-info\">\n              <div>Time: {algorithm.getComplexity()?.time?.average || 'O(?)'}</div>\n              <div>Space: {algorithm.getComplexity()?.space?.average || 'O(?)'}</div>\n              <div>Stable: {algorithm.isStable() ? 'Yes' : 'No'}</div>\n            </div>\n          </div>\n        )}\n        \n        {/* Render tooltip if visible */}\n        {showTooltip && (\n          <div \n            className=\"operation-tooltip\" \n            style={{ left: tooltipPosition.x, top: tooltipPosition.y }}\n          >\n            {tooltipContent}\n          </div>\n        )}\n        \n        {/* Heap visualization when appropriate */}\n        {showHeapView && heapStructure && (\n          <div className=\"heap-view-container\">\n            <h4>Binary Heap Structure</h4>\n            <HeapVisualizer \n              heapStructure={heapStructure} \n              width={width} \n              height={300} \n            />\n          </div>\n        )}\n      </div>\n      \n      <div className=\"controls-container\">\n        <div className=\"playback-controls\">\n          <button \n            onClick={resetVisualization}\n            disabled={currentStep === 0 || isPlaying}\n            title=\"Go to first step\"\n          >\n            ⏮️ First\n          </button>\n          <button \n            onClick={() => navigateStep(currentStep - 1)}\n            disabled={currentStep === 0 || isPlaying}\n            title=\"Go to previous step\"\n          >\n            ⏪ Prev\n          </button>\n          <button \n            onClick={togglePlayback}\n            className={isPaused ? 'resume-button' : isPlaying ? 'pause-button' : 'play-button'}\n            title={isPaused ? 'Resume playback' : isPlaying ? 'Pause playback' : 'Start playback'}\n          >\n            {isPaused ? '▶️ Resume' : isPlaying ? '⏸️ Pause' : '▶️ Play'}\n          </button>\n          <button \n            onClick={() => navigateStep(currentStep + 1)}\n            disabled={currentStep >= totalSteps - 1 || isPlaying}\n            title=\"Go to next step\"\n          >\n            ⏩ Next\n          </button>\n          <button \n            onClick={skipToEnd}\n            disabled={currentStep >= totalSteps - 1 || isPlaying}\n            title=\"Go to last step\"\n          >\n            ⏭️ Last\n          </button>\n        </div>\n        \n        <div className=\"speed-control\">\n          <label>Speed: </label>\n          <input\n            type=\"range\"\n            min=\"0.1\"\n            max=\"10\"\n            step=\"0.1\"\n            value={playbackSpeed}\n            onChange={(e) => setPlaybackSpeed(parseFloat(e.target.value))}\n            disabled={isPlaying && !isPaused}\n            title=\"Adjust playback speed\"\n          />\n          <span>{playbackSpeed.toFixed(1)}x</span>\n        </div>\n        \n        <div className=\"progress-indicator\">\n          <div className=\"step-counter\">\n            Step: {currentStep} / {totalSteps}\n          </div>\n          <progress value={currentStep} max={totalSteps || 100} />\n        </div>\n        \n        <div className=\"data-controls\">\n          <div className=\"control-group\">\n            <label>Data Type:</label>\n            <select \n              value={selectedDataSet} \n              onChange={handleDataSetChange} \n              disabled={isPlaying}\n              title=\"Select data distribution pattern\"\n            >\n              <option value=\"random\">Random</option>\n              <option value=\"nearly-sorted\">Nearly Sorted</option>\n              <option value=\"reversed\">Reversed</option>\n              <option value=\"few-unique\">Few Unique Values</option>\n              <option value=\"sorted\">Already Sorted</option>\n              <option value=\"sawtooth\">Sawtooth Pattern</option>\n            </select>\n          </div>\n          \n          <div className=\"control-group\">\n            <label>Size:</label>\n            <select \n              value={dataSize} \n              onChange={handleSizeChange} \n              disabled={isPlaying}\n              title=\"Select array size\"\n            >\n              <option value=\"10\">Tiny (10)</option>\n              <option value=\"30\">Small (30)</option>\n              <option value=\"50\">Medium (50)</option>\n              <option value=\"100\">Large (100)</option>\n              <option value=\"250\">X-Large (250)</option>\n              <option value=\"1000\">Huge (1,000)</option>\n              <option value=\"10000\">Extreme (10,000)</option>\n            </select>\n          </div>\n          \n          <div className=\"control-group\">\n            <label>Renderer:</label>\n            <select \n              value={renderMode} \n              onChange={handleRenderModeChange} \n              disabled={isPlaying}\n              title=\"Select rendering technology\"\n            >\n              <option value=\"webgl\">WebGL (Fast)</option>\n              <option value=\"canvas\">Canvas (Compatible)</option>\n            </select>\n          </div>\n          \n          <button \n            onClick={handleRegenerateData} \n            disabled={isPlaying}\n            title=\"Generate new data with current settings\"\n          >\n            Regenerate Data\n          </button>\n        </div>\n        \n        {metrics && Object.keys(metrics).length > 0 && (\n          <div className=\"metrics-panel\">\n            <h4>Performance Metrics</h4>\n            <div className=\"metrics-grid\">\n              <div className=\"metric\">\n                <label>Comparisons:</label>\n                <span>{metrics.comparisons?.toLocaleString()}</span>\n              </div>\n              <div className=\"metric\">\n                <label>Swaps:</label>\n                <span>{metrics.swaps?.toLocaleString()}</span>\n              </div>\n              <div className=\"metric\">\n                <label>Array Accesses:</label>\n                <span>{(metrics.reads + metrics.writes)?.toLocaleString()}</span>\n              </div>\n              <div className=\"metric\">\n                <label>Execution Time:</label>\n                <span>{formatExecutionTime(metrics.executionTime)}</span>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {currentStepData && (\n          <div className=\"step-info\">\n            <h4>Current Step</h4>\n            <div className=\"step-message\">{currentStepData.message || 'No message for this step'}</div>\n            <div className=\"step-details\">\n              <div>Type: {currentStepData.type || 'unknown'}</div>\n              {currentStepData.indices && (\n                <div>Indices: {currentStepData.indices.join(', ')}</div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SortingVisualizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}