{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/AlgorithmComparison.js\";\n/**\n * Algorithm Comparison Component\n * \n * A sophisticated visualization component that facilitates side-by-side comparison\n * of algorithm implementations across JavaScript and Python environments, providing\n * deep insights into performance characteristics, operation counts, and execution patterns.\n * \n * This component enables educational exploration of algorithmic behavior through:\n * - Synchronized visualization of execution steps\n * - Comparative performance metrics visualization\n * - Runtime characteristics analysis\n * - Implementation-specific optimization patterns\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { WebGLRenderer } from '../visualization/renderers/webgl-renderer';\nimport { generateDataSet } from '../data/generators';\n\n// Algorithm imports - reference through dedicated index files once complete\nimport BubbleSort from '../algorithms/comparison/bubble';\nimport MergeSort from '../algorithms/comparison/merge';\nimport QuickSort from '../algorithms/comparison/quick';\nimport HeapSort from '../algorithms/comparison/heap';\n\n/**\n * Component for comparative analysis of sorting algorithm implementations\n * across JavaScript and Python environments.\n */\nconst AlgorithmComparison = ({\n  width = 1200,\n  height = 600\n}) => {\n  var _comparisonResults$ja, _comparisonResults$ja2, _comparisonResults$py, _comparisonResults$py2;\n  // Algorithm selection state\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState('merge-sort');\n  const [jsImplementation, setJsImplementation] = useState(null);\n\n  // Visualization state\n  const [jsCanvas, setJsCanvas] = useState(null);\n  const [pyCanvas, setPyCanvas] = useState(null);\n  const [jsRenderer, setJsRenderer] = useState(null);\n  const [pyRenderer, setPyRenderer] = useState(null);\n\n  // Data configuration\n  const [selectedDataSet, setSelectedDataSet] = useState('random');\n  const [dataSize, setDataSize] = useState(50);\n  const [data, setData] = useState([]);\n\n  // Comparison metrics\n  const [comparisonResults, setComparisonResults] = useState(null);\n\n  // Canvas references\n  const jsCanvasRef = useRef(null);\n  const pyCanvasRef = useRef(null);\n\n  /**\n   * Initialize component on mount\n   */\n  useEffect(() => {\n    // Set canvas elements\n    if (jsCanvasRef.current && pyCanvasRef.current) {\n      setJsCanvas(jsCanvasRef.current);\n      setPyCanvas(pyCanvasRef.current);\n    }\n\n    // Generate initial data\n    generateInitialData();\n\n    // Initialize algorithm implementation\n    updateAlgorithmImplementation();\n    return () => {\n      // Clean up renderers on unmount\n      if (jsRenderer) jsRenderer.dispose();\n      if (pyRenderer) pyRenderer.dispose();\n    };\n  }, []);\n\n  /**\n   * Initialize WebGL renderers when canvases are available\n   */\n  useEffect(() => {\n    if (jsCanvas && pyCanvas) {\n      try {\n        // Initialize JavaScript implementation renderer\n        const jsRender = new WebGLRenderer(jsCanvas, {\n          colorScheme: 'spectrum',\n          barWidth: 8,\n          spacing: 2,\n          background: [0.1, 0.1, 0.2, 1.0]\n        });\n        setJsRenderer(jsRender);\n\n        // Initialize Python implementation renderer\n        const pyRender = new WebGLRenderer(pyCanvas, {\n          colorScheme: 'heatmap',\n          barWidth: 8,\n          spacing: 2,\n          background: [0.1, 0.2, 0.1, 1.0]\n        });\n        setPyRenderer(pyRender);\n\n        // Set initial data if available\n        if (data.length > 0) {\n          jsRender.setData(data);\n          pyRender.setData(data);\n        }\n      } catch (error) {\n        console.error('Failed to initialize renderers:', error);\n      }\n    }\n  }, [jsCanvas, pyCanvas, data]);\n\n  /**\n   * Update active algorithm implementation when selection changes\n   */\n  useEffect(() => {\n    updateAlgorithmImplementation();\n  }, [selectedAlgorithm]);\n\n  /**\n   * Generate initial dataset with selected parameters\n   */\n  const generateInitialData = () => {\n    const newData = generateDataSet(selectedDataSet, dataSize, {\n      min: 5,\n      max: 100\n    });\n    setData(newData);\n  };\n\n  /**\n   * Update the algorithm implementation based on current selection\n   */\n  const updateAlgorithmImplementation = () => {\n    let implementation;\n    switch (selectedAlgorithm) {\n      case 'bubble-sort':\n        implementation = new BubbleSort({\n          optimize: true,\n          adaptive: true\n        });\n        break;\n      case 'merge-sort':\n        implementation = new MergeSort({\n          adaptive: true,\n          insertionThreshold: 10,\n          optimizeMerge: true\n        });\n        break;\n      case 'quick-sort':\n        implementation = new QuickSort({\n          pivotStrategy: 'median-of-three',\n          insertionThreshold: 10,\n          threeWayPartition: true\n        });\n        break;\n      case 'heap-sort':\n        implementation = new HeapSort({\n          visualizeHeap: true,\n          optimizeLeafChecks: true\n        });\n        break;\n      default:\n        implementation = new MergeSort();\n    }\n    setJsImplementation(implementation);\n  };\n\n  /**\n   * Run comparison between JavaScript and Python implementations\n   * Note: Simplified implementation until Python bridge is complete\n   */\n  const runComparison = async () => {\n    if (!jsImplementation) return;\n\n    // Execute JS implementation to gather metrics\n    const jsStartTime = performance.now();\n    const jsSortedData = jsImplementation.execute([...data]);\n    const jsEndTime = performance.now();\n\n    // Simulate Python results until bridge is complete\n    // This will be replaced with actual Python execution through the bridge\n    const pyExecutionTime = jsImplementation.metrics.comparisons / 100 * (Math.random() * 0.5 + 0.8); // Simulated relative performance\n\n    // Synthetic comparison results for demonstration\n    setComparisonResults({\n      algorithm: selectedAlgorithm,\n      dataSize: data.length,\n      dataType: selectedDataSet,\n      javascript: {\n        executionTime: jsEndTime - jsStartTime,\n        metrics: jsImplementation.metrics\n      },\n      python: {\n        executionTime: pyExecutionTime,\n        metrics: {\n          comparisons: Math.floor(jsImplementation.metrics.comparisons * (Math.random() * 0.2 + 0.9)),\n          swaps: Math.floor(jsImplementation.metrics.swaps * (Math.random() * 0.2 + 0.9)),\n          reads: Math.floor(jsImplementation.metrics.reads * (Math.random() * 0.2 + 0.9)),\n          writes: Math.floor(jsImplementation.metrics.writes * (Math.random() * 0.2 + 0.9))\n        }\n      },\n      comparison: {\n        speedRatio: (jsEndTime - jsStartTime) / pyExecutionTime,\n        accuracyMatch: true\n      }\n    });\n\n    // Update renderers with sorted data\n    if (jsRenderer) jsRenderer.setData(jsSortedData);\n    if (pyRenderer) pyRenderer.setData(jsSortedData); // Using same data until Python bridge is complete\n  };\n\n  /**\n   * Handle algorithm change from UI\n   */\n  const handleAlgorithmChange = e => {\n    setSelectedAlgorithm(e.target.value);\n  };\n\n  /**\n   * Handle data type change from UI\n   */\n  const handleDataTypeChange = e => {\n    setSelectedDataSet(e.target.value);\n  };\n\n  /**\n   * Handle data size change from UI\n   */\n  const handleDataSizeChange = e => {\n    setDataSize(parseInt(e.target.value, 10));\n  };\n\n  /**\n   * Regenerate dataset with current settings\n   */\n  const handleRegenerateData = () => {\n    generateInitialData();\n  };\n\n  /**\n   * Run comparison with current settings\n   */\n  const handleRunComparison = () => {\n    runComparison();\n  };\n\n  /**\n   * Format execution time for display\n   */\n  const formatTime = ms => {\n    if (ms < 1) return `${(ms * 1000).toFixed(2)} Î¼s`;\n    if (ms < 1000) return `${ms.toFixed(2)} ms`;\n    return `${(ms / 1000).toFixed(2)} s`;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"algorithm-comparison\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  }, \"Algorithm Selection\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedAlgorithm,\n    onChange: handleAlgorithmChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"bubble-sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, \"Bubble Sort\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"merge-sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, \"Merge Sort\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"quick-sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, \"Quick Sort\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"heap-sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, \"Heap Sort\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, \"Data Configuration\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, \"Data Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedDataSet,\n    onChange: handleDataTypeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"random\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 15\n    }\n  }, \"Random\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"nearly-sorted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }, \"Nearly Sorted\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"reversed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, \"Reversed\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"few-unique\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, \"Few Unique Values\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, \"Data Size:\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: dataSize,\n    onChange: handleDataSizeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }, \"Small (10 elements)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  }, \"Medium (50 elements)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 15\n    }\n  }, \"Large (100 elements)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"250\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }, \"X-Large (250 elements)\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleRegenerateData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, \"Generate New Data\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }, \"Comparison\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleRunComparison,\n    className: \"primary-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }, \"Run Comparison\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, \"Note:\"), \" Python bridge integration is pending. Comparison currently shows simulated Python metrics.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"visualization-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"visualization-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  }, \"JavaScript Implementation\"), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: jsCanvasRef,\n    width: width / 2 - 20,\n    height: 300,\n    className: \"visualization-canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"visualization-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  }, \"Python Implementation\"), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: pyCanvasRef,\n    width: width / 2 - 20,\n    height: 300,\n    className: \"visualization-canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  }))), comparisonResults && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comparison-results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }, \"Performance Comparison\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"results-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }, \"JavaScript Performance\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }\n  }, \"Execution Time:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }\n  }, formatTime(comparisonResults.javascript.executionTime))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  }, \"Comparisons:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, (_comparisonResults$ja = comparisonResults.javascript.metrics.comparisons) === null || _comparisonResults$ja === void 0 ? void 0 : _comparisonResults$ja.toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }, \"Swaps:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 17\n    }\n  }, (_comparisonResults$ja2 = comparisonResults.javascript.metrics.swaps) === null || _comparisonResults$ja2 === void 0 ? void 0 : _comparisonResults$ja2.toLocaleString()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 15\n    }\n  }, \"Python Performance\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }\n  }, \"Execution Time:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }\n  }, formatTime(comparisonResults.python.executionTime))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }\n  }, \"Comparisons:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 17\n    }\n  }, (_comparisonResults$py = comparisonResults.python.metrics.comparisons) === null || _comparisonResults$py === void 0 ? void 0 : _comparisonResults$py.toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 17\n    }\n  }, \"Swaps:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 17\n    }\n  }, (_comparisonResults$py2 = comparisonResults.python.metrics.swaps) === null || _comparisonResults$py2 === void 0 ? void 0 : _comparisonResults$py2.toLocaleString()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-section comparison-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 15\n    }\n  }, \"Relative Performance\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric highlight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 17\n    }\n  }, \"Speed Ratio:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 17\n    }\n  }, comparisonResults.comparison.speedRatio < 1 ? `Python is ${(1 / comparisonResults.comparison.speedRatio).toFixed(2)}Ã faster` : `JavaScript is ${comparisonResults.comparison.speedRatio.toFixed(2)}Ã faster`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 17\n    }\n  }, \"Data Size:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 17\n    }\n  }, comparisonResults.dataSize, \" elements\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }\n  }, \"Data Type:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 17\n    }\n  }, comparisonResults.dataType)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"implementation-notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }\n  }, \"Implementation Insights\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }\n  }, \"Different language implementations of the same algorithm demonstrate varied performance characteristics due to language-specific optimizations, memory management strategies, and execution environments. JavaScript typically benefits from JIT compilation in the browser, while Python excels with its memory efficiency and implementation simplicity.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }\n  }, \"The relative performance differential varies based on input size, data distribution, and algorithm complexity. For \", selectedAlgorithm, \", the specific implementation details that affect performance include:\", selectedAlgorithm === 'quick-sort' && \" pivot selection strategy, partitioning approach, and recursion handling.\", selectedAlgorithm === 'merge-sort' && \" memory allocation patterns, recursion depth, and merge strategy optimization.\", selectedAlgorithm === 'heap-sort' && \" heap representation, sift-down implementation, and element comparison efficiency.\", selectedAlgorithm === 'bubble-sort' && \" early termination detection, swap operation efficiency, and loop optimization.\"))));\n};\nexport default AlgorithmComparison;","map":{"version":3,"names":["React","useState","useEffect","useRef","WebGLRenderer","generateDataSet","BubbleSort","MergeSort","QuickSort","HeapSort","AlgorithmComparison","width","height","_comparisonResults$ja","_comparisonResults$ja2","_comparisonResults$py","_comparisonResults$py2","selectedAlgorithm","setSelectedAlgorithm","jsImplementation","setJsImplementation","jsCanvas","setJsCanvas","pyCanvas","setPyCanvas","jsRenderer","setJsRenderer","pyRenderer","setPyRenderer","selectedDataSet","setSelectedDataSet","dataSize","setDataSize","data","setData","comparisonResults","setComparisonResults","jsCanvasRef","pyCanvasRef","current","generateInitialData","updateAlgorithmImplementation","dispose","jsRender","colorScheme","barWidth","spacing","background","pyRender","length","error","console","newData","min","max","implementation","optimize","adaptive","insertionThreshold","optimizeMerge","pivotStrategy","threeWayPartition","visualizeHeap","optimizeLeafChecks","runComparison","jsStartTime","performance","now","jsSortedData","execute","jsEndTime","pyExecutionTime","metrics","comparisons","Math","random","algorithm","dataType","javascript","executionTime","python","floor","swaps","reads","writes","comparison","speedRatio","accuracyMatch","handleAlgorithmChange","e","target","value","handleDataTypeChange","handleDataSizeChange","parseInt","handleRegenerateData","handleRunComparison","formatTime","ms","toFixed","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","ref","toLocaleString"],"sources":["/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/AlgorithmComparison.js"],"sourcesContent":["/**\n * Algorithm Comparison Component\n * \n * A sophisticated visualization component that facilitates side-by-side comparison\n * of algorithm implementations across JavaScript and Python environments, providing\n * deep insights into performance characteristics, operation counts, and execution patterns.\n * \n * This component enables educational exploration of algorithmic behavior through:\n * - Synchronized visualization of execution steps\n * - Comparative performance metrics visualization\n * - Runtime characteristics analysis\n * - Implementation-specific optimization patterns\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { WebGLRenderer } from '../visualization/renderers/webgl-renderer';\nimport { generateDataSet } from '../data/generators';\n\n// Algorithm imports - reference through dedicated index files once complete\nimport BubbleSort from '../algorithms/comparison/bubble';\nimport MergeSort from '../algorithms/comparison/merge';\nimport QuickSort from '../algorithms/comparison/quick';\nimport HeapSort from '../algorithms/comparison/heap';\n\n/**\n * Component for comparative analysis of sorting algorithm implementations\n * across JavaScript and Python environments.\n */\nconst AlgorithmComparison = ({ width = 1200, height = 600 }) => {\n  // Algorithm selection state\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState('merge-sort');\n  const [jsImplementation, setJsImplementation] = useState(null);\n  \n  // Visualization state\n  const [jsCanvas, setJsCanvas] = useState(null);\n  const [pyCanvas, setPyCanvas] = useState(null);\n  const [jsRenderer, setJsRenderer] = useState(null);\n  const [pyRenderer, setPyRenderer] = useState(null);\n  \n  // Data configuration\n  const [selectedDataSet, setSelectedDataSet] = useState('random');\n  const [dataSize, setDataSize] = useState(50);\n  const [data, setData] = useState([]);\n  \n  // Comparison metrics\n  const [comparisonResults, setComparisonResults] = useState(null);\n  \n  // Canvas references\n  const jsCanvasRef = useRef(null);\n  const pyCanvasRef = useRef(null);\n  \n  /**\n   * Initialize component on mount\n   */\n  useEffect(() => {\n    // Set canvas elements\n    if (jsCanvasRef.current && pyCanvasRef.current) {\n      setJsCanvas(jsCanvasRef.current);\n      setPyCanvas(pyCanvasRef.current);\n    }\n    \n    // Generate initial data\n    generateInitialData();\n    \n    // Initialize algorithm implementation\n    updateAlgorithmImplementation();\n    \n    return () => {\n      // Clean up renderers on unmount\n      if (jsRenderer) jsRenderer.dispose();\n      if (pyRenderer) pyRenderer.dispose();\n    };\n  }, []);\n  \n  /**\n   * Initialize WebGL renderers when canvases are available\n   */\n  useEffect(() => {\n    if (jsCanvas && pyCanvas) {\n      try {\n        // Initialize JavaScript implementation renderer\n        const jsRender = new WebGLRenderer(jsCanvas, {\n          colorScheme: 'spectrum',\n          barWidth: 8,\n          spacing: 2,\n          background: [0.1, 0.1, 0.2, 1.0]\n        });\n        setJsRenderer(jsRender);\n        \n        // Initialize Python implementation renderer\n        const pyRender = new WebGLRenderer(pyCanvas, {\n          colorScheme: 'heatmap',\n          barWidth: 8,\n          spacing: 2,\n          background: [0.1, 0.2, 0.1, 1.0]\n        });\n        setPyRenderer(pyRender);\n        \n        // Set initial data if available\n        if (data.length > 0) {\n          jsRender.setData(data);\n          pyRender.setData(data);\n        }\n      } catch (error) {\n        console.error('Failed to initialize renderers:', error);\n      }\n    }\n  }, [jsCanvas, pyCanvas, data]);\n  \n  /**\n   * Update active algorithm implementation when selection changes\n   */\n  useEffect(() => {\n    updateAlgorithmImplementation();\n  }, [selectedAlgorithm]);\n  \n  /**\n   * Generate initial dataset with selected parameters\n   */\n  const generateInitialData = () => {\n    const newData = generateDataSet(selectedDataSet, dataSize, {\n      min: 5,\n      max: 100\n    });\n    setData(newData);\n  };\n  \n  /**\n   * Update the algorithm implementation based on current selection\n   */\n  const updateAlgorithmImplementation = () => {\n    let implementation;\n    \n    switch (selectedAlgorithm) {\n      case 'bubble-sort':\n        implementation = new BubbleSort({ optimize: true, adaptive: true });\n        break;\n      case 'merge-sort':\n        implementation = new MergeSort({\n          adaptive: true,\n          insertionThreshold: 10,\n          optimizeMerge: true\n        });\n        break;\n      case 'quick-sort':\n        implementation = new QuickSort({\n          pivotStrategy: 'median-of-three',\n          insertionThreshold: 10,\n          threeWayPartition: true\n        });\n        break;\n      case 'heap-sort':\n        implementation = new HeapSort({\n          visualizeHeap: true,\n          optimizeLeafChecks: true\n        });\n        break;\n      default:\n        implementation = new MergeSort();\n    }\n    \n    setJsImplementation(implementation);\n  };\n  \n  /**\n   * Run comparison between JavaScript and Python implementations\n   * Note: Simplified implementation until Python bridge is complete\n   */\n  const runComparison = async () => {\n    if (!jsImplementation) return;\n    \n    // Execute JS implementation to gather metrics\n    const jsStartTime = performance.now();\n    const jsSortedData = jsImplementation.execute([...data]);\n    const jsEndTime = performance.now();\n    \n    // Simulate Python results until bridge is complete\n    // This will be replaced with actual Python execution through the bridge\n    const pyExecutionTime = (jsImplementation.metrics.comparisons / 100) * \n                           (Math.random() * 0.5 + 0.8); // Simulated relative performance\n    \n    // Synthetic comparison results for demonstration\n    setComparisonResults({\n      algorithm: selectedAlgorithm,\n      dataSize: data.length,\n      dataType: selectedDataSet,\n      javascript: {\n        executionTime: jsEndTime - jsStartTime,\n        metrics: jsImplementation.metrics\n      },\n      python: {\n        executionTime: pyExecutionTime,\n        metrics: {\n          comparisons: Math.floor(jsImplementation.metrics.comparisons * (Math.random() * 0.2 + 0.9)),\n          swaps: Math.floor(jsImplementation.metrics.swaps * (Math.random() * 0.2 + 0.9)),\n          reads: Math.floor(jsImplementation.metrics.reads * (Math.random() * 0.2 + 0.9)),\n          writes: Math.floor(jsImplementation.metrics.writes * (Math.random() * 0.2 + 0.9))\n        }\n      },\n      comparison: {\n        speedRatio: (jsEndTime - jsStartTime) / pyExecutionTime,\n        accuracyMatch: true\n      }\n    });\n    \n    // Update renderers with sorted data\n    if (jsRenderer) jsRenderer.setData(jsSortedData);\n    if (pyRenderer) pyRenderer.setData(jsSortedData); // Using same data until Python bridge is complete\n  };\n  \n  /**\n   * Handle algorithm change from UI\n   */\n  const handleAlgorithmChange = (e) => {\n    setSelectedAlgorithm(e.target.value);\n  };\n  \n  /**\n   * Handle data type change from UI\n   */\n  const handleDataTypeChange = (e) => {\n    setSelectedDataSet(e.target.value);\n  };\n  \n  /**\n   * Handle data size change from UI\n   */\n  const handleDataSizeChange = (e) => {\n    setDataSize(parseInt(e.target.value, 10));\n  };\n  \n  /**\n   * Regenerate dataset with current settings\n   */\n  const handleRegenerateData = () => {\n    generateInitialData();\n  };\n  \n  /**\n   * Run comparison with current settings\n   */\n  const handleRunComparison = () => {\n    runComparison();\n  };\n  \n  /**\n   * Format execution time for display\n   */\n  const formatTime = (ms) => {\n    if (ms < 1) return `${(ms * 1000).toFixed(2)} Î¼s`;\n    if (ms < 1000) return `${ms.toFixed(2)} ms`;\n    return `${(ms / 1000).toFixed(2)} s`;\n  };\n  \n  return (\n    <div className=\"algorithm-comparison\">\n      <div className=\"comparison-controls\">\n        <div className=\"control-section\">\n          <h3>Algorithm Selection</h3>\n          <select value={selectedAlgorithm} onChange={handleAlgorithmChange}>\n            <option value=\"bubble-sort\">Bubble Sort</option>\n            <option value=\"merge-sort\">Merge Sort</option>\n            <option value=\"quick-sort\">Quick Sort</option>\n            <option value=\"heap-sort\">Heap Sort</option>\n          </select>\n        </div>\n        \n        <div className=\"control-section\">\n          <h3>Data Configuration</h3>\n          <div className=\"control-group\">\n            <label>Data Type:</label>\n            <select value={selectedDataSet} onChange={handleDataTypeChange}>\n              <option value=\"random\">Random</option>\n              <option value=\"nearly-sorted\">Nearly Sorted</option>\n              <option value=\"reversed\">Reversed</option>\n              <option value=\"few-unique\">Few Unique Values</option>\n            </select>\n          </div>\n          \n          <div className=\"control-group\">\n            <label>Data Size:</label>\n            <select value={dataSize} onChange={handleDataSizeChange}>\n              <option value=\"10\">Small (10 elements)</option>\n              <option value=\"50\">Medium (50 elements)</option>\n              <option value=\"100\">Large (100 elements)</option>\n              <option value=\"250\">X-Large (250 elements)</option>\n            </select>\n          </div>\n          \n          <button onClick={handleRegenerateData}>Generate New Data</button>\n        </div>\n        \n        <div className=\"control-section\">\n          <h3>Comparison</h3>\n          <button onClick={handleRunComparison} className=\"primary-button\">\n            Run Comparison\n          </button>\n          <div className=\"note\">\n            <strong>Note:</strong> Python bridge integration is pending. \n            Comparison currently shows simulated Python metrics.\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"visualization-container\">\n        <div className=\"visualization-section\">\n          <h3>JavaScript Implementation</h3>\n          <canvas\n            ref={jsCanvasRef}\n            width={width / 2 - 20}\n            height={300}\n            className=\"visualization-canvas\"\n          />\n        </div>\n        \n        <div className=\"visualization-section\">\n          <h3>Python Implementation</h3>\n          <canvas\n            ref={pyCanvasRef}\n            width={width / 2 - 20}\n            height={300}\n            className=\"visualization-canvas\"\n          />\n        </div>\n      </div>\n      \n      {comparisonResults && (\n        <div className=\"comparison-results\">\n          <h3>Performance Comparison</h3>\n          \n          <div className=\"results-grid\">\n            <div className=\"metric-section\">\n              <h4>JavaScript Performance</h4>\n              <div className=\"metric\">\n                <span className=\"metric-label\">Execution Time:</span>\n                <span className=\"metric-value\">{formatTime(comparisonResults.javascript.executionTime)}</span>\n              </div>\n              <div className=\"metric\">\n                <span className=\"metric-label\">Comparisons:</span>\n                <span className=\"metric-value\">{comparisonResults.javascript.metrics.comparisons?.toLocaleString()}</span>\n              </div>\n              <div className=\"metric\">\n                <span className=\"metric-label\">Swaps:</span>\n                <span className=\"metric-value\">{comparisonResults.javascript.metrics.swaps?.toLocaleString()}</span>\n              </div>\n            </div>\n            \n            <div className=\"metric-section\">\n              <h4>Python Performance</h4>\n              <div className=\"metric\">\n                <span className=\"metric-label\">Execution Time:</span>\n                <span className=\"metric-value\">{formatTime(comparisonResults.python.executionTime)}</span>\n              </div>\n              <div className=\"metric\">\n                <span className=\"metric-label\">Comparisons:</span>\n                <span className=\"metric-value\">{comparisonResults.python.metrics.comparisons?.toLocaleString()}</span>\n              </div>\n              <div className=\"metric\">\n                <span className=\"metric-label\">Swaps:</span>\n                <span className=\"metric-value\">{comparisonResults.python.metrics.swaps?.toLocaleString()}</span>\n              </div>\n            </div>\n            \n            <div className=\"metric-section comparison-summary\">\n              <h4>Relative Performance</h4>\n              <div className=\"metric highlight\">\n                <span className=\"metric-label\">Speed Ratio:</span>\n                <span className=\"metric-value\">\n                  {comparisonResults.comparison.speedRatio < 1 \n                    ? `Python is ${(1/comparisonResults.comparison.speedRatio).toFixed(2)}Ã faster`\n                    : `JavaScript is ${comparisonResults.comparison.speedRatio.toFixed(2)}Ã faster`}\n                </span>\n              </div>\n              <div className=\"metric\">\n                <span className=\"metric-label\">Data Size:</span>\n                <span className=\"metric-value\">{comparisonResults.dataSize} elements</span>\n              </div>\n              <div className=\"metric\">\n                <span className=\"metric-label\">Data Type:</span>\n                <span className=\"metric-value\">{comparisonResults.dataType}</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"implementation-notes\">\n            <h4>Implementation Insights</h4>\n            <p>\n              Different language implementations of the same algorithm demonstrate varied performance characteristics\n              due to language-specific optimizations, memory management strategies, and execution environments.\n              JavaScript typically benefits from JIT compilation in the browser, while Python excels with its\n              memory efficiency and implementation simplicity.\n            </p>\n            <p>\n              The relative performance differential varies based on input size, data distribution, and algorithm complexity.\n              For {selectedAlgorithm}, the specific implementation details that affect performance include:\n              {selectedAlgorithm === 'quick-sort' && \" pivot selection strategy, partitioning approach, and recursion handling.\"}\n              {selectedAlgorithm === 'merge-sort' && \" memory allocation patterns, recursion depth, and merge strategy optimization.\"}\n              {selectedAlgorithm === 'heap-sort' && \" heap representation, sift-down implementation, and element comparison efficiency.\"}\n              {selectedAlgorithm === 'bubble-sort' && \" early termination detection, swap operation efficiency, and loop optimization.\"}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AlgorithmComparison;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}