{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/educational-panel.js\";\n// src/components/educational-panel.js\n\n/**\n * @file EducationalPanel.js\n * @author Algorithm Visualization Platform Team\n * @version 2.0.0\n * @description \n * Advanced interactive educational component for algorithm explanation\n * with progressive complexity disclosure and dynamic step analysis.\n * \n * This component implements a multi-layered pedagogical approach to algorithm\n * explanation, featuring mathematical complexity analysis, step-by-step operation\n * clarification, historical context, and practical applications - all synchronized\n * with the visualizer's current state.\n * \n * Visualization-pedagogy integration techniques employed include:\n * - Synchronized code highlighting with execution state\n * - Progressive complexity disclosure based on user expertise level\n * - Mathematical foundations with LaTeX-style rendering\n * - Just-in-time concept explanation with context awareness\n * - Dynamic complexity visualization with amortized analysis\n */\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { MathJax, MathJaxContext } from 'better-react-mathjax';\n\n// Import algorithmic content libraries\nimport AlgorithmExplanationFactory from '../education/algorithm-explanation-factory';\nimport PseudocodeHighlighter from '../education/pseudocode-highlighter';\nimport ComplexityVisualizer from '../education/complexity-visualizer';\nimport ConceptRegistry from '../education/concept-registry';\n\n/**\n * Expertise levels for progressive disclosure of complexity\n * @readonly\n * @enum {string}\n */\nconst ExpertiseLevel = {\n  BEGINNER: 'beginner',\n  INTERMEDIATE: 'intermediate',\n  ADVANCED: 'advanced',\n  THEORETICAL: 'theoretical'\n};\n\n/**\n * Topic sections available in the panel\n * @readonly\n * @enum {string}\n */\nconst TopicSection = {\n  OVERVIEW: 'overview',\n  COMPLEXITY: 'complexity',\n  CURRENT_STEP: 'current-step',\n  PSEUDOCODE: 'pseudocode',\n  MATHEMATICAL_FOUNDATION: 'mathematical-foundation',\n  HISTORICAL_CONTEXT: 'historical-context',\n  PRACTICAL_APPLICATIONS: 'practical-applications',\n  VARIATIONS: 'variations',\n  OPTIMIZATIONS: 'optimizations'\n};\n\n/**\n * Educational explanation panel for algorithm visualization\n * \n * Provides dynamic, context-sensitive explanations synchronized with algorithm execution\n * state, including interactive complexity analysis, pseudocode highlighting, and\n * progressive disclosure of theoretical foundations.\n * \n * @component\n */\nconst EducationalPanel = ({\n  algorithm,\n  currentStep,\n  totalSteps,\n  stepData,\n  metrics,\n  isPlaying,\n  onStepExplanationRequest,\n  onComparisonRequest\n}) => {\n  // State management\n  const [expertiseLevel, setExpertiseLevel] = useState(ExpertiseLevel.INTERMEDIATE);\n  const [expandedSections, setExpandedSections] = useState({\n    [TopicSection.OVERVIEW]: true,\n    [TopicSection.COMPLEXITY]: true,\n    [TopicSection.CURRENT_STEP]: true,\n    [TopicSection.PSEUDOCODE]: false,\n    [TopicSection.MATHEMATICAL_FOUNDATION]: false,\n    [TopicSection.HISTORICAL_CONTEXT]: false,\n    [TopicSection.PRACTICAL_APPLICATIONS]: false,\n    [TopicSection.VARIATIONS]: false,\n    [TopicSection.OPTIMIZATIONS]: false\n  });\n  const [relatedConcepts, setRelatedConcepts] = useState([]);\n  const [currentConcept, setCurrentConcept] = useState(null);\n  const [isConceptModalOpen, setIsConceptModalOpen] = useState(false);\n\n  // Computed values\n  const algorithmInfo = useMemo(() => {\n    if (!algorithm) return null;\n    return algorithm.getInfo ? algorithm.getInfo() : {\n      name: algorithm.name\n    };\n  }, [algorithm]);\n\n  // Generate explanation content based on current algorithm\n  const explanationFactory = useMemo(() => {\n    if (!algorithm) return null;\n    return new AlgorithmExplanationFactory(algorithm, expertiseLevel);\n  }, [algorithm, expertiseLevel]);\n\n  // Extract current step operation for focused explanation\n  const currentOperation = useMemo(() => {\n    if (!stepData) return null;\n    return stepData.type || 'unknown';\n  }, [stepData]);\n\n  // Generate complexity analysis with appropriate level of mathematical detail\n  const complexityAnalysis = useMemo(() => {\n    if (!algorithm || !explanationFactory) return null;\n    return explanationFactory.generateComplexityAnalysis();\n  }, [algorithm, explanationFactory]);\n\n  // Extract pseudocode with synchronized highlighting based on current step\n  const pseudocodeWithHighlighting = useMemo(() => {\n    if (!algorithm || !stepData || !explanationFactory) return null;\n    return explanationFactory.generatePseudocodeWithHighlighting(stepData);\n  }, [algorithm, stepData, explanationFactory]);\n\n  /**\n   * Identify relevant theoretical concepts based on current operation\n   */\n  useEffect(() => {\n    if (!currentOperation || !stepData) return;\n\n    // Identify concepts relevant to current operation\n    const concepts = ConceptRegistry.findRelevantConcepts(algorithm === null || algorithm === void 0 ? void 0 : algorithm.name, currentOperation, stepData, expertiseLevel);\n    setRelatedConcepts(concepts);\n  }, [algorithm, currentOperation, stepData, expertiseLevel]);\n\n  /**\n   * Toggle section expansion state\n   * @param {string} section - Section identifier to toggle\n   */\n  const toggleSection = useCallback(section => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  }, []);\n\n  /**\n   * Change expertise level for explanation depth\n   * @param {Event} event - Change event from select input\n   */\n  const handleExpertiseLevelChange = useCallback(event => {\n    setExpertiseLevel(event.target.value);\n  }, []);\n\n  /**\n   * Open concept explanation modal\n   * @param {Object} concept - Concept to explain\n   */\n  const openConceptExplanation = useCallback(concept => {\n    setCurrentConcept(concept);\n    setIsConceptModalOpen(true);\n  }, []);\n\n  /**\n   * Request detailed step explanation from parent component\n   */\n  const requestStepExplanation = useCallback(() => {\n    if (onStepExplanationRequest && stepData) {\n      onStepExplanationRequest(stepData);\n    }\n  }, [onStepExplanationRequest, stepData]);\n\n  /**\n   * Request algorithm comparison from parent component\n   * @param {string} otherAlgorithm - Algorithm to compare with current one\n   */\n  const requestComparison = useCallback(otherAlgorithm => {\n    if (onComparisonRequest && algorithm) {\n      onComparisonRequest(algorithm.name, otherAlgorithm);\n    }\n  }, [onComparisonRequest, algorithm]);\n\n  // Don't render without an algorithm\n  if (!algorithm) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"educational-panel empty-state\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }, \"Select an algorithm to see educational content.\"));\n  }\n  return /*#__PURE__*/React.createElement(MathJaxContext, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"educational-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"algorithm-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, (algorithmInfo === null || algorithmInfo === void 0 ? void 0 : algorithmInfo.name) || 'Algorithm', \" Explanation\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"expertise-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"expertise-level\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, \"Explanation Level:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"expertise-level\",\n    value: expertiseLevel,\n    onChange: handleExpertiseLevelChange,\n    className: \"expertise-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: ExpertiseLevel.BEGINNER,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }, \"Beginner\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: ExpertiseLevel.INTERMEDIATE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, \"Intermediate\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: ExpertiseLevel.ADVANCED,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, \"Advanced\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: ExpertiseLevel.THEORETICAL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, \"Theoretical\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Section, {\n    title: \"Algorithm Overview\",\n    isExpanded: expandedSections[TopicSection.OVERVIEW],\n    onToggle: () => toggleSection(TopicSection.OVERVIEW),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, explanationFactory ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overview-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, explanationFactory.generateOverview(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"algorithm-properties\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"property\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"property-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, \"Type:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"property-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }, (algorithmInfo === null || algorithmInfo === void 0 ? void 0 : algorithmInfo.category) || 'N/A')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"property\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"property-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }, \"Stable:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"property-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  }, (algorithmInfo === null || algorithmInfo === void 0 ? void 0 : algorithmInfo.stability) ? 'Yes' : 'No')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"property\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"property-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, \"In-Place:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"property-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, (algorithmInfo === null || algorithmInfo === void 0 ? void 0 : algorithmInfo.inPlace) ? 'Yes' : 'No')))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, \"Loading algorithm information...\")), /*#__PURE__*/React.createElement(Section, {\n    title: \"Complexity Analysis\",\n    isExpanded: expandedSections[TopicSection.COMPLEXITY],\n    onToggle: () => toggleSection(TopicSection.COMPLEXITY),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  }, complexityAnalysis ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-tables\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-table time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 21\n    }\n  }, \"Time Complexity\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 27\n    }\n  }, \"Best Case:\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(MathJax, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 29\n    }\n  }, complexityAnalysis.time.best.expression))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 27\n    }\n  }, \"Average Case:\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(MathJax, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 29\n    }\n  }, complexityAnalysis.time.average.expression))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 27\n    }\n  }, \"Worst Case:\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(MathJax, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 29\n    }\n  }, complexityAnalysis.time.worst.expression)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-table space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 21\n    }\n  }, \"Space Complexity\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 27\n    }\n  }, \"Auxiliary Space:\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(MathJax, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 29\n    }\n  }, complexityAnalysis.space.auxiliary.expression))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 27\n    }\n  }, \"Total Space:\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(MathJax, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 29\n    }\n  }, complexityAnalysis.space.total.expression))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-explanation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 19\n    }\n  }, \"Explanation\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selected-case-explanation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 19\n    }\n  }, expertiseLevel === ExpertiseLevel.BEGINNER ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 23\n    }\n  }, complexityAnalysis.simplified) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 25\n    }\n  }, complexityAnalysis.detailed), expertiseLevel === ExpertiseLevel.THEORETICAL && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mathematical-proof\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 29\n    }\n  }, \"Mathematical Derivation\"), /*#__PURE__*/React.createElement(MathJax, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 29\n    }\n  }, complexityAnalysis.mathematicalDerivation)))), expertiseLevel !== ExpertiseLevel.BEGINNER && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"complexity-visualization\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 23\n    }\n  }, \"Growth Rate Visualization\"), /*#__PURE__*/React.createElement(ComplexityVisualizer, {\n    algorithm: algorithm.name,\n    width: 400,\n    height: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 23\n    }\n  })))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 15\n    }\n  }, \"Loading complexity analysis...\")), /*#__PURE__*/React.createElement(Section, {\n    title: \"Current Step Explanation\",\n    isExpanded: expandedSections[TopicSection.CURRENT_STEP],\n    onToggle: () => toggleSection(TopicSection.CURRENT_STEP),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 11\n    }\n  }, stepData ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-explanation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"step-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 21\n    }\n  }, \"Step \", currentStep, \" of \", totalSteps), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-indicator\",\n    style: {\n      width: `${currentStep / totalSteps * 100}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"operation-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"operation-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 21\n    }\n  }, \"Operation: \", stepData.type), stepData.indices && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"operation-indices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 23\n    }\n  }, \"Indices: \", stepData.indices.join(', ')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"operation-explanation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 17\n    }\n  }, explanationFactory ? explanationFactory.generateStepExplanation(stepData, currentStep, totalSteps) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 21\n    }\n  }, stepData.message || 'No detailed explanation available.')), relatedConcepts.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"related-concepts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 21\n    }\n  }, \"Related Concepts\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"concept-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 21\n    }\n  }, relatedConcepts.map(concept => /*#__PURE__*/React.createElement(\"li\", {\n    key: concept.id,\n    className: \"concept-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"concept-link\",\n    onClick: () => openConceptExplanation(concept),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 27\n    }\n  }, concept.name)))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 15\n    }\n  }, \"No step data available. Start the algorithm to see step-by-step explanation.\")), /*#__PURE__*/React.createElement(Section, {\n    title: \"Pseudocode\",\n    isExpanded: expandedSections[TopicSection.PSEUDOCODE],\n    onToggle: () => toggleSection(TopicSection.PSEUDOCODE),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 11\n    }\n  }, pseudocodeWithHighlighting ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pseudocode-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PseudocodeHighlighter, {\n    code: pseudocodeWithHighlighting.code,\n    currentLine: pseudocodeWithHighlighting.currentLine,\n    executingLines: pseudocodeWithHighlighting.executingLines,\n    variables: pseudocodeWithHighlighting.variables,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 15\n    }\n  }, \"Loading pseudocode...\")), expertiseLevel !== ExpertiseLevel.BEGINNER && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Section, {\n    title: \"Mathematical Foundation\",\n    isExpanded: expandedSections[TopicSection.MATHEMATICAL_FOUNDATION],\n    onToggle: () => toggleSection(TopicSection.MATHEMATICAL_FOUNDATION),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 15\n    }\n  }, explanationFactory ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mathematical-foundation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 19\n    }\n  }, explanationFactory.generateMathematicalFoundation()) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 19\n    }\n  }, \"Loading mathematical foundations...\")), /*#__PURE__*/React.createElement(Section, {\n    title: \"Historical Context\",\n    isExpanded: expandedSections[TopicSection.HISTORICAL_CONTEXT],\n    onToggle: () => toggleSection(TopicSection.HISTORICAL_CONTEXT),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 15\n    }\n  }, explanationFactory ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"historical-context\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 19\n    }\n  }, explanationFactory.generateHistoricalContext()) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 19\n    }\n  }, \"Loading historical context...\"))), /*#__PURE__*/React.createElement(Section, {\n    title: \"Practical Applications\",\n    isExpanded: expandedSections[TopicSection.PRACTICAL_APPLICATIONS],\n    onToggle: () => toggleSection(TopicSection.PRACTICAL_APPLICATIONS),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 11\n    }\n  }, explanationFactory ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"practical-applications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 15\n    }\n  }, explanationFactory.generatePracticalApplications()) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 15\n    }\n  }, \"Loading practical applications...\")), /*#__PURE__*/React.createElement(Section, {\n    title: \"Variations & Related Algorithms\",\n    isExpanded: expandedSections[TopicSection.VARIATIONS],\n    onToggle: () => toggleSection(TopicSection.VARIATIONS),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 11\n    }\n  }, explanationFactory && (algorithmInfo === null || algorithmInfo === void 0 ? void 0 : algorithmInfo.variants) ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"algorithm-variations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"variations-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 17\n    }\n  }, algorithmInfo.variants.map((variant, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: \"variant-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"variant-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 23\n    }\n  }, variant), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"variant-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 23\n    }\n  }, explanationFactory.generateVariantDescription(variant))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"related-algorithms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 19\n    }\n  }, \"Related Algorithms\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"related-algorithms-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 19\n    }\n  }, explanationFactory.getRelatedAlgorithms().map((algo, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: \"related-algorithm-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"algorithm-comparison-btn\",\n    onClick: () => requestComparison(algo.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 25\n    }\n  }, \"Compare with \", algo.name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"relationship-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 25\n    }\n  }, \"(\", algo.relationship, \")\")))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 15\n    }\n  }, \"Loading algorithm variations...\")), (expertiseLevel === ExpertiseLevel.ADVANCED || expertiseLevel === ExpertiseLevel.THEORETICAL) && /*#__PURE__*/React.createElement(Section, {\n    title: \"Optimizations & Implementation Details\",\n    isExpanded: expandedSections[TopicSection.OPTIMIZATIONS],\n    onToggle: () => toggleSection(TopicSection.OPTIMIZATIONS),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 13\n    }\n  }, explanationFactory ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"algorithm-optimizations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 17\n    }\n  }, explanationFactory.generateOptimizationDetails(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"implementation-considerations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 21\n    }\n  }, \"Implementation Considerations\"), explanationFactory.generateImplementationConsiderations()), expertiseLevel === ExpertiseLevel.THEORETICAL && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hardware-considerations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 23\n    }\n  }, \"Hardware Considerations\"), explanationFactory.generateHardwareConsiderations())) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 17\n    }\n  }, \"Loading optimization details...\"))), /*#__PURE__*/React.createElement(ConceptModal, {\n    concept: currentConcept,\n    isOpen: isConceptModalOpen,\n    onClose: () => setIsConceptModalOpen(false),\n    expertiseLevel: expertiseLevel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 9\n    }\n  })));\n};\n\n/**\n * Collapsible section component with toggle functionality\n * \n * @component\n */\nconst Section = ({\n  title,\n  children,\n  isExpanded,\n  onToggle\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: `panel-section ${isExpanded ? 'expanded' : 'collapsed'}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 584,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"section-header\",\n  onClick: onToggle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 585,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 586,\n    columnNumber: 7\n  }\n}, title), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"toggle-icon\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 587,\n    columnNumber: 7\n  }\n}, isExpanded ? '▼' : '►')), isExpanded && /*#__PURE__*/React.createElement(\"div\", {\n  className: \"section-content\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 590,\n    columnNumber: 7\n  }\n}, children));\n\n/**\n * Modal component for displaying detailed concept explanations\n * \n * @component\n */\nconst ConceptModal = ({\n  concept,\n  isOpen,\n  onClose,\n  expertiseLevel\n}) => {\n  if (!isOpen || !concept) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"concept-modal-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"concept-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"concept-modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 11\n    }\n  }, concept.name), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-button\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 11\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"concept-modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MathJaxContext, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"concept-definition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 15\n    }\n  }, \"Definition\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 15\n    }\n  }, concept.getDefinition(expertiseLevel))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"concept-explanation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 15\n    }\n  }, \"Explanation\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 15\n    }\n  }, concept.getExplanation(expertiseLevel))), expertiseLevel !== ExpertiseLevel.BEGINNER && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"concept-mathematics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 17\n    }\n  }, \"Mathematical Foundation\"), /*#__PURE__*/React.createElement(MathJax, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 17\n    }\n  }, concept.getMathematicalRepresentation(expertiseLevel))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"concept-examples\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 15\n    }\n  }, \"Examples\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 15\n    }\n  }, concept.getExamples(expertiseLevel))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"concept-applications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 15\n    }\n  }, \"Applications\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 15\n    }\n  }, concept.getApplications(expertiseLevel).map((app, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 19\n    }\n  }, app)))), expertiseLevel === ExpertiseLevel.THEORETICAL && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"concept-further-reading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 17\n    }\n  }, \"Further Reading\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 17\n    }\n  }, concept.getFurtherReading().map((source, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 21\n    }\n  }, source.authors, \" (\", source.year, \"). \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 57\n    }\n  }, source.title), \". \", source.publication))))))));\n};\n\n// PropTypes for type checking\nEducationalPanel.propTypes = {\n  /** Current algorithm instance */\n  algorithm: PropTypes.object,\n  /** Current step in the algorithm execution */\n  currentStep: PropTypes.number,\n  /** Total number of steps in the algorithm execution */\n  totalSteps: PropTypes.number,\n  /** Data for the current step */\n  stepData: PropTypes.object,\n  /** Performance metrics for the algorithm */\n  metrics: PropTypes.object,\n  /** Whether the algorithm is currently playing */\n  isPlaying: PropTypes.bool,\n  /** Callback for requesting detailed step explanation */\n  onStepExplanationRequest: PropTypes.func,\n  /** Callback for requesting algorithm comparison */\n  onComparisonRequest: PropTypes.func\n};\nSection.propTypes = {\n  /** Section title */\n  title: PropTypes.string.isRequired,\n  /** Section content */\n  children: PropTypes.node.isRequired,\n  /** Whether the section is expanded */\n  isExpanded: PropTypes.bool.isRequired,\n  /** Toggle function for expanding/collapsing */\n  onToggle: PropTypes.func.isRequired\n};\nConceptModal.propTypes = {\n  /** Concept to explain */\n  concept: PropTypes.object,\n  /** Whether the modal is open */\n  isOpen: PropTypes.bool.isRequired,\n  /** Close function for the modal */\n  onClose: PropTypes.func.isRequired,\n  /** Current expertise level */\n  expertiseLevel: PropTypes.string.isRequired\n};\nexport default EducationalPanel;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","PropTypes","MathJax","MathJaxContext","AlgorithmExplanationFactory","PseudocodeHighlighter","ComplexityVisualizer","ConceptRegistry","ExpertiseLevel","BEGINNER","INTERMEDIATE","ADVANCED","THEORETICAL","TopicSection","OVERVIEW","COMPLEXITY","CURRENT_STEP","PSEUDOCODE","MATHEMATICAL_FOUNDATION","HISTORICAL_CONTEXT","PRACTICAL_APPLICATIONS","VARIATIONS","OPTIMIZATIONS","EducationalPanel","algorithm","currentStep","totalSteps","stepData","metrics","isPlaying","onStepExplanationRequest","onComparisonRequest","expertiseLevel","setExpertiseLevel","expandedSections","setExpandedSections","relatedConcepts","setRelatedConcepts","currentConcept","setCurrentConcept","isConceptModalOpen","setIsConceptModalOpen","algorithmInfo","getInfo","name","explanationFactory","currentOperation","type","complexityAnalysis","generateComplexityAnalysis","pseudocodeWithHighlighting","generatePseudocodeWithHighlighting","concepts","findRelevantConcepts","toggleSection","section","prev","handleExpertiseLevelChange","event","target","value","openConceptExplanation","concept","requestStepExplanation","requestComparison","otherAlgorithm","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","Section","title","isExpanded","onToggle","generateOverview","category","stability","inPlace","time","best","expression","average","worst","space","auxiliary","total","simplified","detailed","mathematicalDerivation","width","height","style","indices","join","generateStepExplanation","message","length","map","key","onClick","code","currentLine","executingLines","variables","Fragment","generateMathematicalFoundation","generateHistoricalContext","generatePracticalApplications","variants","variant","index","generateVariantDescription","getRelatedAlgorithms","algo","relationship","generateOptimizationDetails","generateImplementationConsiderations","generateHardwareConsiderations","ConceptModal","isOpen","onClose","children","getDefinition","getExplanation","getMathematicalRepresentation","getExamples","getApplications","app","getFurtherReading","source","authors","year","publication","propTypes","object","number","bool","func","string","isRequired","node"],"sources":["/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/educational-panel.js"],"sourcesContent":["// src/components/educational-panel.js\n\n/**\n * @file EducationalPanel.js\n * @author Algorithm Visualization Platform Team\n * @version 2.0.0\n * @description \n * Advanced interactive educational component for algorithm explanation\n * with progressive complexity disclosure and dynamic step analysis.\n * \n * This component implements a multi-layered pedagogical approach to algorithm\n * explanation, featuring mathematical complexity analysis, step-by-step operation\n * clarification, historical context, and practical applications - all synchronized\n * with the visualizer's current state.\n * \n * Visualization-pedagogy integration techniques employed include:\n * - Synchronized code highlighting with execution state\n * - Progressive complexity disclosure based on user expertise level\n * - Mathematical foundations with LaTeX-style rendering\n * - Just-in-time concept explanation with context awareness\n * - Dynamic complexity visualization with amortized analysis\n */\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { MathJax, MathJaxContext } from 'better-react-mathjax';\n\n// Import algorithmic content libraries\nimport AlgorithmExplanationFactory from '../education/algorithm-explanation-factory';\nimport PseudocodeHighlighter from '../education/pseudocode-highlighter';\nimport ComplexityVisualizer from '../education/complexity-visualizer';\nimport ConceptRegistry from '../education/concept-registry';\n\n/**\n * Expertise levels for progressive disclosure of complexity\n * @readonly\n * @enum {string}\n */\nconst ExpertiseLevel = {\n  BEGINNER: 'beginner',\n  INTERMEDIATE: 'intermediate',\n  ADVANCED: 'advanced',\n  THEORETICAL: 'theoretical'\n};\n\n/**\n * Topic sections available in the panel\n * @readonly\n * @enum {string}\n */\nconst TopicSection = {\n  OVERVIEW: 'overview',\n  COMPLEXITY: 'complexity',\n  CURRENT_STEP: 'current-step',\n  PSEUDOCODE: 'pseudocode',\n  MATHEMATICAL_FOUNDATION: 'mathematical-foundation',\n  HISTORICAL_CONTEXT: 'historical-context',\n  PRACTICAL_APPLICATIONS: 'practical-applications',\n  VARIATIONS: 'variations',\n  OPTIMIZATIONS: 'optimizations'\n};\n\n/**\n * Educational explanation panel for algorithm visualization\n * \n * Provides dynamic, context-sensitive explanations synchronized with algorithm execution\n * state, including interactive complexity analysis, pseudocode highlighting, and\n * progressive disclosure of theoretical foundations.\n * \n * @component\n */\nconst EducationalPanel = ({\n  algorithm,\n  currentStep,\n  totalSteps,\n  stepData,\n  metrics,\n  isPlaying,\n  onStepExplanationRequest,\n  onComparisonRequest,\n}) => {\n  // State management\n  const [expertiseLevel, setExpertiseLevel] = useState(ExpertiseLevel.INTERMEDIATE);\n  const [expandedSections, setExpandedSections] = useState({\n    [TopicSection.OVERVIEW]: true,\n    [TopicSection.COMPLEXITY]: true,\n    [TopicSection.CURRENT_STEP]: true,\n    [TopicSection.PSEUDOCODE]: false,\n    [TopicSection.MATHEMATICAL_FOUNDATION]: false,\n    [TopicSection.HISTORICAL_CONTEXT]: false,\n    [TopicSection.PRACTICAL_APPLICATIONS]: false,\n    [TopicSection.VARIATIONS]: false,\n    [TopicSection.OPTIMIZATIONS]: false\n  });\n  const [relatedConcepts, setRelatedConcepts] = useState([]);\n  const [currentConcept, setCurrentConcept] = useState(null);\n  const [isConceptModalOpen, setIsConceptModalOpen] = useState(false);\n  \n  // Computed values\n  const algorithmInfo = useMemo(() => {\n    if (!algorithm) return null;\n    return algorithm.getInfo ? algorithm.getInfo() : { name: algorithm.name };\n  }, [algorithm]);\n  \n  // Generate explanation content based on current algorithm\n  const explanationFactory = useMemo(() => {\n    if (!algorithm) return null;\n    return new AlgorithmExplanationFactory(algorithm, expertiseLevel);\n  }, [algorithm, expertiseLevel]);\n  \n  // Extract current step operation for focused explanation\n  const currentOperation = useMemo(() => {\n    if (!stepData) return null;\n    return stepData.type || 'unknown';\n  }, [stepData]);\n  \n  // Generate complexity analysis with appropriate level of mathematical detail\n  const complexityAnalysis = useMemo(() => {\n    if (!algorithm || !explanationFactory) return null;\n    return explanationFactory.generateComplexityAnalysis();\n  }, [algorithm, explanationFactory]);\n  \n  // Extract pseudocode with synchronized highlighting based on current step\n  const pseudocodeWithHighlighting = useMemo(() => {\n    if (!algorithm || !stepData || !explanationFactory) return null;\n    return explanationFactory.generatePseudocodeWithHighlighting(stepData);\n  }, [algorithm, stepData, explanationFactory]);\n  \n  /**\n   * Identify relevant theoretical concepts based on current operation\n   */\n  useEffect(() => {\n    if (!currentOperation || !stepData) return;\n    \n    // Identify concepts relevant to current operation\n    const concepts = ConceptRegistry.findRelevantConcepts(\n      algorithm?.name,\n      currentOperation,\n      stepData,\n      expertiseLevel\n    );\n    \n    setRelatedConcepts(concepts);\n  }, [algorithm, currentOperation, stepData, expertiseLevel]);\n  \n  /**\n   * Toggle section expansion state\n   * @param {string} section - Section identifier to toggle\n   */\n  const toggleSection = useCallback((section) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  }, []);\n  \n  /**\n   * Change expertise level for explanation depth\n   * @param {Event} event - Change event from select input\n   */\n  const handleExpertiseLevelChange = useCallback((event) => {\n    setExpertiseLevel(event.target.value);\n  }, []);\n  \n  /**\n   * Open concept explanation modal\n   * @param {Object} concept - Concept to explain\n   */\n  const openConceptExplanation = useCallback((concept) => {\n    setCurrentConcept(concept);\n    setIsConceptModalOpen(true);\n  }, []);\n  \n  /**\n   * Request detailed step explanation from parent component\n   */\n  const requestStepExplanation = useCallback(() => {\n    if (onStepExplanationRequest && stepData) {\n      onStepExplanationRequest(stepData);\n    }\n  }, [onStepExplanationRequest, stepData]);\n  \n  /**\n   * Request algorithm comparison from parent component\n   * @param {string} otherAlgorithm - Algorithm to compare with current one\n   */\n  const requestComparison = useCallback((otherAlgorithm) => {\n    if (onComparisonRequest && algorithm) {\n      onComparisonRequest(algorithm.name, otherAlgorithm);\n    }\n  }, [onComparisonRequest, algorithm]);\n  \n  // Don't render without an algorithm\n  if (!algorithm) {\n    return (\n      <div className=\"educational-panel empty-state\">\n        <p>Select an algorithm to see educational content.</p>\n      </div>\n    );\n  }\n  \n  return (\n    <MathJaxContext>\n      <div className=\"educational-panel\">\n        {/* Header with expertise level selector */}\n        <div className=\"panel-header\">\n          <h2 className=\"algorithm-title\">{algorithmInfo?.name || 'Algorithm'} Explanation</h2>\n          \n          <div className=\"expertise-selector\">\n            <label htmlFor=\"expertise-level\">Explanation Level:</label>\n            <select \n              id=\"expertise-level\" \n              value={expertiseLevel} \n              onChange={handleExpertiseLevelChange}\n              className=\"expertise-select\"\n            >\n              <option value={ExpertiseLevel.BEGINNER}>Beginner</option>\n              <option value={ExpertiseLevel.INTERMEDIATE}>Intermediate</option>\n              <option value={ExpertiseLevel.ADVANCED}>Advanced</option>\n              <option value={ExpertiseLevel.THEORETICAL}>Theoretical</option>\n            </select>\n          </div>\n        </div>\n        \n        {/* Main content sections */}\n        <div className=\"panel-content\">\n          {/* Algorithm Overview Section */}\n          <Section \n            title=\"Algorithm Overview\" \n            isExpanded={expandedSections[TopicSection.OVERVIEW]} \n            onToggle={() => toggleSection(TopicSection.OVERVIEW)}\n          >\n            {explanationFactory ? (\n              <div className=\"overview-content\">\n                {explanationFactory.generateOverview()}\n                \n                {/* Key algorithm characteristics */}\n                <div className=\"algorithm-properties\">\n                  <div className=\"property\">\n                    <span className=\"property-label\">Type:</span> \n                    <span className=\"property-value\">{algorithmInfo?.category || 'N/A'}</span>\n                  </div>\n                  <div className=\"property\">\n                    <span className=\"property-label\">Stable:</span> \n                    <span className=\"property-value\">{algorithmInfo?.stability ? 'Yes' : 'No'}</span>\n                  </div>\n                  <div className=\"property\">\n                    <span className=\"property-label\">In-Place:</span> \n                    <span className=\"property-value\">{algorithmInfo?.inPlace ? 'Yes' : 'No'}</span>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <p>Loading algorithm information...</p>\n            )}\n          </Section>\n          \n          {/* Complexity Analysis Section */}\n          <Section \n            title=\"Complexity Analysis\" \n            isExpanded={expandedSections[TopicSection.COMPLEXITY]} \n            onToggle={() => toggleSection(TopicSection.COMPLEXITY)}\n          >\n            {complexityAnalysis ? (\n              <div className=\"complexity-content\">\n                <div className=\"complexity-tables\">\n                  <div className=\"complexity-table time\">\n                    <h4>Time Complexity</h4>\n                    <table>\n                      <tbody>\n                        <tr>\n                          <td>Best Case:</td>\n                          <td>\n                            <MathJax>\n                              {complexityAnalysis.time.best.expression}\n                            </MathJax>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Average Case:</td>\n                          <td>\n                            <MathJax>\n                              {complexityAnalysis.time.average.expression}\n                            </MathJax>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Worst Case:</td>\n                          <td>\n                            <MathJax>\n                              {complexityAnalysis.time.worst.expression}\n                            </MathJax>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                  \n                  <div className=\"complexity-table space\">\n                    <h4>Space Complexity</h4>\n                    <table>\n                      <tbody>\n                        <tr>\n                          <td>Auxiliary Space:</td>\n                          <td>\n                            <MathJax>\n                              {complexityAnalysis.space.auxiliary.expression}\n                            </MathJax>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Total Space:</td>\n                          <td>\n                            <MathJax>\n                              {complexityAnalysis.space.total.expression}\n                            </MathJax>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n                \n                {/* Detailed complexity explanation */}\n                <div className=\"complexity-explanation\">\n                  <h4>Explanation</h4>\n                  <div className=\"selected-case-explanation\">\n                    {expertiseLevel === ExpertiseLevel.BEGINNER ? (\n                      <p>{complexityAnalysis.simplified}</p>\n                    ) : (\n                      <div>\n                        <p>{complexityAnalysis.detailed}</p>\n                        \n                        {expertiseLevel === ExpertiseLevel.THEORETICAL && (\n                          <div className=\"mathematical-proof\">\n                            <h5>Mathematical Derivation</h5>\n                            <MathJax>\n                              {complexityAnalysis.mathematicalDerivation}\n                            </MathJax>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                  \n                  {/* Visual complexity comparison */}\n                  {expertiseLevel !== ExpertiseLevel.BEGINNER && (\n                    <div className=\"complexity-visualization\">\n                      <h4>Growth Rate Visualization</h4>\n                      <ComplexityVisualizer \n                        algorithm={algorithm.name}\n                        width={400}\n                        height={200}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n            ) : (\n              <p>Loading complexity analysis...</p>\n            )}\n          </Section>\n          \n          {/* Current Step Explanation Section */}\n          <Section \n            title=\"Current Step Explanation\" \n            isExpanded={expandedSections[TopicSection.CURRENT_STEP]} \n            onToggle={() => toggleSection(TopicSection.CURRENT_STEP)}\n          >\n            {stepData ? (\n              <div className=\"step-explanation\">\n                <div className=\"step-info\">\n                  <div className=\"step-progress\">\n                    <span className=\"step-count\">Step {currentStep} of {totalSteps}</span>\n                    <div className=\"progress-bar\">\n                      <div \n                        className=\"progress-indicator\" \n                        style={{ width: `${(currentStep / totalSteps) * 100}%` }} \n                      />\n                    </div>\n                  </div>\n                  \n                  <div className=\"operation-details\">\n                    <span className=\"operation-type\">Operation: {stepData.type}</span>\n                    {stepData.indices && (\n                      <span className=\"operation-indices\">Indices: {stepData.indices.join(', ')}</span>\n                    )}\n                  </div>\n                </div>\n                \n                {/* Operation explanation with appropriate detail level */}\n                <div className=\"operation-explanation\">\n                  {explanationFactory ? \n                    explanationFactory.generateStepExplanation(stepData, currentStep, totalSteps) : \n                    <p>{stepData.message || 'No detailed explanation available.'}</p>\n                  }\n                </div>\n                \n                {/* Related algorithmic concepts for this operation */}\n                {relatedConcepts.length > 0 && (\n                  <div className=\"related-concepts\">\n                    <h4>Related Concepts</h4>\n                    <ul className=\"concept-list\">\n                      {relatedConcepts.map(concept => (\n                        <li key={concept.id} className=\"concept-item\">\n                          <button \n                            className=\"concept-link\"\n                            onClick={() => openConceptExplanation(concept)}\n                          >\n                            {concept.name}\n                          </button>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <p>No step data available. Start the algorithm to see step-by-step explanation.</p>\n            )}\n          </Section>\n          \n          {/* Pseudocode Section */}\n          <Section \n            title=\"Pseudocode\" \n            isExpanded={expandedSections[TopicSection.PSEUDOCODE]} \n            onToggle={() => toggleSection(TopicSection.PSEUDOCODE)}\n          >\n            {pseudocodeWithHighlighting ? (\n              <div className=\"pseudocode-container\">\n                <PseudocodeHighlighter \n                  code={pseudocodeWithHighlighting.code}\n                  currentLine={pseudocodeWithHighlighting.currentLine}\n                  executingLines={pseudocodeWithHighlighting.executingLines}\n                  variables={pseudocodeWithHighlighting.variables}\n                />\n              </div>\n            ) : (\n              <p>Loading pseudocode...</p>\n            )}\n          </Section>\n          \n          {/* Conditional sections shown only at higher expertise levels */}\n          {expertiseLevel !== ExpertiseLevel.BEGINNER && (\n            <>\n              {/* Mathematical Foundation Section */}\n              <Section \n                title=\"Mathematical Foundation\" \n                isExpanded={expandedSections[TopicSection.MATHEMATICAL_FOUNDATION]} \n                onToggle={() => toggleSection(TopicSection.MATHEMATICAL_FOUNDATION)}\n              >\n                {explanationFactory ? (\n                  <div className=\"mathematical-foundation\">\n                    {explanationFactory.generateMathematicalFoundation()}\n                  </div>\n                ) : (\n                  <p>Loading mathematical foundations...</p>\n                )}\n              </Section>\n              \n              {/* Historical Context Section */}\n              <Section \n                title=\"Historical Context\" \n                isExpanded={expandedSections[TopicSection.HISTORICAL_CONTEXT]} \n                onToggle={() => toggleSection(TopicSection.HISTORICAL_CONTEXT)}\n              >\n                {explanationFactory ? (\n                  <div className=\"historical-context\">\n                    {explanationFactory.generateHistoricalContext()}\n                  </div>\n                ) : (\n                  <p>Loading historical context...</p>\n                )}\n              </Section>\n            </>\n          )}\n          \n          {/* Practical Applications Section */}\n          <Section \n            title=\"Practical Applications\" \n            isExpanded={expandedSections[TopicSection.PRACTICAL_APPLICATIONS]} \n            onToggle={() => toggleSection(TopicSection.PRACTICAL_APPLICATIONS)}\n          >\n            {explanationFactory ? (\n              <div className=\"practical-applications\">\n                {explanationFactory.generatePracticalApplications()}\n              </div>\n            ) : (\n              <p>Loading practical applications...</p>\n            )}\n          </Section>\n          \n          {/* Algorithm Variations Section */}\n          <Section \n            title=\"Variations & Related Algorithms\" \n            isExpanded={expandedSections[TopicSection.VARIATIONS]} \n            onToggle={() => toggleSection(TopicSection.VARIATIONS)}\n          >\n            {explanationFactory && algorithmInfo?.variants ? (\n              <div className=\"algorithm-variations\">\n                <ul className=\"variations-list\">\n                  {algorithmInfo.variants.map((variant, index) => (\n                    <li key={index} className=\"variant-item\">\n                      <div className=\"variant-name\">{variant}</div>\n                      <div className=\"variant-description\">\n                        {explanationFactory.generateVariantDescription(variant)}\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n                \n                <div className=\"related-algorithms\">\n                  <h4>Related Algorithms</h4>\n                  <ul className=\"related-algorithms-list\">\n                    {explanationFactory.getRelatedAlgorithms().map((algo, index) => (\n                      <li key={index} className=\"related-algorithm-item\">\n                        <button \n                          className=\"algorithm-comparison-btn\"\n                          onClick={() => requestComparison(algo.name)}\n                        >\n                          Compare with {algo.name}\n                        </button>\n                        <span className=\"relationship-type\">({algo.relationship})</span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            ) : (\n              <p>Loading algorithm variations...</p>\n            )}\n          </Section>\n          \n          {/* Optimizations Section - Advanced expertise levels only */}\n          {(expertiseLevel === ExpertiseLevel.ADVANCED || expertiseLevel === ExpertiseLevel.THEORETICAL) && (\n            <Section \n              title=\"Optimizations & Implementation Details\" \n              isExpanded={expandedSections[TopicSection.OPTIMIZATIONS]} \n              onToggle={() => toggleSection(TopicSection.OPTIMIZATIONS)}\n            >\n              {explanationFactory ? (\n                <div className=\"algorithm-optimizations\">\n                  {explanationFactory.generateOptimizationDetails()}\n                  \n                  {/* Implementation considerations */}\n                  <div className=\"implementation-considerations\">\n                    <h4>Implementation Considerations</h4>\n                    {explanationFactory.generateImplementationConsiderations()}\n                  </div>\n                  \n                  {/* Hardware aspects for theoretical level */}\n                  {expertiseLevel === ExpertiseLevel.THEORETICAL && (\n                    <div className=\"hardware-considerations\">\n                      <h4>Hardware Considerations</h4>\n                      {explanationFactory.generateHardwareConsiderations()}\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <p>Loading optimization details...</p>\n              )}\n            </Section>\n          )}\n        </div>\n        \n        {/* Concept explanation modal */}\n        <ConceptModal \n          concept={currentConcept}\n          isOpen={isConceptModalOpen}\n          onClose={() => setIsConceptModalOpen(false)}\n          expertiseLevel={expertiseLevel}\n        />\n      </div>\n    </MathJaxContext>\n  );\n};\n\n/**\n * Collapsible section component with toggle functionality\n * \n * @component\n */\nconst Section = ({ title, children, isExpanded, onToggle }) => (\n  <div className={`panel-section ${isExpanded ? 'expanded' : 'collapsed'}`}>\n    <div className=\"section-header\" onClick={onToggle}>\n      <h3>{title}</h3>\n      <span className=\"toggle-icon\">{isExpanded ? '▼' : '►'}</span>\n    </div>\n    {isExpanded && (\n      <div className=\"section-content\">\n        {children}\n      </div>\n    )}\n  </div>\n);\n\n/**\n * Modal component for displaying detailed concept explanations\n * \n * @component\n */\nconst ConceptModal = ({ concept, isOpen, onClose, expertiseLevel }) => {\n  if (!isOpen || !concept) return null;\n  \n  return (\n    <div className=\"concept-modal-overlay\">\n      <div className=\"concept-modal\">\n        <div className=\"concept-modal-header\">\n          <h3>{concept.name}</h3>\n          <button className=\"close-button\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"concept-modal-content\">\n          <MathJaxContext>\n            <div className=\"concept-definition\">\n              <h4>Definition</h4>\n              <p>{concept.getDefinition(expertiseLevel)}</p>\n            </div>\n            \n            <div className=\"concept-explanation\">\n              <h4>Explanation</h4>\n              <div>{concept.getExplanation(expertiseLevel)}</div>\n            </div>\n            \n            {expertiseLevel !== ExpertiseLevel.BEGINNER && (\n              <div className=\"concept-mathematics\">\n                <h4>Mathematical Foundation</h4>\n                <MathJax>\n                  {concept.getMathematicalRepresentation(expertiseLevel)}\n                </MathJax>\n              </div>\n            )}\n            \n            <div className=\"concept-examples\">\n              <h4>Examples</h4>\n              <div>{concept.getExamples(expertiseLevel)}</div>\n            </div>\n            \n            <div className=\"concept-applications\">\n              <h4>Applications</h4>\n              <ul>\n                {concept.getApplications(expertiseLevel).map((app, index) => (\n                  <li key={index}>{app}</li>\n                ))}\n              </ul>\n            </div>\n            \n            {expertiseLevel === ExpertiseLevel.THEORETICAL && (\n              <div className=\"concept-further-reading\">\n                <h4>Further Reading</h4>\n                <ul>\n                  {concept.getFurtherReading().map((source, index) => (\n                    <li key={index}>\n                      {source.authors} ({source.year}). <em>{source.title}</em>. {source.publication}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </MathJaxContext>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// PropTypes for type checking\nEducationalPanel.propTypes = {\n  /** Current algorithm instance */\n  algorithm: PropTypes.object,\n  /** Current step in the algorithm execution */\n  currentStep: PropTypes.number,\n  /** Total number of steps in the algorithm execution */\n  totalSteps: PropTypes.number,\n  /** Data for the current step */\n  stepData: PropTypes.object,\n  /** Performance metrics for the algorithm */\n  metrics: PropTypes.object,\n  /** Whether the algorithm is currently playing */\n  isPlaying: PropTypes.bool,\n  /** Callback for requesting detailed step explanation */\n  onStepExplanationRequest: PropTypes.func,\n  /** Callback for requesting algorithm comparison */\n  onComparisonRequest: PropTypes.func\n};\n\nSection.propTypes = {\n  /** Section title */\n  title: PropTypes.string.isRequired,\n  /** Section content */\n  children: PropTypes.node.isRequired,\n  /** Whether the section is expanded */\n  isExpanded: PropTypes.bool.isRequired,\n  /** Toggle function for expanding/collapsing */\n  onToggle: PropTypes.func.isRequired\n};\n\nConceptModal.propTypes = {\n  /** Concept to explain */\n  concept: PropTypes.object,\n  /** Whether the modal is open */\n  isOpen: PropTypes.bool.isRequired,\n  /** Close function for the modal */\n  onClose: PropTypes.func.isRequired,\n  /** Current expertise level */\n  expertiseLevel: PropTypes.string.isRequired\n};\n\nexport default EducationalPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}