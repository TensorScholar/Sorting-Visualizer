{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/App.js\";\n// src/App.js\n\n/**\n * @file Main Application Component for Advanced Sorting Algorithm Visualization Platform\n * @author Advanced Algorithm Visualization Team\n * @version 2.0.0\n * @license MIT\n * \n * @description\n * Central orchestration component for the Advanced Sorting Algorithm Visualization Platform.\n * This component implements a sophisticated architecture that integrates visualization,\n * comparison, and educational features into a cohesive learning environment.\n * \n * The application employs a modular design pattern with:\n * - Hierarchical component composition\n * - Context-based state management\n * - Controlled algorithm injection\n * - Dynamic feature discovery and rendering\n * - Educational content integration\n * \n * Architectural design principles:\n * - Separation of concerns between algorithms, visualization, and application state\n * - Immutable data flow to prevent side effects\n * - Optimized rendering pipeline for high-performance visualization\n * - Progressive disclosure of complexity for educational purposes\n */\n\nimport React, { useState, useEffect, useCallback, useMemo, useReducer } from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { ThemeProvider } from './contexts/ThemeContext';\nimport { AlgorithmProvider } from './contexts/AlgorithmContext';\nimport { ConfigurationProvider } from './contexts/ConfigurationContext';\n\n// Core components\nimport SortingVisualizer from './components/SortingVisualizer';\nimport AlgorithmComparison from './components/AlgorithmComparison';\nimport AlgorithmSelector from './components/AlgorithmSelector';\nimport PerformanceMetrics from './components/PerformanceMetrics';\nimport EducationalPanel from './components/EducationalPanel';\nimport AppHeader from './components/AppHeader';\nimport AppFooter from './components/AppFooter';\n\n// Algorithm imports - grouped by category\nimport {\n// Comparison-based algorithms\nBubbleSort, CocktailShakerSort, CombSort, CycleSort, GnomeSort, HeapSort, InsertionSort, BinaryInsertionSort, IntroSort, MergeSort, OddEvenSort, QuickSort, SelectionSort, ShellSort, TimSort } from './algorithms/comparison';\nimport {\n// Distribution-based algorithms\nBucketSort, CountingSort, PigeonholeSort, RadixSort } from './algorithms/distribution';\nimport {\n// Network/Parallel algorithms\nBitonicSort, OddEvenMergeSort } from './algorithms/network';\nimport {\n// Special-case algorithms\nBogoSort, PancakeSort } from './algorithms/special';\nimport {\n// Selection algorithms\nQuickSelect, MedianOfMedians } from './algorithms/selection';\n\n// Styles and utilities\nimport './styles/App.css';\nimport { algorithmDiscovery } from './utils/algorithm-discovery';\nimport { ErrorFallback } from './components/ErrorFallback';\n\n/**\n * Application state reducer for centralized state management\n * @param {Object} state - Current application state\n * @param {Object} action - Action to perform\n * @returns {Object} New application state\n */\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case 'SET_ACTIVE_VIEW':\n      return {\n        ...state,\n        activeView: action.payload\n      };\n    case 'SET_ACTIVE_ALGORITHM':\n      return {\n        ...state,\n        activeAlgorithm: action.payload\n      };\n    case 'SET_ALGORITHM_OPTIONS':\n      return {\n        ...state,\n        algorithmOptions: {\n          ...state.algorithmOptions,\n          ...action.payload\n        }\n      };\n    case 'SET_VISUALIZATION_OPTIONS':\n      return {\n        ...state,\n        visualizationOptions: {\n          ...state.visualizationOptions,\n          ...action.payload\n        }\n      };\n    case 'TOGGLE_EDUCATIONAL_PANEL':\n      return {\n        ...state,\n        showEducationalPanel: !state.showEducationalPanel\n      };\n    case 'SET_THEME':\n      return {\n        ...state,\n        theme: action.payload\n      };\n    case 'SET_PERFORMANCE_METRICS':\n      return {\n        ...state,\n        performanceMetrics: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      console.warn(`Unknown action type: ${action.type}`);\n      return state;\n  }\n}\n\n/**\n * Initial application state with default configurations\n */\nconst initialState = {\n  activeView: 'visualizer',\n  // 'visualizer', 'comparison', 'educational'\n  activeAlgorithm: 'merge-sort',\n  algorithmOptions: {\n    // Default algorithm parameters\n    visualizeHeap: true,\n    adaptiveOptimization: true,\n    insertionThreshold: 10,\n    pivotStrategy: 'median-of-three'\n  },\n  visualizationOptions: {\n    // Default visualization settings\n    colorScheme: 'spectrum',\n    barWidth: 6,\n    spacing: 2,\n    animationSpeed: 1,\n    showIndices: false,\n    effectMode: 1\n  },\n  showEducationalPanel: true,\n  theme: 'light',\n  performanceMetrics: null,\n  error: null\n};\n\n/**\n * Main Application Component\n * Orchestrates the entire algorithm visualization platform\n * \n * @component\n * @returns {JSX.Element} The rendered application\n */\nfunction App() {\n  var _algorithmRegistry$ac;\n  // State management using reducer for complex state logic\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Destructure state for easier access\n  const {\n    activeView,\n    activeAlgorithm,\n    algorithmOptions,\n    visualizationOptions,\n    showEducationalPanel,\n    theme,\n    performanceMetrics,\n    error\n  } = state;\n\n  /**\n   * Comprehensive algorithm registry with metadata\n   * Maps algorithm IDs to their class constructors and configuration\n   */\n  const algorithmRegistry = useMemo(() => {\n    return {\n      // Comparison-based algorithms\n      'bubble-sort': {\n        name: 'Bubble Sort',\n        category: 'comparison',\n        constructor: BubbleSort,\n        defaultOptions: {\n          optimize: true,\n          adaptive: true\n        }\n      },\n      'cocktail-shaker-sort': {\n        name: 'Cocktail Shaker Sort',\n        category: 'comparison',\n        constructor: CocktailShakerSort,\n        defaultOptions: {\n          earlyTermination: true\n        }\n      },\n      'comb-sort': {\n        name: 'Comb Sort',\n        category: 'comparison',\n        constructor: CombSort,\n        defaultOptions: {\n          shrinkFactor: 1.3\n        }\n      },\n      'cycle-sort': {\n        name: 'Cycle Sort',\n        category: 'comparison',\n        constructor: CycleSort,\n        defaultOptions: {}\n      },\n      'gnome-sort': {\n        name: 'Gnome Sort',\n        category: 'comparison',\n        constructor: GnomeSort,\n        defaultOptions: {\n          optimized: true\n        }\n      },\n      'heap-sort': {\n        name: 'Heap Sort',\n        category: 'comparison',\n        constructor: HeapSort,\n        defaultOptions: {\n          visualizeHeap: true,\n          optimizeLeafChecks: true\n        }\n      },\n      'insertion-sort': {\n        name: 'Insertion Sort',\n        category: 'comparison',\n        constructor: InsertionSort,\n        defaultOptions: {}\n      },\n      'binary-insertion-sort': {\n        name: 'Binary Insertion Sort',\n        category: 'comparison',\n        constructor: BinaryInsertionSort,\n        defaultOptions: {}\n      },\n      'intro-sort': {\n        name: 'Intro Sort',\n        category: 'comparison',\n        constructor: IntroSort,\n        defaultOptions: {\n          depthLimit: 16,\n          insertionThreshold: 16\n        }\n      },\n      'merge-sort': {\n        name: 'Merge Sort',\n        category: 'comparison',\n        constructor: MergeSort,\n        defaultOptions: {\n          adaptive: true,\n          insertionThreshold: 10,\n          optimizeMerge: true\n        }\n      },\n      'odd-even-sort': {\n        name: 'Odd-Even Sort',\n        category: 'comparison',\n        constructor: OddEvenSort,\n        defaultOptions: {}\n      },\n      'quick-sort': {\n        name: 'Quick Sort',\n        category: 'comparison',\n        constructor: QuickSort,\n        defaultOptions: {\n          pivotStrategy: 'median-of-three',\n          insertionThreshold: 10,\n          threeWayPartition: true\n        }\n      },\n      'selection-sort': {\n        name: 'Selection Sort',\n        category: 'comparison',\n        constructor: SelectionSort,\n        defaultOptions: {}\n      },\n      'shell-sort': {\n        name: 'Shell Sort',\n        category: 'comparison',\n        constructor: ShellSort,\n        defaultOptions: {\n          gapSequence: 'sedgewick'\n        }\n      },\n      'tim-sort': {\n        name: 'Tim Sort',\n        category: 'comparison',\n        constructor: TimSort,\n        defaultOptions: {\n          minRun: 32,\n          galloping: true\n        }\n      },\n      // Distribution algorithms\n      'bucket-sort': {\n        name: 'Bucket Sort',\n        category: 'distribution',\n        constructor: BucketSort,\n        defaultOptions: {\n          bucketCount: 10,\n          subAlgorithm: 'insertion-sort'\n        }\n      },\n      'counting-sort': {\n        name: 'Counting Sort',\n        category: 'distribution',\n        constructor: CountingSort,\n        defaultOptions: {}\n      },\n      'pigeonhole-sort': {\n        name: 'Pigeonhole Sort',\n        category: 'distribution',\n        constructor: PigeonholeSort,\n        defaultOptions: {}\n      },\n      'radix-sort': {\n        name: 'Radix Sort',\n        category: 'distribution',\n        constructor: RadixSort,\n        defaultOptions: {\n          radix: 10,\n          mostSignificantDigit: false\n        }\n      },\n      // Network algorithms\n      'bitonic-sort': {\n        name: 'Bitonic Sort',\n        category: 'network',\n        constructor: BitonicSort,\n        defaultOptions: {\n          visualizeNetwork: true\n        }\n      },\n      'odd-even-merge-sort': {\n        name: 'Odd-Even Merge Sort',\n        category: 'network',\n        constructor: OddEvenMergeSort,\n        defaultOptions: {}\n      },\n      // Special algorithms\n      'bogo-sort': {\n        name: 'Bogo Sort',\n        category: 'special',\n        constructor: BogoSort,\n        defaultOptions: {\n          deterministic: false\n        }\n      },\n      'pancake-sort': {\n        name: 'Pancake Sort',\n        category: 'special',\n        constructor: PancakeSort,\n        defaultOptions: {}\n      },\n      // Selection algorithms\n      'quick-select': {\n        name: 'Quick Select',\n        category: 'selection',\n        constructor: QuickSelect,\n        defaultOptions: {\n          pivotStrategy: 'median-of-three'\n        }\n      },\n      'median-of-medians': {\n        name: 'Median of Medians',\n        category: 'selection',\n        constructor: MedianOfMedians,\n        defaultOptions: {}\n      }\n    };\n  }, []);\n\n  /**\n   * Categorized algorithm lists for UI organization\n   * Generated based on algorithm registry\n   */\n  const algorithmCategories = useMemo(() => {\n    const categories = {\n      comparison: {\n        name: 'Comparison Sorts',\n        algorithms: []\n      },\n      distribution: {\n        name: 'Distribution Sorts',\n        algorithms: []\n      },\n      network: {\n        name: 'Network/Parallel Sorts',\n        algorithms: []\n      },\n      special: {\n        name: 'Special-Case Sorts',\n        algorithms: []\n      },\n      selection: {\n        name: 'Selection Algorithms',\n        algorithms: []\n      }\n    };\n\n    // Populate categories with algorithms\n    Object.entries(algorithmRegistry).forEach(([id, info]) => {\n      if (categories[info.category]) {\n        categories[info.category].algorithms.push({\n          id,\n          name: info.name\n        });\n      }\n    });\n    return categories;\n  }, [algorithmRegistry]);\n\n  /**\n   * Create the current algorithm instance based on selected algorithm\n   * Memoized to prevent unnecessary reinstantiation\n   */\n  const currentAlgorithm = useMemo(() => {\n    try {\n      const algorithmInfo = algorithmRegistry[activeAlgorithm];\n      if (!algorithmInfo) {\n        console.error(`Algorithm not found: ${activeAlgorithm}`);\n        return null;\n      }\n\n      // Merge default options with user-configured options\n      const mergedOptions = {\n        ...algorithmInfo.defaultOptions,\n        ...algorithmOptions\n      };\n\n      // Instantiate the algorithm with configured options\n      return new algorithmInfo.constructor(mergedOptions);\n    } catch (error) {\n      console.error(`Error creating algorithm instance: ${error.message}`);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: `Failed to initialize algorithm: ${error.message}`\n      });\n      return null;\n    }\n  }, [algorithmRegistry, activeAlgorithm, algorithmOptions]);\n\n  /**\n   * Handle algorithm selection change\n   * @param {string} algorithmId - ID of the selected algorithm\n   */\n  const handleAlgorithmChange = useCallback(algorithmId => {\n    if (algorithmRegistry[algorithmId]) {\n      dispatch({\n        type: 'SET_ACTIVE_ALGORITHM',\n        payload: algorithmId\n      });\n\n      // Reset algorithm options to defaults\n      const defaultOptions = algorithmRegistry[algorithmId].defaultOptions;\n      dispatch({\n        type: 'SET_ALGORITHM_OPTIONS',\n        payload: defaultOptions\n      });\n    } else {\n      console.error(`Unknown algorithm: ${algorithmId}`);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: `Unknown algorithm: ${algorithmId}. Please select a valid algorithm.`\n      });\n    }\n  }, [algorithmRegistry]);\n\n  /**\n   * Handle view mode change\n   * @param {string} view - New view mode to display\n   */\n  const handleViewChange = useCallback(view => {\n    if (['visualizer', 'comparison', 'educational'].includes(view)) {\n      dispatch({\n        type: 'SET_ACTIVE_VIEW',\n        payload: view\n      });\n    } else {\n      console.error(`Unknown view: ${view}`);\n    }\n  }, []);\n\n  /**\n   * Update algorithm configuration options\n   * @param {Object} options - New algorithm options to apply\n   */\n  const handleAlgorithmOptionsChange = useCallback(options => {\n    dispatch({\n      type: 'SET_ALGORITHM_OPTIONS',\n      payload: options\n    });\n  }, []);\n\n  /**\n   * Update visualization configuration\n   * @param {Object} options - New visualization options to apply\n   */\n  const handleVisualizationOptionsChange = useCallback(options => {\n    dispatch({\n      type: 'SET_VISUALIZATION_OPTIONS',\n      payload: options\n    });\n  }, []);\n\n  /**\n   * Callback to receive performance metrics from visualizer component\n   * @param {Object} metrics - Performance metrics data\n   */\n  const handleMetricsUpdate = useCallback(metrics => {\n    dispatch({\n      type: 'SET_PERFORMANCE_METRICS',\n      payload: metrics\n    });\n  }, []);\n\n  /**\n   * Toggle educational panel visibility\n   */\n  const toggleEducationalPanel = useCallback(() => {\n    dispatch({\n      type: 'TOGGLE_EDUCATIONAL_PANEL'\n    });\n  }, []);\n\n  /**\n   * Handle theme change\n   * @param {string} newTheme - Theme to apply ('light' or 'dark')\n   */\n  const handleThemeChange = useCallback(newTheme => {\n    if (['light', 'dark'].includes(newTheme)) {\n      dispatch({\n        type: 'SET_THEME',\n        payload: newTheme\n      });\n      // Apply theme to document\n      document.documentElement.setAttribute('data-theme', newTheme);\n    }\n  }, []);\n\n  /**\n   * Handle error dismissal\n   */\n  const handleDismissError = useCallback(() => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  }, []);\n\n  /**\n   * Effect to apply theme to document\n   */\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  /**\n   * Custom error handler for the error boundary\n   * @param {Error} error - The error that was caught\n   * @param {Object} info - Additional error information\n   */\n  const handleError = useCallback((error, info) => {\n    console.error(\"Caught an error:\", error, info);\n    dispatch({\n      type: 'SET_ERROR',\n      payload: `Application error: ${error.message}. Please refresh the page.`\n    });\n  }, []);\n\n  // Context values for provider components\n  const algorithmContextValue = useMemo(() => ({\n    currentAlgorithm,\n    algorithmRegistry,\n    algorithmCategories,\n    activeAlgorithm,\n    algorithmOptions,\n    onAlgorithmChange: handleAlgorithmChange,\n    onOptionsChange: handleAlgorithmOptionsChange\n  }), [currentAlgorithm, algorithmRegistry, algorithmCategories, activeAlgorithm, algorithmOptions, handleAlgorithmChange, handleAlgorithmOptionsChange]);\n  const configContextValue = useMemo(() => ({\n    visualizationOptions,\n    onOptionsChange: handleVisualizationOptionsChange,\n    performanceMetrics,\n    onMetricsUpdate: handleMetricsUpdate\n  }), [visualizationOptions, handleVisualizationOptionsChange, performanceMetrics, handleMetricsUpdate]);\n  const themeContextValue = useMemo(() => ({\n    theme,\n    onThemeChange: handleThemeChange\n  }), [theme, handleThemeChange]);\n  return /*#__PURE__*/React.createElement(ErrorBoundary, {\n    FallbackComponent: ErrorFallback,\n    onError: handleError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    value: themeContextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AlgorithmProvider, {\n    value: algorithmContextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ConfigurationProvider, {\n    value: configContextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `App ${theme}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    activeView: activeView,\n    onViewChange: handleViewChange,\n    onThemeChange: handleThemeChange,\n    currentTheme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 15\n    }\n  }, error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-notification\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 21\n    }\n  }, error), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDismissError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 21\n    }\n  }, \"Dismiss\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AlgorithmSelector, {\n    categories: algorithmCategories,\n    activeAlgorithm: activeAlgorithm,\n    onAlgorithmChange: handleAlgorithmChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 19\n    }\n  }), performanceMetrics && /*#__PURE__*/React.createElement(PerformanceMetrics, {\n    metrics: performanceMetrics,\n    algorithmInfo: currentAlgorithm === null || currentAlgorithm === void 0 ? void 0 : currentAlgorithm.getInfo(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 17\n    }\n  }, activeView === 'visualizer' && currentAlgorithm && /*#__PURE__*/React.createElement(SortingVisualizer, {\n    algorithm: currentAlgorithm,\n    options: visualizationOptions,\n    onMetricsUpdate: handleMetricsUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 21\n    }\n  }), activeView === 'comparison' && /*#__PURE__*/React.createElement(AlgorithmComparison, {\n    algorithmId: activeAlgorithm,\n    options: {\n      ...algorithmOptions,\n      visualization: visualizationOptions\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 21\n    }\n  }), activeView === 'educational' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"educational-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 23\n    }\n  }, \"Educational Content for \", (_algorithmRegistry$ac = algorithmRegistry[activeAlgorithm]) === null || _algorithmRegistry$ac === void 0 ? void 0 : _algorithmRegistry$ac.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 23\n    }\n  }, \"This section will contain detailed explanations and interactive learning materials.\"))), showEducationalPanel && currentAlgorithm && /*#__PURE__*/React.createElement(EducationalPanel, {\n    algorithm: currentAlgorithm,\n    onClose: toggleEducationalPanel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(AppFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 15\n    }\n  }))))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useReducer","ErrorBoundary","ThemeProvider","AlgorithmProvider","ConfigurationProvider","SortingVisualizer","AlgorithmComparison","AlgorithmSelector","PerformanceMetrics","EducationalPanel","AppHeader","AppFooter","BubbleSort","CocktailShakerSort","CombSort","CycleSort","GnomeSort","HeapSort","InsertionSort","BinaryInsertionSort","IntroSort","MergeSort","OddEvenSort","QuickSort","SelectionSort","ShellSort","TimSort","BucketSort","CountingSort","PigeonholeSort","RadixSort","BitonicSort","OddEvenMergeSort","BogoSort","PancakeSort","QuickSelect","MedianOfMedians","algorithmDiscovery","ErrorFallback","appReducer","state","action","type","activeView","payload","activeAlgorithm","algorithmOptions","visualizationOptions","showEducationalPanel","theme","performanceMetrics","error","console","warn","initialState","visualizeHeap","adaptiveOptimization","insertionThreshold","pivotStrategy","colorScheme","barWidth","spacing","animationSpeed","showIndices","effectMode","App","_algorithmRegistry$ac","dispatch","algorithmRegistry","name","category","constructor","defaultOptions","optimize","adaptive","earlyTermination","shrinkFactor","optimized","optimizeLeafChecks","depthLimit","optimizeMerge","threeWayPartition","gapSequence","minRun","galloping","bucketCount","subAlgorithm","radix","mostSignificantDigit","visualizeNetwork","deterministic","algorithmCategories","categories","comparison","algorithms","distribution","network","special","selection","Object","entries","forEach","id","info","push","currentAlgorithm","algorithmInfo","mergedOptions","message","handleAlgorithmChange","algorithmId","handleViewChange","view","includes","handleAlgorithmOptionsChange","options","handleVisualizationOptionsChange","handleMetricsUpdate","metrics","toggleEducationalPanel","handleThemeChange","newTheme","document","documentElement","setAttribute","handleDismissError","handleError","algorithmContextValue","onAlgorithmChange","onOptionsChange","configContextValue","onMetricsUpdate","themeContextValue","onThemeChange","createElement","FallbackComponent","onError","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","value","className","onViewChange","currentTheme","onClick","getInfo","algorithm","visualization","onClose"],"sources":["/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/App.js"],"sourcesContent":["// src/App.js\n\n/**\n * @file Main Application Component for Advanced Sorting Algorithm Visualization Platform\n * @author Advanced Algorithm Visualization Team\n * @version 2.0.0\n * @license MIT\n * \n * @description\n * Central orchestration component for the Advanced Sorting Algorithm Visualization Platform.\n * This component implements a sophisticated architecture that integrates visualization,\n * comparison, and educational features into a cohesive learning environment.\n * \n * The application employs a modular design pattern with:\n * - Hierarchical component composition\n * - Context-based state management\n * - Controlled algorithm injection\n * - Dynamic feature discovery and rendering\n * - Educational content integration\n * \n * Architectural design principles:\n * - Separation of concerns between algorithms, visualization, and application state\n * - Immutable data flow to prevent side effects\n * - Optimized rendering pipeline for high-performance visualization\n * - Progressive disclosure of complexity for educational purposes\n */\n\nimport React, { useState, useEffect, useCallback, useMemo, useReducer } from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { ThemeProvider } from './contexts/ThemeContext';\nimport { AlgorithmProvider } from './contexts/AlgorithmContext';\nimport { ConfigurationProvider } from './contexts/ConfigurationContext';\n\n// Core components\nimport SortingVisualizer from './components/SortingVisualizer';\nimport AlgorithmComparison from './components/AlgorithmComparison';\nimport AlgorithmSelector from './components/AlgorithmSelector';\nimport PerformanceMetrics from './components/PerformanceMetrics';\nimport EducationalPanel from './components/EducationalPanel';\nimport AppHeader from './components/AppHeader';\nimport AppFooter from './components/AppFooter';\n\n// Algorithm imports - grouped by category\nimport {\n  // Comparison-based algorithms\n  BubbleSort, CocktailShakerSort, CombSort, CycleSort,\n  GnomeSort, HeapSort, InsertionSort, BinaryInsertionSort,\n  IntroSort, MergeSort, OddEvenSort, QuickSort,\n  SelectionSort, ShellSort, TimSort\n} from './algorithms/comparison';\n\nimport {\n  // Distribution-based algorithms\n  BucketSort, CountingSort, PigeonholeSort, RadixSort\n} from './algorithms/distribution';\n\nimport {\n  // Network/Parallel algorithms\n  BitonicSort, OddEvenMergeSort\n} from './algorithms/network';\n\nimport {\n  // Special-case algorithms\n  BogoSort, PancakeSort\n} from './algorithms/special';\n\nimport {\n  // Selection algorithms\n  QuickSelect, MedianOfMedians\n} from './algorithms/selection';\n\n// Styles and utilities\nimport './styles/App.css';\nimport { algorithmDiscovery } from './utils/algorithm-discovery';\nimport { ErrorFallback } from './components/ErrorFallback';\n\n/**\n * Application state reducer for centralized state management\n * @param {Object} state - Current application state\n * @param {Object} action - Action to perform\n * @returns {Object} New application state\n */\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case 'SET_ACTIVE_VIEW':\n      return { ...state, activeView: action.payload };\n    case 'SET_ACTIVE_ALGORITHM':\n      return { ...state, activeAlgorithm: action.payload };\n    case 'SET_ALGORITHM_OPTIONS':\n      return { \n        ...state, \n        algorithmOptions: { ...state.algorithmOptions, ...action.payload } \n      };\n    case 'SET_VISUALIZATION_OPTIONS':\n      return { \n        ...state, \n        visualizationOptions: { ...state.visualizationOptions, ...action.payload } \n      };\n    case 'TOGGLE_EDUCATIONAL_PANEL':\n      return { ...state, showEducationalPanel: !state.showEducationalPanel };\n    case 'SET_THEME':\n      return { ...state, theme: action.payload };\n    case 'SET_PERFORMANCE_METRICS':\n      return { ...state, performanceMetrics: action.payload };\n    case 'SET_ERROR':\n      return { ...state, error: action.payload };\n    case 'CLEAR_ERROR':\n      return { ...state, error: null };\n    default:\n      console.warn(`Unknown action type: ${action.type}`);\n      return state;\n  }\n}\n\n/**\n * Initial application state with default configurations\n */\nconst initialState = {\n  activeView: 'visualizer', // 'visualizer', 'comparison', 'educational'\n  activeAlgorithm: 'merge-sort',\n  algorithmOptions: {\n    // Default algorithm parameters\n    visualizeHeap: true,\n    adaptiveOptimization: true,\n    insertionThreshold: 10,\n    pivotStrategy: 'median-of-three'\n  },\n  visualizationOptions: {\n    // Default visualization settings\n    colorScheme: 'spectrum',\n    barWidth: 6,\n    spacing: 2,\n    animationSpeed: 1,\n    showIndices: false,\n    effectMode: 1\n  },\n  showEducationalPanel: true,\n  theme: 'light',\n  performanceMetrics: null,\n  error: null\n};\n\n/**\n * Main Application Component\n * Orchestrates the entire algorithm visualization platform\n * \n * @component\n * @returns {JSX.Element} The rendered application\n */\nfunction App() {\n  // State management using reducer for complex state logic\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  \n  // Destructure state for easier access\n  const {\n    activeView,\n    activeAlgorithm,\n    algorithmOptions,\n    visualizationOptions,\n    showEducationalPanel,\n    theme,\n    performanceMetrics,\n    error\n  } = state;\n\n  /**\n   * Comprehensive algorithm registry with metadata\n   * Maps algorithm IDs to their class constructors and configuration\n   */\n  const algorithmRegistry = useMemo(() => {\n    return {\n      // Comparison-based algorithms\n      'bubble-sort': {\n        name: 'Bubble Sort',\n        category: 'comparison',\n        constructor: BubbleSort,\n        defaultOptions: { optimize: true, adaptive: true }\n      },\n      'cocktail-shaker-sort': {\n        name: 'Cocktail Shaker Sort',\n        category: 'comparison',\n        constructor: CocktailShakerSort,\n        defaultOptions: { earlyTermination: true }\n      },\n      'comb-sort': {\n        name: 'Comb Sort',\n        category: 'comparison',\n        constructor: CombSort,\n        defaultOptions: { shrinkFactor: 1.3 }\n      },\n      'cycle-sort': {\n        name: 'Cycle Sort',\n        category: 'comparison',\n        constructor: CycleSort,\n        defaultOptions: { }\n      },\n      'gnome-sort': {\n        name: 'Gnome Sort',\n        category: 'comparison',\n        constructor: GnomeSort,\n        defaultOptions: { optimized: true }\n      },\n      'heap-sort': {\n        name: 'Heap Sort',\n        category: 'comparison',\n        constructor: HeapSort,\n        defaultOptions: { visualizeHeap: true, optimizeLeafChecks: true }\n      },\n      'insertion-sort': {\n        name: 'Insertion Sort',\n        category: 'comparison',\n        constructor: InsertionSort,\n        defaultOptions: { }\n      },\n      'binary-insertion-sort': {\n        name: 'Binary Insertion Sort',\n        category: 'comparison',\n        constructor: BinaryInsertionSort,\n        defaultOptions: { }\n      },\n      'intro-sort': {\n        name: 'Intro Sort',\n        category: 'comparison',\n        constructor: IntroSort,\n        defaultOptions: { depthLimit: 16, insertionThreshold: 16 }\n      },\n      'merge-sort': {\n        name: 'Merge Sort',\n        category: 'comparison',\n        constructor: MergeSort,\n        defaultOptions: { adaptive: true, insertionThreshold: 10, optimizeMerge: true }\n      },\n      'odd-even-sort': {\n        name: 'Odd-Even Sort',\n        category: 'comparison',\n        constructor: OddEvenSort,\n        defaultOptions: { }\n      },\n      'quick-sort': {\n        name: 'Quick Sort',\n        category: 'comparison',\n        constructor: QuickSort,\n        defaultOptions: { \n          pivotStrategy: 'median-of-three', \n          insertionThreshold: 10,\n          threeWayPartition: true\n        }\n      },\n      'selection-sort': {\n        name: 'Selection Sort',\n        category: 'comparison',\n        constructor: SelectionSort,\n        defaultOptions: { }\n      },\n      'shell-sort': {\n        name: 'Shell Sort',\n        category: 'comparison',\n        constructor: ShellSort,\n        defaultOptions: { gapSequence: 'sedgewick' }\n      },\n      'tim-sort': {\n        name: 'Tim Sort',\n        category: 'comparison',\n        constructor: TimSort,\n        defaultOptions: { minRun: 32, galloping: true }\n      },\n      \n      // Distribution algorithms\n      'bucket-sort': {\n        name: 'Bucket Sort',\n        category: 'distribution',\n        constructor: BucketSort,\n        defaultOptions: { bucketCount: 10, subAlgorithm: 'insertion-sort' }\n      },\n      'counting-sort': {\n        name: 'Counting Sort',\n        category: 'distribution',\n        constructor: CountingSort,\n        defaultOptions: { }\n      },\n      'pigeonhole-sort': {\n        name: 'Pigeonhole Sort',\n        category: 'distribution',\n        constructor: PigeonholeSort,\n        defaultOptions: { }\n      },\n      'radix-sort': {\n        name: 'Radix Sort',\n        category: 'distribution',\n        constructor: RadixSort,\n        defaultOptions: { radix: 10, mostSignificantDigit: false }\n      },\n      \n      // Network algorithms\n      'bitonic-sort': {\n        name: 'Bitonic Sort',\n        category: 'network',\n        constructor: BitonicSort,\n        defaultOptions: { visualizeNetwork: true }\n      },\n      'odd-even-merge-sort': {\n        name: 'Odd-Even Merge Sort',\n        category: 'network',\n        constructor: OddEvenMergeSort,\n        defaultOptions: { }\n      },\n      \n      // Special algorithms\n      'bogo-sort': {\n        name: 'Bogo Sort',\n        category: 'special',\n        constructor: BogoSort,\n        defaultOptions: { deterministic: false }\n      },\n      'pancake-sort': {\n        name: 'Pancake Sort',\n        category: 'special',\n        constructor: PancakeSort,\n        defaultOptions: { }\n      },\n      \n      // Selection algorithms\n      'quick-select': {\n        name: 'Quick Select',\n        category: 'selection',\n        constructor: QuickSelect,\n        defaultOptions: { pivotStrategy: 'median-of-three' }\n      },\n      'median-of-medians': {\n        name: 'Median of Medians',\n        category: 'selection',\n        constructor: MedianOfMedians,\n        defaultOptions: { }\n      }\n    };\n  }, []);\n\n  /**\n   * Categorized algorithm lists for UI organization\n   * Generated based on algorithm registry\n   */\n  const algorithmCategories = useMemo(() => {\n    const categories = {\n      comparison: { name: 'Comparison Sorts', algorithms: [] },\n      distribution: { name: 'Distribution Sorts', algorithms: [] },\n      network: { name: 'Network/Parallel Sorts', algorithms: [] },\n      special: { name: 'Special-Case Sorts', algorithms: [] },\n      selection: { name: 'Selection Algorithms', algorithms: [] }\n    };\n    \n    // Populate categories with algorithms\n    Object.entries(algorithmRegistry).forEach(([id, info]) => {\n      if (categories[info.category]) {\n        categories[info.category].algorithms.push({\n          id,\n          name: info.name\n        });\n      }\n    });\n    \n    return categories;\n  }, [algorithmRegistry]);\n\n  /**\n   * Create the current algorithm instance based on selected algorithm\n   * Memoized to prevent unnecessary reinstantiation\n   */\n  const currentAlgorithm = useMemo(() => {\n    try {\n      const algorithmInfo = algorithmRegistry[activeAlgorithm];\n      \n      if (!algorithmInfo) {\n        console.error(`Algorithm not found: ${activeAlgorithm}`);\n        return null;\n      }\n      \n      // Merge default options with user-configured options\n      const mergedOptions = {\n        ...algorithmInfo.defaultOptions,\n        ...algorithmOptions\n      };\n      \n      // Instantiate the algorithm with configured options\n      return new algorithmInfo.constructor(mergedOptions);\n    } catch (error) {\n      console.error(`Error creating algorithm instance: ${error.message}`);\n      dispatch({ type: 'SET_ERROR', payload: `Failed to initialize algorithm: ${error.message}` });\n      return null;\n    }\n  }, [algorithmRegistry, activeAlgorithm, algorithmOptions]);\n\n  /**\n   * Handle algorithm selection change\n   * @param {string} algorithmId - ID of the selected algorithm\n   */\n  const handleAlgorithmChange = useCallback((algorithmId) => {\n    if (algorithmRegistry[algorithmId]) {\n      dispatch({ type: 'SET_ACTIVE_ALGORITHM', payload: algorithmId });\n      \n      // Reset algorithm options to defaults\n      const defaultOptions = algorithmRegistry[algorithmId].defaultOptions;\n      dispatch({ type: 'SET_ALGORITHM_OPTIONS', payload: defaultOptions });\n    } else {\n      console.error(`Unknown algorithm: ${algorithmId}`);\n      dispatch({ \n        type: 'SET_ERROR', \n        payload: `Unknown algorithm: ${algorithmId}. Please select a valid algorithm.` \n      });\n    }\n  }, [algorithmRegistry]);\n\n  /**\n   * Handle view mode change\n   * @param {string} view - New view mode to display\n   */\n  const handleViewChange = useCallback((view) => {\n    if (['visualizer', 'comparison', 'educational'].includes(view)) {\n      dispatch({ type: 'SET_ACTIVE_VIEW', payload: view });\n    } else {\n      console.error(`Unknown view: ${view}`);\n    }\n  }, []);\n\n  /**\n   * Update algorithm configuration options\n   * @param {Object} options - New algorithm options to apply\n   */\n  const handleAlgorithmOptionsChange = useCallback((options) => {\n    dispatch({ type: 'SET_ALGORITHM_OPTIONS', payload: options });\n  }, []);\n\n  /**\n   * Update visualization configuration\n   * @param {Object} options - New visualization options to apply\n   */\n  const handleVisualizationOptionsChange = useCallback((options) => {\n    dispatch({ type: 'SET_VISUALIZATION_OPTIONS', payload: options });\n  }, []);\n\n  /**\n   * Callback to receive performance metrics from visualizer component\n   * @param {Object} metrics - Performance metrics data\n   */\n  const handleMetricsUpdate = useCallback((metrics) => {\n    dispatch({ type: 'SET_PERFORMANCE_METRICS', payload: metrics });\n  }, []);\n\n  /**\n   * Toggle educational panel visibility\n   */\n  const toggleEducationalPanel = useCallback(() => {\n    dispatch({ type: 'TOGGLE_EDUCATIONAL_PANEL' });\n  }, []);\n\n  /**\n   * Handle theme change\n   * @param {string} newTheme - Theme to apply ('light' or 'dark')\n   */\n  const handleThemeChange = useCallback((newTheme) => {\n    if (['light', 'dark'].includes(newTheme)) {\n      dispatch({ type: 'SET_THEME', payload: newTheme });\n      // Apply theme to document\n      document.documentElement.setAttribute('data-theme', newTheme);\n    }\n  }, []);\n\n  /**\n   * Handle error dismissal\n   */\n  const handleDismissError = useCallback(() => {\n    dispatch({ type: 'CLEAR_ERROR' });\n  }, []);\n\n  /**\n   * Effect to apply theme to document\n   */\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  /**\n   * Custom error handler for the error boundary\n   * @param {Error} error - The error that was caught\n   * @param {Object} info - Additional error information\n   */\n  const handleError = useCallback((error, info) => {\n    console.error(\"Caught an error:\", error, info);\n    dispatch({ \n      type: 'SET_ERROR', \n      payload: `Application error: ${error.message}. Please refresh the page.` \n    });\n  }, []);\n\n  // Context values for provider components\n  const algorithmContextValue = useMemo(() => ({\n    currentAlgorithm,\n    algorithmRegistry,\n    algorithmCategories,\n    activeAlgorithm,\n    algorithmOptions,\n    onAlgorithmChange: handleAlgorithmChange,\n    onOptionsChange: handleAlgorithmOptionsChange\n  }), [\n    currentAlgorithm, \n    algorithmRegistry,\n    algorithmCategories,\n    activeAlgorithm, \n    algorithmOptions, \n    handleAlgorithmChange, \n    handleAlgorithmOptionsChange\n  ]);\n\n  const configContextValue = useMemo(() => ({\n    visualizationOptions,\n    onOptionsChange: handleVisualizationOptionsChange,\n    performanceMetrics,\n    onMetricsUpdate: handleMetricsUpdate\n  }), [\n    visualizationOptions, \n    handleVisualizationOptionsChange, \n    performanceMetrics, \n    handleMetricsUpdate\n  ]);\n\n  const themeContextValue = useMemo(() => ({\n    theme,\n    onThemeChange: handleThemeChange\n  }), [theme, handleThemeChange]);\n\n  return (\n    <ErrorBoundary\n      FallbackComponent={ErrorFallback}\n      onError={handleError}\n    >\n      <ThemeProvider value={themeContextValue}>\n        <AlgorithmProvider value={algorithmContextValue}>\n          <ConfigurationProvider value={configContextValue}>\n            <div className={`App ${theme}`}>\n              <AppHeader \n                activeView={activeView}\n                onViewChange={handleViewChange}\n                onThemeChange={handleThemeChange}\n                currentTheme={theme}\n              />\n              \n              <main className=\"App-main\">\n                {/* Error notification */}\n                {error && (\n                  <div className=\"error-notification\">\n                    <p>{error}</p>\n                    <button onClick={handleDismissError}>Dismiss</button>\n                  </div>\n                )}\n                \n                {/* Algorithm selection sidebar */}\n                <div className=\"sidebar\">\n                  <AlgorithmSelector \n                    categories={algorithmCategories}\n                    activeAlgorithm={activeAlgorithm}\n                    onAlgorithmChange={handleAlgorithmChange}\n                  />\n                  \n                  {performanceMetrics && (\n                    <PerformanceMetrics \n                      metrics={performanceMetrics} \n                      algorithmInfo={currentAlgorithm?.getInfo()}\n                    />\n                  )}\n                </div>\n                \n                {/* Main content area */}\n                <div className=\"content-area\">\n                  {activeView === 'visualizer' && currentAlgorithm && (\n                    <SortingVisualizer\n                      algorithm={currentAlgorithm}\n                      options={visualizationOptions}\n                      onMetricsUpdate={handleMetricsUpdate}\n                    />\n                  )}\n                  \n                  {activeView === 'comparison' && (\n                    <AlgorithmComparison\n                      algorithmId={activeAlgorithm}\n                      options={{\n                        ...algorithmOptions,\n                        visualization: visualizationOptions\n                      }}\n                    />\n                  )}\n                  \n                  {activeView === 'educational' && (\n                    <div className=\"educational-view\">\n                      {/* Educational content would go here */}\n                      <h2>Educational Content for {algorithmRegistry[activeAlgorithm]?.name}</h2>\n                      <p>This section will contain detailed explanations and interactive learning materials.</p>\n                    </div>\n                  )}\n                </div>\n                \n                {/* Educational panel (collapsible) */}\n                {showEducationalPanel && currentAlgorithm && (\n                  <EducationalPanel\n                    algorithm={currentAlgorithm}\n                    onClose={toggleEducationalPanel}\n                  />\n                )}\n              </main>\n              \n              <AppFooter />\n            </div>\n          </ConfigurationProvider>\n        </AlgorithmProvider>\n      </ThemeProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAEC,UAAU,QAAQ,OAAO;AACpF,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,qBAAqB,QAAQ,iCAAiC;;AAEvE;AACA,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,mBAAmB,MAAM,kCAAkC;AAClE,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,kBAAkB,MAAM,iCAAiC;AAChE,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;;AAE9C;AACA;AACE;AACAC,UAAU,EAAEC,kBAAkB,EAAEC,QAAQ,EAAEC,SAAS,EACnDC,SAAS,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,mBAAmB,EACvDC,SAAS,EAAEC,SAAS,EAAEC,WAAW,EAAEC,SAAS,EAC5CC,aAAa,EAAEC,SAAS,EAAEC,OAAO,QAC5B,yBAAyB;AAEhC;AACE;AACAC,UAAU,EAAEC,YAAY,EAAEC,cAAc,EAAEC,SAAS,QAC9C,2BAA2B;AAElC;AACE;AACAC,WAAW,EAAEC,gBAAgB,QACxB,sBAAsB;AAE7B;AACE;AACAC,QAAQ,EAAEC,WAAW,QAChB,sBAAsB;AAE7B;AACE;AACAC,WAAW,EAAEC,eAAe,QACvB,wBAAwB;;AAE/B;AACA,OAAO,kBAAkB;AACzB,SAASC,kBAAkB,QAAQ,6BAA6B;AAChE,SAASC,aAAa,QAAQ,4BAA4B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,iBAAiB;MACpB,OAAO;QAAE,GAAGF,KAAK;QAAEG,UAAU,EAAEF,MAAM,CAACG;MAAQ,CAAC;IACjD,KAAK,sBAAsB;MACzB,OAAO;QAAE,GAAGJ,KAAK;QAAEK,eAAe,EAAEJ,MAAM,CAACG;MAAQ,CAAC;IACtD,KAAK,uBAAuB;MAC1B,OAAO;QACL,GAAGJ,KAAK;QACRM,gBAAgB,EAAE;UAAE,GAAGN,KAAK,CAACM,gBAAgB;UAAE,GAAGL,MAAM,CAACG;QAAQ;MACnE,CAAC;IACH,KAAK,2BAA2B;MAC9B,OAAO;QACL,GAAGJ,KAAK;QACRO,oBAAoB,EAAE;UAAE,GAAGP,KAAK,CAACO,oBAAoB;UAAE,GAAGN,MAAM,CAACG;QAAQ;MAC3E,CAAC;IACH,KAAK,0BAA0B;MAC7B,OAAO;QAAE,GAAGJ,KAAK;QAAEQ,oBAAoB,EAAE,CAACR,KAAK,CAACQ;MAAqB,CAAC;IACxE,KAAK,WAAW;MACd,OAAO;QAAE,GAAGR,KAAK;QAAES,KAAK,EAAER,MAAM,CAACG;MAAQ,CAAC;IAC5C,KAAK,yBAAyB;MAC5B,OAAO;QAAE,GAAGJ,KAAK;QAAEU,kBAAkB,EAAET,MAAM,CAACG;MAAQ,CAAC;IACzD,KAAK,WAAW;MACd,OAAO;QAAE,GAAGJ,KAAK;QAAEW,KAAK,EAAEV,MAAM,CAACG;MAAQ,CAAC;IAC5C,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGJ,KAAK;QAAEW,KAAK,EAAE;MAAK,CAAC;IAClC;MACEC,OAAO,CAACC,IAAI,CAAC,wBAAwBZ,MAAM,CAACC,IAAI,EAAE,CAAC;MACnD,OAAOF,KAAK;EAChB;AACF;;AAEA;AACA;AACA;AACA,MAAMc,YAAY,GAAG;EACnBX,UAAU,EAAE,YAAY;EAAE;EAC1BE,eAAe,EAAE,YAAY;EAC7BC,gBAAgB,EAAE;IAChB;IACAS,aAAa,EAAE,IAAI;IACnBC,oBAAoB,EAAE,IAAI;IAC1BC,kBAAkB,EAAE,EAAE;IACtBC,aAAa,EAAE;EACjB,CAAC;EACDX,oBAAoB,EAAE;IACpB;IACAY,WAAW,EAAE,UAAU;IACvBC,QAAQ,EAAE,CAAC;IACXC,OAAO,EAAE,CAAC;IACVC,cAAc,EAAE,CAAC;IACjBC,WAAW,EAAE,KAAK;IAClBC,UAAU,EAAE;EACd,CAAC;EACDhB,oBAAoB,EAAE,IAAI;EAC1BC,KAAK,EAAE,OAAO;EACdC,kBAAkB,EAAE,IAAI;EACxBC,KAAK,EAAE;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASc,GAAGA,CAAA,EAAG;EAAA,IAAAC,qBAAA;EACb;EACA,MAAM,CAAC1B,KAAK,EAAE2B,QAAQ,CAAC,GAAGnE,UAAU,CAACuC,UAAU,EAAEe,YAAY,CAAC;;EAE9D;EACA,MAAM;IACJX,UAAU;IACVE,eAAe;IACfC,gBAAgB;IAChBC,oBAAoB;IACpBC,oBAAoB;IACpBC,KAAK;IACLC,kBAAkB;IAClBC;EACF,CAAC,GAAGX,KAAK;;EAET;AACF;AACA;AACA;EACE,MAAM4B,iBAAiB,GAAGrE,OAAO,CAAC,MAAM;IACtC,OAAO;MACL;MACA,aAAa,EAAE;QACbsE,IAAI,EAAE,aAAa;QACnBC,QAAQ,EAAE,YAAY;QACtBC,WAAW,EAAE3D,UAAU;QACvB4D,cAAc,EAAE;UAAEC,QAAQ,EAAE,IAAI;UAAEC,QAAQ,EAAE;QAAK;MACnD,CAAC;MACD,sBAAsB,EAAE;QACtBL,IAAI,EAAE,sBAAsB;QAC5BC,QAAQ,EAAE,YAAY;QACtBC,WAAW,EAAE1D,kBAAkB;QAC/B2D,cAAc,EAAE;UAAEG,gBAAgB,EAAE;QAAK;MAC3C,CAAC;MACD,WAAW,EAAE;QACXN,IAAI,EAAE,WAAW;QACjBC,QAAQ,EAAE,YAAY;QACtBC,WAAW,EAAEzD,QAAQ;QACrB0D,cAAc,EAAE;UAAEI,YAAY,EAAE;QAAI;MACtC,CAAC;MACD,YAAY,EAAE;QACZP,IAAI,EAAE,YAAY;QAClBC,QAAQ,EAAE,YAAY;QACtBC,WAAW,EAAExD,SAAS;QACtByD,cAAc,EAAE,CAAE;MACpB,CAAC;MACD,YAAY,EAAE;QACZH,IAAI,EAAE,YAAY;QAClBC,QAAQ,EAAE,YAAY;QACtBC,WAAW,EAAEvD,SAAS;QACtBwD,cAAc,EAAE;UAAEK,SAAS,EAAE;QAAK;MACpC,CAAC;MACD,WAAW,EAAE;QACXR,IAAI,EAAE,WAAW;QACjBC,QAAQ,EAAE,YAAY;QACtBC,WAAW,EAAEtD,QAAQ;QACrBuD,cAAc,EAAE;UAAEjB,aAAa,EAAE,IAAI;UAAEuB,kBAAkB,EAAE;QAAK;MAClE,CAAC;MACD,gBAAgB,EAAE;QAChBT,IAAI,EAAE,gBAAgB;QACtBC,QAAQ,EAAE,YAAY;QACtBC,WAAW,EAAErD,aAAa;QAC1BsD,cAAc,EAAE,CAAE;MACpB,CAAC;MACD,uBAAuB,EAAE;QACvBH,IAAI,EAAE,uBAAuB;QAC7BC,QAAQ,EAAE,YAAY;QACtBC,WAAW,EAAEpD,mBAAmB;QAChCqD,cAAc,EAAE,CAAE;MACpB,CAAC;MACD,YAAY,EAAE;QACZH,IAAI,EAAE,YAAY;QAClBC,QAAQ,EAAE,YAAY;QACtBC,WAAW,EAAEnD,SAAS;QACtBoD,cAAc,EAAE;UAAEO,UAAU,EAAE,EAAE;UAAEtB,kBAAkB,EAAE;QAAG;MAC3D,CAAC;MACD,YAAY,EAAE;QACZY,IAAI,EAAE,YAAY;QAClBC,QAAQ,EAAE,YAAY;QACtBC,WAAW,EAAElD,SAAS;QACtBmD,cAAc,EAAE;UAAEE,QAAQ,EAAE,IAAI;UAAEjB,kBAAkB,EAAE,EAAE;UAAEuB,aAAa,EAAE;QAAK;MAChF,CAAC;MACD,eAAe,EAAE;QACfX,IAAI,EAAE,eAAe;QACrBC,QAAQ,EAAE,YAAY;QACtBC,WAAW,EAAEjD,WAAW;QACxBkD,cAAc,EAAE,CAAE;MACpB,CAAC;MACD,YAAY,EAAE;QACZH,IAAI,EAAE,YAAY;QAClBC,QAAQ,EAAE,YAAY;QACtBC,WAAW,EAAEhD,SAAS;QACtBiD,cAAc,EAAE;UACdd,aAAa,EAAE,iBAAiB;UAChCD,kBAAkB,EAAE,EAAE;UACtBwB,iBAAiB,EAAE;QACrB;MACF,CAAC;MACD,gBAAgB,EAAE;QAChBZ,IAAI,EAAE,gBAAgB;QACtBC,QAAQ,EAAE,YAAY;QACtBC,WAAW,EAAE/C,aAAa;QAC1BgD,cAAc,EAAE,CAAE;MACpB,CAAC;MACD,YAAY,EAAE;QACZH,IAAI,EAAE,YAAY;QAClBC,QAAQ,EAAE,YAAY;QACtBC,WAAW,EAAE9C,SAAS;QACtB+C,cAAc,EAAE;UAAEU,WAAW,EAAE;QAAY;MAC7C,CAAC;MACD,UAAU,EAAE;QACVb,IAAI,EAAE,UAAU;QAChBC,QAAQ,EAAE,YAAY;QACtBC,WAAW,EAAE7C,OAAO;QACpB8C,cAAc,EAAE;UAAEW,MAAM,EAAE,EAAE;UAAEC,SAAS,EAAE;QAAK;MAChD,CAAC;MAED;MACA,aAAa,EAAE;QACbf,IAAI,EAAE,aAAa;QACnBC,QAAQ,EAAE,cAAc;QACxBC,WAAW,EAAE5C,UAAU;QACvB6C,cAAc,EAAE;UAAEa,WAAW,EAAE,EAAE;UAAEC,YAAY,EAAE;QAAiB;MACpE,CAAC;MACD,eAAe,EAAE;QACfjB,IAAI,EAAE,eAAe;QACrBC,QAAQ,EAAE,cAAc;QACxBC,WAAW,EAAE3C,YAAY;QACzB4C,cAAc,EAAE,CAAE;MACpB,CAAC;MACD,iBAAiB,EAAE;QACjBH,IAAI,EAAE,iBAAiB;QACvBC,QAAQ,EAAE,cAAc;QACxBC,WAAW,EAAE1C,cAAc;QAC3B2C,cAAc,EAAE,CAAE;MACpB,CAAC;MACD,YAAY,EAAE;QACZH,IAAI,EAAE,YAAY;QAClBC,QAAQ,EAAE,cAAc;QACxBC,WAAW,EAAEzC,SAAS;QACtB0C,cAAc,EAAE;UAAEe,KAAK,EAAE,EAAE;UAAEC,oBAAoB,EAAE;QAAM;MAC3D,CAAC;MAED;MACA,cAAc,EAAE;QACdnB,IAAI,EAAE,cAAc;QACpBC,QAAQ,EAAE,SAAS;QACnBC,WAAW,EAAExC,WAAW;QACxByC,cAAc,EAAE;UAAEiB,gBAAgB,EAAE;QAAK;MAC3C,CAAC;MACD,qBAAqB,EAAE;QACrBpB,IAAI,EAAE,qBAAqB;QAC3BC,QAAQ,EAAE,SAAS;QACnBC,WAAW,EAAEvC,gBAAgB;QAC7BwC,cAAc,EAAE,CAAE;MACpB,CAAC;MAED;MACA,WAAW,EAAE;QACXH,IAAI,EAAE,WAAW;QACjBC,QAAQ,EAAE,SAAS;QACnBC,WAAW,EAAEtC,QAAQ;QACrBuC,cAAc,EAAE;UAAEkB,aAAa,EAAE;QAAM;MACzC,CAAC;MACD,cAAc,EAAE;QACdrB,IAAI,EAAE,cAAc;QACpBC,QAAQ,EAAE,SAAS;QACnBC,WAAW,EAAErC,WAAW;QACxBsC,cAAc,EAAE,CAAE;MACpB,CAAC;MAED;MACA,cAAc,EAAE;QACdH,IAAI,EAAE,cAAc;QACpBC,QAAQ,EAAE,WAAW;QACrBC,WAAW,EAAEpC,WAAW;QACxBqC,cAAc,EAAE;UAAEd,aAAa,EAAE;QAAkB;MACrD,CAAC;MACD,mBAAmB,EAAE;QACnBW,IAAI,EAAE,mBAAmB;QACzBC,QAAQ,EAAE,WAAW;QACrBC,WAAW,EAAEnC,eAAe;QAC5BoC,cAAc,EAAE,CAAE;MACpB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF;AACA;AACA;EACE,MAAMmB,mBAAmB,GAAG5F,OAAO,CAAC,MAAM;IACxC,MAAM6F,UAAU,GAAG;MACjBC,UAAU,EAAE;QAAExB,IAAI,EAAE,kBAAkB;QAAEyB,UAAU,EAAE;MAAG,CAAC;MACxDC,YAAY,EAAE;QAAE1B,IAAI,EAAE,oBAAoB;QAAEyB,UAAU,EAAE;MAAG,CAAC;MAC5DE,OAAO,EAAE;QAAE3B,IAAI,EAAE,wBAAwB;QAAEyB,UAAU,EAAE;MAAG,CAAC;MAC3DG,OAAO,EAAE;QAAE5B,IAAI,EAAE,oBAAoB;QAAEyB,UAAU,EAAE;MAAG,CAAC;MACvDI,SAAS,EAAE;QAAE7B,IAAI,EAAE,sBAAsB;QAAEyB,UAAU,EAAE;MAAG;IAC5D,CAAC;;IAED;IACAK,MAAM,CAACC,OAAO,CAAChC,iBAAiB,CAAC,CAACiC,OAAO,CAAC,CAAC,CAACC,EAAE,EAAEC,IAAI,CAAC,KAAK;MACxD,IAAIX,UAAU,CAACW,IAAI,CAACjC,QAAQ,CAAC,EAAE;QAC7BsB,UAAU,CAACW,IAAI,CAACjC,QAAQ,CAAC,CAACwB,UAAU,CAACU,IAAI,CAAC;UACxCF,EAAE;UACFjC,IAAI,EAAEkC,IAAI,CAAClC;QACb,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IAEF,OAAOuB,UAAU;EACnB,CAAC,EAAE,CAACxB,iBAAiB,CAAC,CAAC;;EAEvB;AACF;AACA;AACA;EACE,MAAMqC,gBAAgB,GAAG1G,OAAO,CAAC,MAAM;IACrC,IAAI;MACF,MAAM2G,aAAa,GAAGtC,iBAAiB,CAACvB,eAAe,CAAC;MAExD,IAAI,CAAC6D,aAAa,EAAE;QAClBtD,OAAO,CAACD,KAAK,CAAC,wBAAwBN,eAAe,EAAE,CAAC;QACxD,OAAO,IAAI;MACb;;MAEA;MACA,MAAM8D,aAAa,GAAG;QACpB,GAAGD,aAAa,CAAClC,cAAc;QAC/B,GAAG1B;MACL,CAAC;;MAED;MACA,OAAO,IAAI4D,aAAa,CAACnC,WAAW,CAACoC,aAAa,CAAC;IACrD,CAAC,CAAC,OAAOxD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sCAAsCA,KAAK,CAACyD,OAAO,EAAE,CAAC;MACpEzC,QAAQ,CAAC;QAAEzB,IAAI,EAAE,WAAW;QAAEE,OAAO,EAAE,mCAAmCO,KAAK,CAACyD,OAAO;MAAG,CAAC,CAAC;MAC5F,OAAO,IAAI;IACb;EACF,CAAC,EAAE,CAACxC,iBAAiB,EAAEvB,eAAe,EAAEC,gBAAgB,CAAC,CAAC;;EAE1D;AACF;AACA;AACA;EACE,MAAM+D,qBAAqB,GAAG/G,WAAW,CAAEgH,WAAW,IAAK;IACzD,IAAI1C,iBAAiB,CAAC0C,WAAW,CAAC,EAAE;MAClC3C,QAAQ,CAAC;QAAEzB,IAAI,EAAE,sBAAsB;QAAEE,OAAO,EAAEkE;MAAY,CAAC,CAAC;;MAEhE;MACA,MAAMtC,cAAc,GAAGJ,iBAAiB,CAAC0C,WAAW,CAAC,CAACtC,cAAc;MACpEL,QAAQ,CAAC;QAAEzB,IAAI,EAAE,uBAAuB;QAAEE,OAAO,EAAE4B;MAAe,CAAC,CAAC;IACtE,CAAC,MAAM;MACLpB,OAAO,CAACD,KAAK,CAAC,sBAAsB2D,WAAW,EAAE,CAAC;MAClD3C,QAAQ,CAAC;QACPzB,IAAI,EAAE,WAAW;QACjBE,OAAO,EAAE,sBAAsBkE,WAAW;MAC5C,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAC1C,iBAAiB,CAAC,CAAC;;EAEvB;AACF;AACA;AACA;EACE,MAAM2C,gBAAgB,GAAGjH,WAAW,CAAEkH,IAAI,IAAK;IAC7C,IAAI,CAAC,YAAY,EAAE,YAAY,EAAE,aAAa,CAAC,CAACC,QAAQ,CAACD,IAAI,CAAC,EAAE;MAC9D7C,QAAQ,CAAC;QAAEzB,IAAI,EAAE,iBAAiB;QAAEE,OAAO,EAAEoE;MAAK,CAAC,CAAC;IACtD,CAAC,MAAM;MACL5D,OAAO,CAACD,KAAK,CAAC,iBAAiB6D,IAAI,EAAE,CAAC;IACxC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF;AACA;AACA;EACE,MAAME,4BAA4B,GAAGpH,WAAW,CAAEqH,OAAO,IAAK;IAC5DhD,QAAQ,CAAC;MAAEzB,IAAI,EAAE,uBAAuB;MAAEE,OAAO,EAAEuE;IAAQ,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF;AACA;AACA;EACE,MAAMC,gCAAgC,GAAGtH,WAAW,CAAEqH,OAAO,IAAK;IAChEhD,QAAQ,CAAC;MAAEzB,IAAI,EAAE,2BAA2B;MAAEE,OAAO,EAAEuE;IAAQ,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF;AACA;AACA;EACE,MAAME,mBAAmB,GAAGvH,WAAW,CAAEwH,OAAO,IAAK;IACnDnD,QAAQ,CAAC;MAAEzB,IAAI,EAAE,yBAAyB;MAAEE,OAAO,EAAE0E;IAAQ,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF;AACA;EACE,MAAMC,sBAAsB,GAAGzH,WAAW,CAAC,MAAM;IAC/CqE,QAAQ,CAAC;MAAEzB,IAAI,EAAE;IAA2B,CAAC,CAAC;EAChD,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF;AACA;AACA;EACE,MAAM8E,iBAAiB,GAAG1H,WAAW,CAAE2H,QAAQ,IAAK;IAClD,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAACR,QAAQ,CAACQ,QAAQ,CAAC,EAAE;MACxCtD,QAAQ,CAAC;QAAEzB,IAAI,EAAE,WAAW;QAAEE,OAAO,EAAE6E;MAAS,CAAC,CAAC;MAClD;MACAC,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEH,QAAQ,CAAC;IAC/D;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF;AACA;EACE,MAAMI,kBAAkB,GAAG/H,WAAW,CAAC,MAAM;IAC3CqE,QAAQ,CAAC;MAAEzB,IAAI,EAAE;IAAc,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF;AACA;EACE7C,SAAS,CAAC,MAAM;IACd6H,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAE3E,KAAK,CAAC;EAC5D,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;AACF;AACA;AACA;AACA;EACE,MAAM6E,WAAW,GAAGhI,WAAW,CAAC,CAACqD,KAAK,EAAEoD,IAAI,KAAK;IAC/CnD,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,EAAEoD,IAAI,CAAC;IAC9CpC,QAAQ,CAAC;MACPzB,IAAI,EAAE,WAAW;MACjBE,OAAO,EAAE,sBAAsBO,KAAK,CAACyD,OAAO;IAC9C,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMmB,qBAAqB,GAAGhI,OAAO,CAAC,OAAO;IAC3C0G,gBAAgB;IAChBrC,iBAAiB;IACjBuB,mBAAmB;IACnB9C,eAAe;IACfC,gBAAgB;IAChBkF,iBAAiB,EAAEnB,qBAAqB;IACxCoB,eAAe,EAAEf;EACnB,CAAC,CAAC,EAAE,CACFT,gBAAgB,EAChBrC,iBAAiB,EACjBuB,mBAAmB,EACnB9C,eAAe,EACfC,gBAAgB,EAChB+D,qBAAqB,EACrBK,4BAA4B,CAC7B,CAAC;EAEF,MAAMgB,kBAAkB,GAAGnI,OAAO,CAAC,OAAO;IACxCgD,oBAAoB;IACpBkF,eAAe,EAAEb,gCAAgC;IACjDlE,kBAAkB;IAClBiF,eAAe,EAAEd;EACnB,CAAC,CAAC,EAAE,CACFtE,oBAAoB,EACpBqE,gCAAgC,EAChClE,kBAAkB,EAClBmE,mBAAmB,CACpB,CAAC;EAEF,MAAMe,iBAAiB,GAAGrI,OAAO,CAAC,OAAO;IACvCkD,KAAK;IACLoF,aAAa,EAAEb;EACjB,CAAC,CAAC,EAAE,CAACvE,KAAK,EAAEuE,iBAAiB,CAAC,CAAC;EAE/B,oBACE7H,KAAA,CAAA2I,aAAA,CAACrI,aAAa;IACZsI,iBAAiB,EAAEjG,aAAc;IACjCkG,OAAO,EAAEV,WAAY;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAErBnJ,KAAA,CAAA2I,aAAA,CAACpI,aAAa;IAAC6I,KAAK,EAAEX,iBAAkB;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtCnJ,KAAA,CAAA2I,aAAA,CAACnI,iBAAiB;IAAC4I,KAAK,EAAEhB,qBAAsB;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9CnJ,KAAA,CAAA2I,aAAA,CAAClI,qBAAqB;IAAC2I,KAAK,EAAEb,kBAAmB;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/CnJ,KAAA,CAAA2I,aAAA;IAAKU,SAAS,EAAE,OAAO/F,KAAK,EAAG;IAAAwF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BnJ,KAAA,CAAA2I,aAAA,CAAC5H,SAAS;IACRiC,UAAU,EAAEA,UAAW;IACvBsG,YAAY,EAAElC,gBAAiB;IAC/BsB,aAAa,EAAEb,iBAAkB;IACjC0B,YAAY,EAAEjG,KAAM;IAAAwF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACrB,CAAC,eAEFnJ,KAAA,CAAA2I,aAAA;IAAMU,SAAS,EAAC,UAAU;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEvB3F,KAAK,iBACJxD,KAAA,CAAA2I,aAAA;IAAKU,SAAS,EAAC,oBAAoB;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjCnJ,KAAA,CAAA2I,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI3F,KAAS,CAAC,eACdxD,KAAA,CAAA2I,aAAA;IAAQa,OAAO,EAAEtB,kBAAmB;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAAe,CACjD,CACN,eAGDnJ,KAAA,CAAA2I,aAAA;IAAKU,SAAS,EAAC,SAAS;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtBnJ,KAAA,CAAA2I,aAAA,CAAC/H,iBAAiB;IAChBqF,UAAU,EAAED,mBAAoB;IAChC9C,eAAe,EAAEA,eAAgB;IACjCmF,iBAAiB,EAAEnB,qBAAsB;IAAA4B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC1C,CAAC,EAED5F,kBAAkB,iBACjBvD,KAAA,CAAA2I,aAAA,CAAC9H,kBAAkB;IACjB8G,OAAO,EAAEpE,kBAAmB;IAC5BwD,aAAa,EAAED,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAE2C,OAAO,CAAC,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC5C,CAEA,CAAC,eAGNnJ,KAAA,CAAA2I,aAAA;IAAKU,SAAS,EAAC,cAAc;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1BnG,UAAU,KAAK,YAAY,IAAI8D,gBAAgB,iBAC9C9G,KAAA,CAAA2I,aAAA,CAACjI,iBAAiB;IAChBgJ,SAAS,EAAE5C,gBAAiB;IAC5BU,OAAO,EAAEpE,oBAAqB;IAC9BoF,eAAe,EAAEd,mBAAoB;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACtC,CACF,EAEAnG,UAAU,KAAK,YAAY,iBAC1BhD,KAAA,CAAA2I,aAAA,CAAChI,mBAAmB;IAClBwG,WAAW,EAAEjE,eAAgB;IAC7BsE,OAAO,EAAE;MACP,GAAGrE,gBAAgB;MACnBwG,aAAa,EAAEvG;IACjB,CAAE;IAAA0F,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CACF,EAEAnG,UAAU,KAAK,aAAa,iBAC3BhD,KAAA,CAAA2I,aAAA;IAAKU,SAAS,EAAC,kBAAkB;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE/BnJ,KAAA,CAAA2I,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,0BAAwB,GAAA5E,qBAAA,GAACE,iBAAiB,CAACvB,eAAe,CAAC,cAAAqB,qBAAA,uBAAlCA,qBAAA,CAAoCG,IAAS,CAAC,eAC3E1E,KAAA,CAAA2I,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,qFAAsF,CACtF,CAEJ,CAAC,EAGL9F,oBAAoB,IAAIyD,gBAAgB,iBACvC9G,KAAA,CAAA2I,aAAA,CAAC7H,gBAAgB;IACf4I,SAAS,EAAE5C,gBAAiB;IAC5B8C,OAAO,EAAEhC,sBAAuB;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACjC,CAEC,CAAC,eAEPnJ,KAAA,CAAA2I,aAAA,CAAC3H,SAAS;IAAA8H,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACT,CACgB,CACN,CACN,CACF,CAAC;AAEpB;AAEA,eAAe7E,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}