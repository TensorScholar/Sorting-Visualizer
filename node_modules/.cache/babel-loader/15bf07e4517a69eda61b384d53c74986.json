{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/SortingVisualizer.js\";\n// src/components/SortingVisualizer.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { WebGLRenderer } from '../visualization/renderers/webgl-renderer';\nimport { ArrayRenderer } from '../visualization/renderers/array-renderer';\nimport { generateDataSet } from '../data/generators';\n\n// Import with proper PascalCase naming convention\nimport HeapVisualizer from '../visualization/components/HeapVisualizer';\n\n// Fallback import for systems with case sensitivity issues\nlet HeapVisualizerComponent = HeapVisualizer;\nif (!HeapVisualizerComponent) {\n  try {\n    HeapVisualizerComponent = require('../visualization/components/heap-visualizer').default;\n  } catch (e) {\n    console.error('Failed to import HeapVisualizer component:', e);\n    // Provide a fallback implementation if needed\n    HeapVisualizerComponent = () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 37\n      }\n    }, \"Heap visualization unavailable\");\n  }\n}\nimport './SortingVisualizer.css';\n\n/**\n * Enhanced component for visualizing sorting algorithms with specialized views\n * for different algorithm types\n */\nconst SortingVisualizer = ({\n  algorithm,\n  options = {},\n  width = 800,\n  height = 400\n}) => {\n  // State and logic implementation...\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sorting-visualizer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, showHeapView && heapStructure && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heap-view-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Binary Heap Structure\"), /*#__PURE__*/React.createElement(HeapVisualizerComponent, {\n    heapStructure: heapStructure,\n    width: width,\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })));\n};\nexport default SortingVisualizer;","map":{"version":3,"names":["React","useState","useEffect","useRef","WebGLRenderer","ArrayRenderer","generateDataSet","HeapVisualizer","HeapVisualizerComponent","require","default","e","console","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","SortingVisualizer","algorithm","options","width","height","className","showHeapView","heapStructure"],"sources":["/Users/mohammadatashi/Documents/GitHub/Advanced-Algorithms-Laboratory/sorting-visualizer/src/components/SortingVisualizer.js"],"sourcesContent":["// src/components/SortingVisualizer.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { WebGLRenderer } from '../visualization/renderers/webgl-renderer';\nimport { ArrayRenderer } from '../visualization/renderers/array-renderer';\nimport { generateDataSet } from '../data/generators';\n\n// Import with proper PascalCase naming convention\nimport HeapVisualizer from '../visualization/components/HeapVisualizer';\n\n// Fallback import for systems with case sensitivity issues\nlet HeapVisualizerComponent = HeapVisualizer;\nif (!HeapVisualizerComponent) {\n  try {\n    HeapVisualizerComponent = require('../visualization/components/heap-visualizer').default;\n  } catch (e) {\n    console.error('Failed to import HeapVisualizer component:', e);\n    // Provide a fallback implementation if needed\n    HeapVisualizerComponent = () => <div>Heap visualization unavailable</div>;\n  }\n}\n\nimport './SortingVisualizer.css';\n\n/**\n * Enhanced component for visualizing sorting algorithms with specialized views\n * for different algorithm types\n */\nconst SortingVisualizer = ({ \n  algorithm, \n  options = {},\n  width = 800,\n  height = 400\n}) => {\n  // State and logic implementation...\n  \n  return (\n    <div className=\"sorting-visualizer\">\n      {/* Component implementation */}\n      \n      {/* Use the properly imported HeapVisualizer component */}\n      {showHeapView && heapStructure && (\n        <div className=\"heap-view-container\">\n          <h4>Binary Heap Structure</h4>\n          <HeapVisualizerComponent \n            heapStructure={heapStructure} \n            width={width} \n            height={300} \n          />\n        </div>\n      )}\n      \n      {/* Rest of component implementation */}\n    </div>\n  );\n};\n\nexport default SortingVisualizer;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,aAAa,QAAQ,2CAA2C;AACzE,SAASC,aAAa,QAAQ,2CAA2C;AACzE,SAASC,eAAe,QAAQ,oBAAoB;;AAEpD;AACA,OAAOC,cAAc,MAAM,4CAA4C;;AAEvE;AACA,IAAIC,uBAAuB,GAAGD,cAAc;AAC5C,IAAI,CAACC,uBAAuB,EAAE;EAC5B,IAAI;IACFA,uBAAuB,GAAGC,OAAO,CAAC,6CAA6C,CAAC,CAACC,OAAO;EAC1F,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,4CAA4C,EAAEF,CAAC,CAAC;IAC9D;IACAH,uBAAuB,GAAGA,CAAA,kBAAMR,KAAA,CAAAc,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAK,gCAAmC,CAAC;EAC3E;AACF;AAEA,OAAO,yBAAyB;;AAEhC;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,GAAGA,CAAC;EACzBC,SAAS;EACTC,OAAO,GAAG,CAAC,CAAC;EACZC,KAAK,GAAG,GAAG;EACXC,MAAM,GAAG;AACX,CAAC,KAAK;EACJ;;EAEA,oBACEzB,KAAA,CAAAc,aAAA;IAAKY,SAAS,EAAC,oBAAoB;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAIhCO,YAAY,IAAIC,aAAa,iBAC5B5B,KAAA,CAAAc,aAAA;IAAKY,SAAS,EAAC,qBAAqB;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClCpB,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,uBAAyB,CAAC,eAC9BpB,KAAA,CAAAc,aAAA,CAACN,uBAAuB;IACtBoB,aAAa,EAAEA,aAAc;IAC7BJ,KAAK,EAAEA,KAAM;IACbC,MAAM,EAAE,GAAI;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACb,CACE,CAIJ,CAAC;AAEV,CAAC;AAED,eAAeC,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}